{"version":3,"sources":["./src/app/admin/pages/order-details/order-details.component.ts","./src/app/admin/pages/order-details/order-details.component.html","./src/app/admin/admin-routing.module.ts","./node_modules/@angular/material/__ivy_ngcc__/fesm2015/slide-toggle.js","./src/app/admin/pages/order-list/order-list.component.ts","./src/app/admin/pages/order-list/order-list.component.html","./src/app/admin/services/order-admin.service.ts","./src/app/admin/admin.module.ts","./src/app/admin/services/product.service.ts","./src/app/admin/pages/products-list/products-list.component.ts","./src/app/admin/pages/products-list/products-list.component.html"],"names":[],"mappings":"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","file":"admin-admin-module.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Order } from '@models/order';\r\nimport { take, tap } from 'rxjs/operators';\r\n\r\nimport { OrderAdminService } from './../../services/order-admin.service';\r\n\r\n@Component({\r\n  selector: 'app-order-details',\r\n  templateUrl: './order-details.component.html',\r\n  styleUrls: ['./order-details.component.scss'],\r\n})\r\nexport class OrderDetailsComponent implements OnInit {\r\n  public orderData!: Order;\r\n  constructor(\r\n    public router: Router,\r\n    private route: ActivatedRoute,\r\n    private orderAdminService: OrderAdminService\r\n  ) {\r\n    if (this.router.getCurrentNavigation()?.extras.state) {\r\n      this.orderData = this.router.getCurrentNavigation()?.extras\r\n        .state as Order;\r\n    } else {\r\n      this.orderAdminService\r\n        .getOrderById(this.route.snapshot.params.orderId)\r\n        .pipe(\r\n          take(1),\r\n          tap((order: Order) => {\r\n            this.orderData = order;\r\n          })\r\n        )\r\n        .subscribe();\r\n    }\r\n  }\r\n\r\n  ngOnInit(): void {}\r\n}\r\n","<div fxLayout=\"row wrap\" fxLayoutAlign=\"center center\">\r\n  <div\r\n    fxFlex=\"5\"\r\n    class=\"goBack\"\r\n    (click)=\"router.navigate(['admin/liste-commandes'])\"\r\n  >\r\n    <mat-icon>keyboard_backspace</mat-icon>\r\n  </div>\r\n  <h2 fxFlex=\"80\">Détail de commande</h2>\r\n  <div fxFlex=\"5\"></div>\r\n</div>\r\n<div fxLayout=\"row\" fxLayoutAlign=\"center center\" *ngIf=\"!orderData\">\r\n  <mat-spinner></mat-spinner>\r\n</div>\r\n<mat-card *ngIf=\"orderData\" fxFlex=\"87\">\r\n  <mat-card-title fxLayout=\"row wrap\" fxLayoutAlign=\"space-between center\">\r\n    <div>\r\n      {{ orderData.name }}\r\n    </div>\r\n    <div>\r\n      Livraison le {{ orderData.deliveryDate.toDate() | date: \"EEEE d MMMM y\"\r\n      }}{{ orderData?.deliveryTime ? \" à \" + orderData.deliveryTime : \"\" }}\r\n    </div>\r\n  </mat-card-title>\r\n  <mat-card-subtitle fxLayout=\"row wrap\" fxLayoutAlign=\"space-between center\">\r\n    <div>Tel: {{ orderData.phone }}</div>\r\n    <div>\r\n      Commandé le {{ orderData.orderDate.toDate() | date: \"EEEE d MMMM y\" }} à\r\n      {{ orderData.orderDate.toDate() | date: \"h:mm\" }}\r\n    </div>\r\n  </mat-card-subtitle>\r\n  <mat-card-content fxLayout=\"row wrap\" fxLayoutAlign=\"space-between baseline\">\r\n    <div *ngIf=\"!orderData.deliveryAddress; else mulitpleAddress\">\r\n      <div>Adresse de livraison et facturation :</div>\r\n      <div class=\"address\">\r\n        {{ orderData.address.street }}\r\n      </div>\r\n      <div class=\"address\">\r\n        <span>\r\n          {{ orderData.address.zipCode }}\r\n        </span>\r\n        <span>\r\n          {{ orderData.address.city }}\r\n        </span>\r\n      </div>\r\n    </div>\r\n    <ng-template #mulitpleAddress>\r\n      <div>\r\n        <div>Adresse de facturation :</div>\r\n        <div class=\"address\">{{ orderData.address.street }}</div>\r\n        <div class=\"address\">\r\n          <span>\r\n            {{ orderData.address.zipCode }}\r\n          </span>\r\n          <span>\r\n            {{ orderData.address.city }}\r\n          </span>\r\n        </div>\r\n      </div>\r\n      <div>\r\n        <div class=\"addressTitle\">Adresse de livraison :</div>\r\n        <div class=\"address\">{{ orderData.deliveryAddress.street }}</div>\r\n        <div class=\"address\">\r\n          <span>\r\n            {{ orderData.deliveryAddress.zipCode }}\r\n          </span>\r\n          <span>\r\n            {{ orderData.deliveryAddress.city }}\r\n          </span>\r\n        </div>\r\n      </div>\r\n    </ng-template>\r\n  </mat-card-content>\r\n  <mat-card-title *ngIf=\"orderData.orderComment\" class=\"productTitle\"\r\n    >Commentaires</mat-card-title\r\n  >\r\n  <div *ngIf=\"orderData.orderComment\">\r\n    <pre>{{ orderData.orderComment }}</pre>\r\n  </div>\r\n  <mat-card-title class=\"productTitle\">Produits</mat-card-title>\r\n  <mat-card-content\r\n    fxLayout=\"column wrap\"\r\n    fxLayoutAlign=\"space-between baseline\"\r\n  >\r\n    <div\r\n      class=\"productElem\"\r\n      fxLayout=\"row wrap\"\r\n      fxLayoutAlign=\"flex-start center\"\r\n      *ngFor=\"let elem of orderData.order\"\r\n    >\r\n      -&nbsp;{{ elem?.product }}&nbsp;:&nbsp;\r\n      {{ elem?.quantity }}\r\n      &nbsp;{{ elem?.unit\r\n      }}<span *ngIf=\"elem && elem.quantity && elem.quantity > 0\">s</span>\r\n    </div>\r\n  </mat-card-content>\r\n  <mat-card-title fxLayoutAlign=\"flex-end\"\r\n    >Prix total: {{ orderData?.totalPrice?.toFixed(2) }} € H.T.</mat-card-title\r\n  >\r\n</mat-card>\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { OrderDetailsComponent } from './pages/order-details/order-details.component';\r\nimport { OrderListComponent } from './pages/order-list/order-list.component';\r\nimport { ProductsListComponent } from './pages/products-list/products-list.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', redirectTo: 'liste-commandes', pathMatch: 'full' },\r\n  { path: 'produits', component: ProductsListComponent },\r\n  { path: 'liste-commandes', component: OrderListComponent },\r\n  { path: 'liste-commandes/:orderId', component: OrderDetailsComponent },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class AdminRoutingModule {}\r\n","import { ObserversModule } from '@angular/cdk/observers';\nimport { InjectionToken, forwardRef, EventEmitter, Component, ViewEncapsulation, ChangeDetectionStrategy, ElementRef, ChangeDetectorRef, Attribute, Inject, Optional, ViewChild, Input, Output, Directive, NgModule } from '@angular/core';\nimport { mixinTabIndex, mixinColor, mixinDisableRipple, mixinDisabled, MatRippleModule, MatCommonModule } from '@angular/material/core';\nimport { FocusMonitor } from '@angular/cdk/a11y';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { NG_VALUE_ACCESSOR, NG_VALIDATORS, CheckboxRequiredValidator } from '@angular/forms';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Injection token to be used to override the default options for `mat-slide-toggle`. */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/a11y';\nimport * as ɵngcc2 from '@angular/material/core';\nimport * as ɵngcc3 from '@angular/cdk/observers';\n\nconst _c0 = [\"thumbContainer\"];\nconst _c1 = [\"toggleBar\"];\nconst _c2 = [\"input\"];\nconst _c3 = function () { return { enterDuration: 150 }; };\nconst _c4 = [\"*\"];\nconst MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS = new InjectionToken('mat-slide-toggle-default-options', {\n    providedIn: 'root',\n    factory: () => ({ disableToggleValue: false })\n});\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Increasing integer for generating unique ids for slide-toggle components.\nlet nextUniqueId = 0;\n/** @docs-private */\nconst MAT_SLIDE_TOGGLE_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => MatSlideToggle),\n    multi: true\n};\n/** Change event object emitted by a MatSlideToggle. */\nclass MatSlideToggleChange {\n    constructor(\n    /** The source MatSlideToggle of the event. */\n    source, \n    /** The new `checked` value of the MatSlideToggle. */\n    checked) {\n        this.source = source;\n        this.checked = checked;\n    }\n}\n// Boilerplate for applying mixins to MatSlideToggle.\n/** @docs-private */\nclass MatSlideToggleBase {\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}\nconst _MatSlideToggleMixinBase = mixinTabIndex(mixinColor(mixinDisableRipple(mixinDisabled(MatSlideToggleBase)), 'accent'));\n/** Represents a slidable \"switch\" toggle that can be moved between on and off. */\nclass MatSlideToggle extends _MatSlideToggleMixinBase {\n    constructor(elementRef, _focusMonitor, _changeDetectorRef, tabIndex, defaults, _animationMode) {\n        super(elementRef);\n        this._focusMonitor = _focusMonitor;\n        this._changeDetectorRef = _changeDetectorRef;\n        this.defaults = defaults;\n        this._animationMode = _animationMode;\n        this._onChange = (_) => { };\n        this._onTouched = () => { };\n        this._uniqueId = `mat-slide-toggle-${++nextUniqueId}`;\n        this._required = false;\n        this._checked = false;\n        /** Name value will be applied to the input element if present. */\n        this.name = null;\n        /** A unique id for the slide-toggle input. If none is supplied, it will be auto-generated. */\n        this.id = this._uniqueId;\n        /** Whether the label should appear after or before the slide-toggle. Defaults to 'after'. */\n        this.labelPosition = 'after';\n        /** Used to set the aria-label attribute on the underlying input element. */\n        this.ariaLabel = null;\n        /** Used to set the aria-labelledby attribute on the underlying input element. */\n        this.ariaLabelledby = null;\n        /** An event will be dispatched each time the slide-toggle changes its value. */\n        this.change = new EventEmitter();\n        /**\n         * An event will be dispatched each time the slide-toggle input is toggled.\n         * This event is always emitted when the user toggles the slide toggle, but this does not mean\n         * the slide toggle's value has changed.\n         */\n        this.toggleChange = new EventEmitter();\n        this.tabIndex = parseInt(tabIndex) || 0;\n    }\n    /** Whether the slide-toggle is required. */\n    get required() { return this._required; }\n    set required(value) { this._required = coerceBooleanProperty(value); }\n    /** Whether the slide-toggle element is checked or not. */\n    get checked() { return this._checked; }\n    set checked(value) {\n        this._checked = coerceBooleanProperty(value);\n        this._changeDetectorRef.markForCheck();\n    }\n    /** Returns the unique id for the visual hidden input. */\n    get inputId() { return `${this.id || this._uniqueId}-input`; }\n    ngAfterContentInit() {\n        this._focusMonitor\n            .monitor(this._elementRef, true)\n            .subscribe(focusOrigin => {\n            // Only forward focus manually when it was received programmatically or through the\n            // keyboard. We should not do this for mouse/touch focus for two reasons:\n            // 1. It can prevent clicks from landing in Chrome (see #18269).\n            // 2. They're already handled by the wrapping `label` element.\n            if (focusOrigin === 'keyboard' || focusOrigin === 'program') {\n                this._inputElement.nativeElement.focus();\n            }\n            else if (!focusOrigin) {\n                // When a focused element becomes disabled, the browser *immediately* fires a blur event.\n                // Angular does not expect events to be raised during change detection, so any state\n                // change (such as a form control's 'ng-touched') will cause a changed-after-checked\n                // error. See https://github.com/angular/angular/issues/17793. To work around this,\n                // we defer telling the form control it has been touched until the next tick.\n                Promise.resolve().then(() => this._onTouched());\n            }\n        });\n    }\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._elementRef);\n    }\n    /** Method being called whenever the underlying input emits a change event. */\n    _onChangeEvent(event) {\n        // We always have to stop propagation on the change event.\n        // Otherwise the change event, from the input element, will bubble up and\n        // emit its event object to the component's `change` output.\n        event.stopPropagation();\n        this.toggleChange.emit();\n        // When the slide toggle's config disables toggle change event by setting\n        // `disableToggleValue: true`, the slide toggle's value does not change, and the\n        // checked state of the underlying input needs to be changed back.\n        if (this.defaults.disableToggleValue) {\n            this._inputElement.nativeElement.checked = this.checked;\n            return;\n        }\n        // Sync the value from the underlying input element with the component instance.\n        this.checked = this._inputElement.nativeElement.checked;\n        // Emit our custom change event only if the underlying input emitted one. This ensures that\n        // there is no change event, when the checked state changes programmatically.\n        this._emitChangeEvent();\n    }\n    /** Method being called whenever the slide-toggle has been clicked. */\n    _onInputClick(event) {\n        // We have to stop propagation for click events on the visual hidden input element.\n        // By default, when a user clicks on a label element, a generated click event will be\n        // dispatched on the associated input element. Since we are using a label element as our\n        // root container, the click event on the `slide-toggle` will be executed twice.\n        // The real click event will bubble up, and the generated click event also tries to bubble up.\n        // This will lead to multiple click events.\n        // Preventing bubbling for the second event will solve that issue.\n        event.stopPropagation();\n    }\n    /** Implemented as part of ControlValueAccessor. */\n    writeValue(value) {\n        this.checked = !!value;\n    }\n    /** Implemented as part of ControlValueAccessor. */\n    registerOnChange(fn) {\n        this._onChange = fn;\n    }\n    /** Implemented as part of ControlValueAccessor. */\n    registerOnTouched(fn) {\n        this._onTouched = fn;\n    }\n    /** Implemented as a part of ControlValueAccessor. */\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n        this._changeDetectorRef.markForCheck();\n    }\n    /** Focuses the slide-toggle. */\n    focus(options) {\n        this._focusMonitor.focusVia(this._inputElement, 'keyboard', options);\n    }\n    /** Toggles the checked state of the slide-toggle. */\n    toggle() {\n        this.checked = !this.checked;\n        this._onChange(this.checked);\n    }\n    /**\n     * Emits a change event on the `change` output. Also notifies the FormControl about the change.\n     */\n    _emitChangeEvent() {\n        this._onChange(this.checked);\n        this.change.emit(new MatSlideToggleChange(this, this.checked));\n    }\n    /** Method being called whenever the label text changes. */\n    _onLabelTextChange() {\n        // Since the event of the `cdkObserveContent` directive runs outside of the zone, the\n        // slide-toggle component will be only marked for check, but no actual change detection runs\n        // automatically. Instead of going back into the zone in order to trigger a change detection\n        // which causes *all* components to be checked (if explicitly marked or not using OnPush),\n        // we only trigger an explicit change detection for the slide-toggle view and its children.\n        this._changeDetectorRef.detectChanges();\n    }\n}\nMatSlideToggle.ɵfac = function MatSlideToggle_Factory(t) { return new (t || MatSlideToggle)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵinjectAttribute('tabindex'), ɵngcc0.ɵɵdirectiveInject(MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatSlideToggle.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatSlideToggle, selectors: [[\"mat-slide-toggle\"]], viewQuery: function MatSlideToggle_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, true);\n        ɵngcc0.ɵɵviewQuery(_c1, true);\n        ɵngcc0.ɵɵviewQuery(_c2, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._thumbEl = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._thumbBarEl = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._inputElement = _t.first);\n    } }, hostAttrs: [1, \"mat-slide-toggle\"], hostVars: 12, hostBindings: function MatSlideToggle_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"id\", ctx.id);\n        ɵngcc0.ɵɵattribute(\"tabindex\", ctx.disabled ? null : -1)(\"aria-label\", null)(\"aria-labelledby\", null);\n        ɵngcc0.ɵɵclassProp(\"mat-checked\", ctx.checked)(\"mat-disabled\", ctx.disabled)(\"mat-slide-toggle-label-before\", ctx.labelPosition == \"before\")(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n    } }, inputs: { disabled: \"disabled\", disableRipple: \"disableRipple\", color: \"color\", tabIndex: \"tabIndex\", name: \"name\", id: \"id\", labelPosition: \"labelPosition\", ariaLabel: [\"aria-label\", \"ariaLabel\"], ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"], required: \"required\", checked: \"checked\" }, outputs: { change: \"change\", toggleChange: \"toggleChange\" }, exportAs: [\"matSlideToggle\"], features: [ɵngcc0.ɵɵProvidersFeature([MAT_SLIDE_TOGGLE_VALUE_ACCESSOR]), ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c4, decls: 16, vars: 18, consts: [[1, \"mat-slide-toggle-label\"], [\"label\", \"\"], [1, \"mat-slide-toggle-bar\"], [\"toggleBar\", \"\"], [\"type\", \"checkbox\", \"role\", \"switch\", 1, \"mat-slide-toggle-input\", \"cdk-visually-hidden\", 3, \"id\", \"required\", \"tabIndex\", \"checked\", \"disabled\", \"change\", \"click\"], [\"input\", \"\"], [1, \"mat-slide-toggle-thumb-container\"], [\"thumbContainer\", \"\"], [1, \"mat-slide-toggle-thumb\"], [\"mat-ripple\", \"\", 1, \"mat-slide-toggle-ripple\", \"mat-focus-indicator\", 3, \"matRippleTrigger\", \"matRippleDisabled\", \"matRippleCentered\", \"matRippleRadius\", \"matRippleAnimation\"], [1, \"mat-ripple-element\", \"mat-slide-toggle-persistent-ripple\"], [1, \"mat-slide-toggle-content\", 3, \"cdkObserveContent\"], [\"labelContent\", \"\"], [2, \"display\", \"none\"]], template: function MatSlideToggle_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"label\", 0, 1);\n        ɵngcc0.ɵɵelementStart(2, \"div\", 2, 3);\n        ɵngcc0.ɵɵelementStart(4, \"input\", 4, 5);\n        ɵngcc0.ɵɵlistener(\"change\", function MatSlideToggle_Template_input_change_4_listener($event) { return ctx._onChangeEvent($event); })(\"click\", function MatSlideToggle_Template_input_click_4_listener($event) { return ctx._onInputClick($event); });\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(6, \"div\", 6, 7);\n        ɵngcc0.ɵɵelement(8, \"div\", 8);\n        ɵngcc0.ɵɵelementStart(9, \"div\", 9);\n        ɵngcc0.ɵɵelement(10, \"div\", 10);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(11, \"span\", 11, 12);\n        ɵngcc0.ɵɵlistener(\"cdkObserveContent\", function MatSlideToggle_Template_span_cdkObserveContent_11_listener() { return ctx._onLabelTextChange(); });\n        ɵngcc0.ɵɵelementStart(13, \"span\", 13);\n        ɵngcc0.ɵɵtext(14, \"\\u00A0\");\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵprojection(15);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        const _r0 = ɵngcc0.ɵɵreference(1);\n        const _r4 = ɵngcc0.ɵɵreference(12);\n        ɵngcc0.ɵɵattribute(\"for\", ctx.inputId);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵclassProp(\"mat-slide-toggle-bar-no-side-margin\", !_r4.textContent || !_r4.textContent.trim());\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"id\", ctx.inputId)(\"required\", ctx.required)(\"tabIndex\", ctx.tabIndex)(\"checked\", ctx.checked)(\"disabled\", ctx.disabled);\n        ɵngcc0.ɵɵattribute(\"name\", ctx.name)(\"aria-checked\", ctx.checked.toString())(\"aria-label\", ctx.ariaLabel)(\"aria-labelledby\", ctx.ariaLabelledby);\n        ɵngcc0.ɵɵadvance(5);\n        ɵngcc0.ɵɵproperty(\"matRippleTrigger\", _r0)(\"matRippleDisabled\", ctx.disableRipple || ctx.disabled)(\"matRippleCentered\", true)(\"matRippleRadius\", 20)(\"matRippleAnimation\", ɵngcc0.ɵɵpureFunction0(17, _c3));\n    } }, directives: [ɵngcc2.MatRipple, ɵngcc3.CdkObserveContent], styles: [\".mat-slide-toggle{display:inline-block;height:24px;max-width:100%;line-height:24px;white-space:nowrap;outline:none;-webkit-tap-highlight-color:transparent}.mat-slide-toggle.mat-checked .mat-slide-toggle-thumb-container{transform:translate3d(16px, 0, 0)}[dir=rtl] .mat-slide-toggle.mat-checked .mat-slide-toggle-thumb-container{transform:translate3d(-16px, 0, 0)}.mat-slide-toggle.mat-disabled{opacity:.38}.mat-slide-toggle.mat-disabled .mat-slide-toggle-label,.mat-slide-toggle.mat-disabled .mat-slide-toggle-thumb-container{cursor:default}.mat-slide-toggle-label{display:flex;flex:1;flex-direction:row;align-items:center;height:inherit;cursor:pointer}.mat-slide-toggle-content{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.mat-slide-toggle-label-before .mat-slide-toggle-label{order:1}.mat-slide-toggle-label-before .mat-slide-toggle-bar{order:2}[dir=rtl] .mat-slide-toggle-label-before .mat-slide-toggle-bar,.mat-slide-toggle-bar{margin-right:8px;margin-left:0}[dir=rtl] .mat-slide-toggle-bar,.mat-slide-toggle-label-before .mat-slide-toggle-bar{margin-left:8px;margin-right:0}.mat-slide-toggle-bar-no-side-margin{margin-left:0;margin-right:0}.mat-slide-toggle-thumb-container{position:absolute;z-index:1;width:20px;height:20px;top:-3px;left:0;transform:translate3d(0, 0, 0);transition:all 80ms linear;transition-property:transform}._mat-animation-noopable .mat-slide-toggle-thumb-container{transition:none}[dir=rtl] .mat-slide-toggle-thumb-container{left:auto;right:0}.mat-slide-toggle-thumb{height:20px;width:20px;border-radius:50%}.mat-slide-toggle-bar{position:relative;width:36px;height:14px;flex-shrink:0;border-radius:8px}.mat-slide-toggle-input{bottom:0;left:10px}[dir=rtl] .mat-slide-toggle-input{left:auto;right:10px}.mat-slide-toggle-bar,.mat-slide-toggle-thumb{transition:all 80ms linear;transition-property:background-color;transition-delay:50ms}._mat-animation-noopable .mat-slide-toggle-bar,._mat-animation-noopable .mat-slide-toggle-thumb{transition:none}.mat-slide-toggle .mat-slide-toggle-ripple{position:absolute;top:calc(50% - 20px);left:calc(50% - 20px);height:40px;width:40px;z-index:1;pointer-events:none}.mat-slide-toggle .mat-slide-toggle-ripple .mat-ripple-element:not(.mat-slide-toggle-persistent-ripple){opacity:.12}.mat-slide-toggle-persistent-ripple{width:100%;height:100%;transform:none}.mat-slide-toggle-bar:hover .mat-slide-toggle-persistent-ripple{opacity:.04}.mat-slide-toggle:not(.mat-disabled).cdk-keyboard-focused .mat-slide-toggle-persistent-ripple{opacity:.12}.mat-slide-toggle-persistent-ripple,.mat-slide-toggle.mat-disabled .mat-slide-toggle-bar:hover .mat-slide-toggle-persistent-ripple{opacity:0}@media(hover: none){.mat-slide-toggle-bar:hover .mat-slide-toggle-persistent-ripple{display:none}}.cdk-high-contrast-active .mat-slide-toggle-thumb,.cdk-high-contrast-active .mat-slide-toggle-bar{border:1px solid}.cdk-high-contrast-active .mat-slide-toggle.cdk-keyboard-focused .mat-slide-toggle-bar{outline:2px dotted;outline-offset:5px}\\n\"], encapsulation: 2, changeDetection: 0 });\nMatSlideToggle.ctorParameters = () => [\n    { type: ElementRef },\n    { type: FocusMonitor },\n    { type: ChangeDetectorRef },\n    { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS,] }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatSlideToggle.propDecorators = {\n    _thumbEl: [{ type: ViewChild, args: ['thumbContainer',] }],\n    _thumbBarEl: [{ type: ViewChild, args: ['toggleBar',] }],\n    name: [{ type: Input }],\n    id: [{ type: Input }],\n    labelPosition: [{ type: Input }],\n    ariaLabel: [{ type: Input, args: ['aria-label',] }],\n    ariaLabelledby: [{ type: Input, args: ['aria-labelledby',] }],\n    required: [{ type: Input }],\n    checked: [{ type: Input }],\n    change: [{ type: Output }],\n    toggleChange: [{ type: Output }],\n    _inputElement: [{ type: ViewChild, args: ['input',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSlideToggle, [{\n        type: Component,\n        args: [{\n                selector: 'mat-slide-toggle',\n                exportAs: 'matSlideToggle',\n                host: {\n                    'class': 'mat-slide-toggle',\n                    '[id]': 'id',\n                    // Needs to be `-1` so it can still receive programmatic focus.\n                    '[attr.tabindex]': 'disabled ? null : -1',\n                    '[attr.aria-label]': 'null',\n                    '[attr.aria-labelledby]': 'null',\n                    '[class.mat-checked]': 'checked',\n                    '[class.mat-disabled]': 'disabled',\n                    '[class.mat-slide-toggle-label-before]': 'labelPosition == \"before\"',\n                    '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"'\n                },\n                template: \"<label [attr.for]=\\\"inputId\\\" class=\\\"mat-slide-toggle-label\\\" #label>\\n  <div #toggleBar class=\\\"mat-slide-toggle-bar\\\"\\n       [class.mat-slide-toggle-bar-no-side-margin]=\\\"!labelContent.textContent || !labelContent.textContent.trim()\\\">\\n\\n    <input #input class=\\\"mat-slide-toggle-input cdk-visually-hidden\\\" type=\\\"checkbox\\\"\\n           role=\\\"switch\\\"\\n           [id]=\\\"inputId\\\"\\n           [required]=\\\"required\\\"\\n           [tabIndex]=\\\"tabIndex\\\"\\n           [checked]=\\\"checked\\\"\\n           [disabled]=\\\"disabled\\\"\\n           [attr.name]=\\\"name\\\"\\n           [attr.aria-checked]=\\\"checked.toString()\\\"\\n           [attr.aria-label]=\\\"ariaLabel\\\"\\n           [attr.aria-labelledby]=\\\"ariaLabelledby\\\"\\n           (change)=\\\"_onChangeEvent($event)\\\"\\n           (click)=\\\"_onInputClick($event)\\\">\\n\\n    <div class=\\\"mat-slide-toggle-thumb-container\\\" #thumbContainer>\\n      <div class=\\\"mat-slide-toggle-thumb\\\"></div>\\n      <div class=\\\"mat-slide-toggle-ripple mat-focus-indicator\\\" mat-ripple\\n           [matRippleTrigger]=\\\"label\\\"\\n           [matRippleDisabled]=\\\"disableRipple || disabled\\\"\\n           [matRippleCentered]=\\\"true\\\"\\n           [matRippleRadius]=\\\"20\\\"\\n           [matRippleAnimation]=\\\"{enterDuration: 150}\\\">\\n\\n        <div class=\\\"mat-ripple-element mat-slide-toggle-persistent-ripple\\\"></div>\\n      </div>\\n    </div>\\n\\n  </div>\\n\\n  <span class=\\\"mat-slide-toggle-content\\\" #labelContent (cdkObserveContent)=\\\"_onLabelTextChange()\\\">\\n    <!-- Add an invisible span so JAWS can read the label -->\\n    <span style=\\\"display:none\\\">&nbsp;</span>\\n    <ng-content></ng-content>\\n  </span>\\n</label>\\n\",\n                providers: [MAT_SLIDE_TOGGLE_VALUE_ACCESSOR],\n                inputs: ['disabled', 'disableRipple', 'color', 'tabIndex'],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-slide-toggle{display:inline-block;height:24px;max-width:100%;line-height:24px;white-space:nowrap;outline:none;-webkit-tap-highlight-color:transparent}.mat-slide-toggle.mat-checked .mat-slide-toggle-thumb-container{transform:translate3d(16px, 0, 0)}[dir=rtl] .mat-slide-toggle.mat-checked .mat-slide-toggle-thumb-container{transform:translate3d(-16px, 0, 0)}.mat-slide-toggle.mat-disabled{opacity:.38}.mat-slide-toggle.mat-disabled .mat-slide-toggle-label,.mat-slide-toggle.mat-disabled .mat-slide-toggle-thumb-container{cursor:default}.mat-slide-toggle-label{display:flex;flex:1;flex-direction:row;align-items:center;height:inherit;cursor:pointer}.mat-slide-toggle-content{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.mat-slide-toggle-label-before .mat-slide-toggle-label{order:1}.mat-slide-toggle-label-before .mat-slide-toggle-bar{order:2}[dir=rtl] .mat-slide-toggle-label-before .mat-slide-toggle-bar,.mat-slide-toggle-bar{margin-right:8px;margin-left:0}[dir=rtl] .mat-slide-toggle-bar,.mat-slide-toggle-label-before .mat-slide-toggle-bar{margin-left:8px;margin-right:0}.mat-slide-toggle-bar-no-side-margin{margin-left:0;margin-right:0}.mat-slide-toggle-thumb-container{position:absolute;z-index:1;width:20px;height:20px;top:-3px;left:0;transform:translate3d(0, 0, 0);transition:all 80ms linear;transition-property:transform}._mat-animation-noopable .mat-slide-toggle-thumb-container{transition:none}[dir=rtl] .mat-slide-toggle-thumb-container{left:auto;right:0}.mat-slide-toggle-thumb{height:20px;width:20px;border-radius:50%}.mat-slide-toggle-bar{position:relative;width:36px;height:14px;flex-shrink:0;border-radius:8px}.mat-slide-toggle-input{bottom:0;left:10px}[dir=rtl] .mat-slide-toggle-input{left:auto;right:10px}.mat-slide-toggle-bar,.mat-slide-toggle-thumb{transition:all 80ms linear;transition-property:background-color;transition-delay:50ms}._mat-animation-noopable .mat-slide-toggle-bar,._mat-animation-noopable .mat-slide-toggle-thumb{transition:none}.mat-slide-toggle .mat-slide-toggle-ripple{position:absolute;top:calc(50% - 20px);left:calc(50% - 20px);height:40px;width:40px;z-index:1;pointer-events:none}.mat-slide-toggle .mat-slide-toggle-ripple .mat-ripple-element:not(.mat-slide-toggle-persistent-ripple){opacity:.12}.mat-slide-toggle-persistent-ripple{width:100%;height:100%;transform:none}.mat-slide-toggle-bar:hover .mat-slide-toggle-persistent-ripple{opacity:.04}.mat-slide-toggle:not(.mat-disabled).cdk-keyboard-focused .mat-slide-toggle-persistent-ripple{opacity:.12}.mat-slide-toggle-persistent-ripple,.mat-slide-toggle.mat-disabled .mat-slide-toggle-bar:hover .mat-slide-toggle-persistent-ripple{opacity:0}@media(hover: none){.mat-slide-toggle-bar:hover .mat-slide-toggle-persistent-ripple{display:none}}.cdk-high-contrast-active .mat-slide-toggle-thumb,.cdk-high-contrast-active .mat-slide-toggle-bar{border:1px solid}.cdk-high-contrast-active .mat-slide-toggle.cdk-keyboard-focused .mat-slide-toggle-bar{outline:2px dotted;outline-offset:5px}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.FocusMonitor }, { type: ɵngcc0.ChangeDetectorRef }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['tabindex']\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS]\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { name: [{\n            type: Input\n        }], id: [{\n            type: Input\n        }], labelPosition: [{\n            type: Input\n        }], ariaLabel: [{\n            type: Input,\n            args: ['aria-label']\n        }], ariaLabelledby: [{\n            type: Input,\n            args: ['aria-labelledby']\n        }], change: [{\n            type: Output\n        }], toggleChange: [{\n            type: Output\n        }], required: [{\n            type: Input\n        }], checked: [{\n            type: Input\n        }], _thumbEl: [{\n            type: ViewChild,\n            args: ['thumbContainer']\n        }], _thumbBarEl: [{\n            type: ViewChild,\n            args: ['toggleBar']\n        }], _inputElement: [{\n            type: ViewChild,\n            args: ['input']\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst MAT_SLIDE_TOGGLE_REQUIRED_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => MatSlideToggleRequiredValidator),\n    multi: true\n};\n/**\n * Validator for Material slide-toggle components with the required attribute in a\n * template-driven form. The default validator for required form controls asserts\n * that the control value is not undefined but that is not appropriate for a slide-toggle\n * where the value is always defined.\n *\n * Required slide-toggle form controls are valid when checked.\n */\nclass MatSlideToggleRequiredValidator extends CheckboxRequiredValidator {\n}\nMatSlideToggleRequiredValidator.ɵfac = function MatSlideToggleRequiredValidator_Factory(t) { return ɵMatSlideToggleRequiredValidator_BaseFactory(t || MatSlideToggleRequiredValidator); };\nMatSlideToggleRequiredValidator.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatSlideToggleRequiredValidator, selectors: [[\"mat-slide-toggle\", \"required\", \"\", \"formControlName\", \"\"], [\"mat-slide-toggle\", \"required\", \"\", \"formControl\", \"\"], [\"mat-slide-toggle\", \"required\", \"\", \"ngModel\", \"\"]], features: [ɵngcc0.ɵɵProvidersFeature([MAT_SLIDE_TOGGLE_REQUIRED_VALIDATOR]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nconst ɵMatSlideToggleRequiredValidator_BaseFactory = /*@__PURE__*/ ɵngcc0.ɵɵgetInheritedFactory(MatSlideToggleRequiredValidator);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSlideToggleRequiredValidator, [{\n        type: Directive,\n        args: [{\n                selector: `mat-slide-toggle[required][formControlName],\n             mat-slide-toggle[required][formControl], mat-slide-toggle[required][ngModel]`,\n                providers: [MAT_SLIDE_TOGGLE_REQUIRED_VALIDATOR]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** This module is used by both original and MDC-based slide-toggle implementations. */\nclass _MatSlideToggleRequiredValidatorModule {\n}\n_MatSlideToggleRequiredValidatorModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: _MatSlideToggleRequiredValidatorModule });\n_MatSlideToggleRequiredValidatorModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function _MatSlideToggleRequiredValidatorModule_Factory(t) { return new (t || _MatSlideToggleRequiredValidatorModule)(); } });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(_MatSlideToggleRequiredValidatorModule, { declarations: [MatSlideToggleRequiredValidator], exports: [MatSlideToggleRequiredValidator] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(_MatSlideToggleRequiredValidatorModule, [{\n        type: NgModule,\n        args: [{\n                exports: [MatSlideToggleRequiredValidator],\n                declarations: [MatSlideToggleRequiredValidator]\n            }]\n    }], null, null); })();\nclass MatSlideToggleModule {\n}\nMatSlideToggleModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatSlideToggleModule });\nMatSlideToggleModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatSlideToggleModule_Factory(t) { return new (t || MatSlideToggleModule)(); }, imports: [[\n            _MatSlideToggleRequiredValidatorModule,\n            MatRippleModule,\n            MatCommonModule,\n            ObserversModule,\n        ], _MatSlideToggleRequiredValidatorModule, MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatSlideToggleModule, { declarations: function () { return [MatSlideToggle]; }, imports: function () { return [_MatSlideToggleRequiredValidatorModule, MatRippleModule,\n        MatCommonModule,\n        ObserversModule]; }, exports: function () { return [_MatSlideToggleRequiredValidatorModule, MatSlideToggle, MatCommonModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSlideToggleModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    _MatSlideToggleRequiredValidatorModule,\n                    MatRippleModule,\n                    MatCommonModule,\n                    ObserversModule,\n                ],\n                exports: [\n                    _MatSlideToggleRequiredValidatorModule,\n                    MatSlideToggle,\n                    MatCommonModule\n                ],\n                declarations: [MatSlideToggle]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS, MAT_SLIDE_TOGGLE_REQUIRED_VALIDATOR, MAT_SLIDE_TOGGLE_VALUE_ACCESSOR, MatSlideToggle, MatSlideToggleChange, MatSlideToggleModule, MatSlideToggleRequiredValidator, _MatSlideToggleRequiredValidatorModule };\n\n//# sourceMappingURL=slide-toggle.js.map","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Order } from '@models/order';\r\nimport { Subject } from 'rxjs';\r\nimport { takeUntil, tap } from 'rxjs/operators';\r\n\r\nimport { OrderAdminService } from './../../services/order-admin.service';\r\n\r\n@Component({\r\n  selector: 'app-order-list',\r\n  templateUrl: './order-list.component.html',\r\n  styleUrls: ['./order-list.component.scss'],\r\n})\r\nexport class OrderListComponent implements OnInit, OnDestroy {\r\n  private unsubscribe$ = new Subject<void>();\r\n  public currentOrdersList: Order[] = [];\r\n  constructor(\r\n    private orderAdminService: OrderAdminService,\r\n    private router: Router\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.orderAdminService\r\n      .getAllCurentOrders()\r\n      .pipe(\r\n        tap((currentOrders) => {\r\n          this.currentOrdersList = currentOrders;\r\n        }),\r\n        takeUntil(this.unsubscribe$)\r\n      )\r\n      .subscribe();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.unsubscribe$.next();\r\n    this.unsubscribe$.unsubscribe();\r\n  }\r\n\r\n  public goToDetailsOrder(orderData: Order): void {\r\n    this.router.navigate([`admin/liste-commandes/${orderData.orderId}`], {\r\n      state: orderData,\r\n    });\r\n  }\r\n}\r\n","<div\r\n  fxLayout=\"row\"\r\n  fxLayoutAlign=\"center center\"\r\n  *ngIf=\"!currentOrdersList.length && currentOrdersList.length > 0\"\r\n>\r\n  <mat-spinner></mat-spinner>\r\n</div>\r\n<div\r\n  id=\"noOrder\"\r\n  fxLayout=\"row\"\r\n  fxLayoutAlign=\"center center\"\r\n  *ngIf=\"!currentOrdersList.length && currentOrdersList.length === 0\"\r\n>\r\n  <h2>Il n'y a actuellement aucune commande.</h2>\r\n</div>\r\n<mat-card\r\n  *ngFor=\"let order of currentOrdersList\"\r\n  fxFlex=\"87\"\r\n  (click)=\"goToDetailsOrder(order)\"\r\n>\r\n  <mat-card-title fxLayout=\"row wrap\" fxLayoutAlign=\"space-between center\">\r\n    <div>\r\n      {{ order.name }}\r\n    </div>\r\n    <div>\r\n      Livraison le {{ order.deliveryDate.toDate() | date: \"EEEE d MMMM y\" }}\r\n      {{ order?.deliveryTime ? \" à \" + order.deliveryTime : \"\" }}\r\n    </div>\r\n  </mat-card-title>\r\n  <mat-card-subtitle fxLayout=\"row wrap\" fxLayoutAlign=\"space-between center\">\r\n    <div>Tel: {{ order.phone }}</div>\r\n    <div>\r\n      Commandé le {{ order.orderDate.toDate() | date: \"EEEE d MMMM y\" }} à\r\n      {{ order.orderDate.toDate() | date: \"h:mm\" }}\r\n    </div>\r\n  </mat-card-subtitle>\r\n  <mat-card-content fxLayout=\"row wrap\" fxLayoutAlign=\"space-between baseline\">\r\n    <div *ngIf=\"!order.deliveryAddress; else mulitpleAddress\">\r\n      <div>Adresse de livraison et facturation :</div>\r\n      <div class=\"address\">\r\n        {{ order.address.street }}\r\n      </div>\r\n      <div class=\"address\">\r\n        <span>\r\n          {{ order.address.zipCode }}\r\n        </span>\r\n        <span>\r\n          {{ order.address.city }}\r\n        </span>\r\n      </div>\r\n    </div>\r\n    <ng-template #mulitpleAddress>\r\n      <div>\r\n        <div>Adresse de facturation :</div>\r\n        <div class=\"address\">{{ order.address.street }}</div>\r\n        <div class=\"address\">\r\n          <span>\r\n            {{ order.address.zipCode }}\r\n          </span>\r\n          <span>\r\n            {{ order.address.city }}\r\n          </span>\r\n        </div>\r\n      </div>\r\n      <div>\r\n        <div class=\"addressTitle\">Adresse de livraison :</div>\r\n        <div class=\"address\">{{ order.deliveryAddress.street }}</div>\r\n        <div class=\"address\">\r\n          <span>\r\n            {{ order.deliveryAddress.zipCode }}\r\n          </span>\r\n          <span>\r\n            {{ order.deliveryAddress.city }}\r\n          </span>\r\n        </div>\r\n      </div>\r\n    </ng-template>\r\n  </mat-card-content>\r\n</mat-card>\r\n","import { Injectable } from '@angular/core';\r\nimport { AngularFirestore } from '@angular/fire/firestore';\r\nimport { Order } from '@models/order';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class OrderAdminService {\r\n  constructor(private firestore: AngularFirestore) {}\r\n\r\n  getAllCurentOrders(): Observable<Order[]> {\r\n    const limitDate = new Date();\r\n    limitDate.setDate(limitDate.getDate() + 7);\r\n    const today = new Date();\r\n    today.setDate(today.getDate() - 1);\r\n    return this.firestore\r\n      .collection<Order>('orders', (ref) =>\r\n        ref\r\n          .where('deliveryDate', '<=', limitDate)\r\n          .where('deliveryDate', '>', today)\r\n          .orderBy('deliveryDate')\r\n      )\r\n      .valueChanges({ idField: 'orderId' });\r\n  }\r\n\r\n  getOrderById(orderId: string): Observable<Order> {\r\n    return this.firestore\r\n      .doc<Order>(`orders/${orderId}`)\r\n      .valueChanges() as Observable<Order>;\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatExpansionModule } from '@angular/material/expansion';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\r\n\r\nimport { AdminRoutingModule } from './admin-routing.module';\r\nimport { OrderDetailsComponent } from './pages/order-details/order-details.component';\r\nimport { OrderListComponent } from './pages/order-list/order-list.component';\r\nimport { ProductsListComponent } from './pages/products-list/products-list.component';\r\nimport { OrderAdminService } from './services/order-admin.service';\r\nimport { ProductService } from './services/product.service';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ProductsListComponent,\r\n    OrderListComponent,\r\n    OrderDetailsComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    AdminRoutingModule,\r\n    MatCardModule,\r\n    MatSlideToggleModule,\r\n    MatExpansionModule,\r\n    FlexLayoutModule,\r\n    MatProgressSpinnerModule,\r\n    MatIconModule,\r\n  ],\r\n  exports: [AdminRoutingModule],\r\n  providers: [ProductService, OrderAdminService],\r\n})\r\nexport class AdminModule {}\r\n","import { Injectable } from '@angular/core';\r\nimport { AngularFirestore } from '@angular/fire/firestore';\r\nimport { Product } from '@models/product';\r\nimport { from, Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ProductService {\r\n  constructor(private firestore: AngularFirestore) {}\r\n\r\n  public getAllItems(): Observable<Product[]> {\r\n    return this.firestore\r\n      .collection<Product>('products', (ref) => ref.orderBy('name'))\r\n      .valueChanges({ idField: 'productId' });\r\n  }\r\n\r\n  public updateProductAvailability(\r\n    docId: string,\r\n    value: boolean\r\n  ): Observable<void> {\r\n    return from(\r\n      this.firestore\r\n        .collection<Product>('products')\r\n        .doc(docId)\r\n        .update({ available: value } as Product)\r\n    );\r\n  }\r\n\r\n  public updateProductShortDelivery(\r\n    docId: string,\r\n    value: boolean\r\n  ): Observable<void> {\r\n    return from(\r\n      this.firestore\r\n        .collection<Product>('products')\r\n        .doc(docId)\r\n        .update({ shortDelivery: value } as Product)\r\n    );\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { MatSlideToggleChange } from '@angular/material/slide-toggle';\r\nimport { ProductService } from '@app/admin/services/product.service';\r\nimport { Product } from '@models/product';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-products-list',\r\n  templateUrl: './products-list.component.html',\r\n  styleUrls: ['./products-list.component.scss'],\r\n})\r\nexport class ProductsListComponent implements OnInit {\r\n  public productList$: Observable<Product[]>;\r\n\r\n  constructor(private productService: ProductService) {\r\n    this.productList$ = this.productService.getAllItems();\r\n  }\r\n\r\n  ngOnInit(): void {}\r\n  public updateProductAvailability(\r\n    productId: string,\r\n    event: MatSlideToggleChange\r\n  ): Observable<void> {\r\n    return this.productService.updateProductAvailability(\r\n      productId,\r\n      event.checked\r\n    );\r\n  }\r\n\r\n  public updateProductShortDelivery(\r\n    productId: string,\r\n    event: MatSlideToggleChange\r\n  ): Observable<void> {\r\n    return this.productService.updateProductShortDelivery(\r\n      productId,\r\n      event.checked\r\n    );\r\n  }\r\n}\r\n","<div class=\"containerProducts\">\r\n  <div fxLayout=\"row wrap\" fxLayoutAlign=\"center center\">\r\n    <h2>Produits</h2>\r\n  </div>\r\n  <div\r\n    class=\"listProducts\"\r\n    fxLayout=\"row wrap\"\r\n    fxLayoutAlign=\"space-evenly center\"\r\n    fxLayoutGap=\"1rem\"\r\n  >\r\n    <div\r\n      fxFlex.lt-md=\"calc(50 - 1rem)\"\r\n      fxFlex.lt-sm=\"calc(100 - 1rem)\"\r\n      class=\"productCard\"\r\n      *ngFor=\"let product of productList$ | async\"\r\n    >\r\n      <mat-card>\r\n        <mat-expansion-panel [disabled]=\"!product.description\">\r\n          <mat-expansion-panel-header>\r\n            <mat-panel-title>{{ product.name }}</mat-panel-title>\r\n          </mat-expansion-panel-header>\r\n          <p>{{ product.description }}</p>\r\n        </mat-expansion-panel>\r\n        <mat-card-content\r\n          >Prix: {{ product.price.toFixed(2) }} € /\r\n          {{ product.unit }}</mat-card-content\r\n        >\r\n        <mat-card-content class=\"toggleContainer\">\r\n          <mat-slide-toggle\r\n            (change)=\"updateProductAvailability(product.productId, $event)\"\r\n            [checked]=\"product.available\"\r\n            labelPosition=\"before\"\r\n            >Visible\r\n          </mat-slide-toggle>\r\n          <mat-slide-toggle\r\n            (change)=\"updateProductShortDelivery(product.productId, $event)\"\r\n            [checked]=\"product.shortDelivery\"\r\n            labelPosition=\"before\"\r\n            >Livraison courte</mat-slide-toggle\r\n          >\r\n        </mat-card-content>\r\n      </mat-card>\r\n    </div>\r\n  </div>\r\n</div>\r\n"],"sourceRoot":"webpack:///"}