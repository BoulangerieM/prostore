{"version":3,"file":"src_app_user_user_module_ts.js","mappings":"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","sources":["./src/app/user/pages/infos-perso/infos-perso.component.ts","./src/app/user/pages/infos-perso/infos-perso.component.html","./src/app/user/pages/place-same-order-form/place-same-order-form.component.ts","./src/app/user/pages/place-same-order-form/place-same-order-form.component.html","./src/app/user/pages/user-orders/user-orders.component.ts","./src/app/user/pages/user-orders/user-orders.component.html","./src/app/user/user-routing.module.ts","./src/app/user/user.module.ts","./node_modules/@angular/cdk/fesm2015/layout.mjs","./node_modules/@angular/material/fesm2015/paginator.mjs","./node_modules/@angular/material/fesm2015/select.mjs","./node_modules/@angular/material/fesm2015/tooltip.mjs"],"sourcesContent":["import { Component } from '@angular/core';\r\nimport { FormBuilder, Validators } from '@angular/forms';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { TemplateModalComponent } from '@app/shared/components/info-modal/template-modal.component';\r\nimport { FormUtils } from '@app/shared/utils/form-utils';\r\nimport { UserService } from '@app/user/services/user.service';\r\nimport { FormErrorMessages } from '@models/formErrorMessages';\r\nimport { User } from '@models/user';\r\nimport { take } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-infos-perso',\r\n  templateUrl: './infos-perso.component.html',\r\n  styleUrls: ['./infos-perso.component.scss'],\r\n})\r\nexport class InfosPersoComponent {\r\n  public userInformations!: User;\r\n  public updatingInfos = false;\r\n  public displayDeliveryForm = false;\r\n\r\n  public infosPersosForm = this.fb.group({\r\n    name: [this.userInformations?.name, [Validators.required]],\r\n    phone: ['', [Validators.required, Validators.pattern('^[0-9]{10}$')]],\r\n    address: this.fb.group({\r\n      street: ['', [Validators.required]],\r\n      zipCode: ['', [Validators.required, Validators.pattern('^[0-9]{5}$')]],\r\n      city: ['', [Validators.required]],\r\n    }),\r\n    deliveryAddress: this.fb.group(\r\n      {\r\n        street: ['', [Validators.required]],\r\n        zipCode: ['', [Validators.required, Validators.pattern('^[0-9]{5}$')]],\r\n        city: ['', [Validators.required]],\r\n      },\r\n      { disabled: !this.displayDeliveryForm }\r\n    ),\r\n    hasDifferentDeliveryAddress: [\r\n      this.displayDeliveryForm,\r\n      [Validators.required],\r\n    ],\r\n  });\r\n  public getErrorMessage = FormUtils.GetErrorMessage;\r\n  public errorMessages: FormErrorMessages = {\r\n    name: {\r\n      required: 'Nom de votre entreprise obligatoire',\r\n    },\r\n    phone: {\r\n      required: 'Numéro de téléphone obligatoire',\r\n      pattern: 'Doit contenir 10 chiffres',\r\n    },\r\n    street: {\r\n      required: 'Rue obligatoire',\r\n    },\r\n    zipCode: {\r\n      required: 'Code postal obligatoire',\r\n      pattern: 'Doit contenir 5 chiffres',\r\n    },\r\n    city: {\r\n      required: 'Ville obligatoire',\r\n    }\r\n  };\r\n\r\n\r\n  public updateValidationModal!: MatDialogRef<TemplateModalComponent>;\r\n  \r\n  constructor(private fb: FormBuilder, private userService: UserService, private dialog: MatDialog\r\n  ) {\r\n    this.userService.getUserInfos()\r\n    .subscribe(\r\n        user => {\r\n          this.userInformations = user;\r\n          this.infosPersosForm.get('name')?.setValue(this.userInformations.name);\r\n          this.infosPersosForm.get('phone')?.setValue(this.userInformations.phone);\r\n          this.infosPersosForm.get('address')?.get('street')?.setValue(this.userInformations.address.street);\r\n          this.infosPersosForm.get('address')?.get('zipCode')?.setValue(this.userInformations.address.zipCode);\r\n          this.infosPersosForm.get('address')?.get('city')?.setValue(this.userInformations.address.city);\r\n          this.infosPersosForm.get('hasDifferentDeliveryAddress')?.setValue(false);\r\n          if (this.userInformations.deliveryAddress) {\r\n            this.displayDeliveryForm = true;\r\n            this.infosPersosForm.get('hasDifferentDeliveryAddress')?.setValue(true);\r\n            this.infosPersosForm.get('deliveryAddress')?.get('street')?.setValue(this.userInformations.deliveryAddress.street);\r\n            this.infosPersosForm.get('deliveryAddress')?.get('zipCode')?.setValue(this.userInformations.deliveryAddress.zipCode);\r\n            this.infosPersosForm.get('deliveryAddress')?.get('city')?.setValue(this.userInformations.deliveryAddress.city);\r\n            \r\n          }\r\n          this.hasDifferentDeliveryAddress(this.displayDeliveryForm);\r\n        }\r\n      )\r\n    }\r\n    \r\n  public hasDifferentDeliveryAddress(checked: boolean): void {\r\n    this.displayDeliveryForm = checked;\r\n    if (this.displayDeliveryForm) {\r\n      this.infosPersosForm.get('deliveryAddress')?.enable();\r\n    } else {\r\n      this.infosPersosForm.get('deliveryAddress')?.disable();\r\n    }\r\n  }\r\n  \r\n  public submitUpdateInfos() {\r\n    if (this.infosPersosForm.valid) {\r\n      if (!this.infosPersosForm.get('hasDifferentDeliveryAddress')?.value && !!this.userInformations.deliveryAddress) {\r\n        this.userService.deleteDeliveryAddress(this.userInformations.firebaseUid).pipe(take(1)).subscribe();\r\n      }\r\n      this.userService.updateUserInformations(this.infosPersosForm.value, this.userInformations.firebaseUid).pipe(take(1)).subscribe(\r\n        {\r\n          next: () => {\r\n            this.updatingInfos = false;\r\n            this.updateValidationModal = this.dialog.open(TemplateModalComponent, {\r\n              data: {\r\n                title: \"Mise à jour effectuée!\",\r\n                bodyText: `\r\n                <p>Vos informations ont bien été mises à jour.</p>\r\n                <p>Elles seront prises en compte pour toutes vos futures commandes.</p>\r\n                `\r\n              },\r\n              disableClose: true,\r\n              width: '400px',\r\n              maxWidth: '90%',\r\n            });\r\n            this.infosPersosForm.reset();\r\n          },\r\n          error: (e) => {\r\n            this.updateValidationModal = this.dialog.open(TemplateModalComponent, {\r\n              data: {\r\n                title: \"Oups, une erreur est survenue!\",\r\n                bodyText: `\r\n                <p>Ils semble qu'il y ai eu un problème lors de la mise à jour de vos informations.</p>\r\n                <p>Veuillez réessayer plus tard.</p>\r\n                <p>Erreur : ${e.message}.</p>\r\n                `\r\n              },\r\n              disableClose: true,\r\n              width: '400px',\r\n              maxWidth: '90%',\r\n            });          },\r\n        }\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n// public updatingPassword = false;\r\n  \r\n// private regexPassword = new RegExp(/^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[^a-zA-Z0-9])(?!.*\\s).{8,}$/g);\r\n// public updatePasswordForm = this.fb.group({\r\n//   currentPassword: ['', [Validators.required]],\r\n//   password: ['', [Validators.required, Validators.pattern(this.regexPassword)]],\r\n//   confirmPassword: ['', [Validators.required, Validators.pattern(this.regexPassword)]],\r\n// },\r\n//   {\r\n//     validators: [ValidatePassword.MatchPassword('password', 'confirmPassword')]\r\n//   });\r\n// public errorMessagesUpdatePassword: FormErrorMessages = {\r\n//   currentPassword: {\r\n  //     required: 'Mot de passe obligatoire',\r\n  //   },\r\n  //   password: {\r\n    //     required: 'Nouveau mot de passe obligatoire',\r\n    //     pattern: 'Doit contenir 8 caractères, une lettre minuscule, une lettre majuscule, un chiffre et un de ces caractères spéciaux !@#$%^&*'\r\n    //   },\r\n    //   confirmPassword: {\r\n      //     required: 'Confirmation du nouveau mot de passe obligatoire',\r\n      //     pattern: 'Doit contenir 8 caractères, une lettre minuscule, une lettre majuscule, un chiffre et un de ces caractères spéciaux !@#$%^&*',\r\n      //     matchPassword: 'Doit être identique au mot de passe'\r\n      //   },\r\n      \r\n      // };\r\n\r\n\r\n// public submitUpdatePassword() {\r\n  //   if (this.updatePasswordForm.valid) {\r\n    //     this.authService.updateUserPassword(this.updatePasswordForm.get(\"currentPassword\")?.value, this.updatePasswordForm.get(\"newPassword\")?.value)?.then(\r\n      //       (res) => {\r\n        //         this.updatingPassword = false;\r\n        //         this.updatePasswordForm.reset();\r\n        //       })\r\n        //       .catch(err => {\r\n          //         if (err.code === \"auth/wrong-password\") {\r\n            //         }\r\n//       });\r\n//   }\r\n// }","<mat-card id=\"cardInfosPerso\" class=\"m-card\">\r\n    <mat-card-title fxLayout=\"row\" fxLayoutAlign=\"center center\" class=\"m-card-title\">\r\n        <h1>Mes informations personnelles</h1>\r\n    </mat-card-title>\r\n    <mat-card-content>\r\n        <h3 class=\"h3InfosPerso\">Nom de votre entreprise :</h3>\r\n        <p>{{userInformations?.name}}</p>\r\n        <h3 class=\"h3InfosPerso\">{{ userInformations?.deliveryAddress ? \"Adresse de facturation :\" : \"Adresse :\"}}</h3>\r\n        <p>{{userInformations?.address?.street}}<br>{{userInformations?.address?.zipCode}}\r\n            {{userInformations?.address?.city}}</p>\r\n        <div *ngIf=\"userInformations?.deliveryAddress\">\r\n            <h3 class=\"h3InfosPerso\">Adresse de livraison :</h3>\r\n            <p>{{userInformations?.deliveryAddress?.street}} <br>{{userInformations?.deliveryAddress?.zipCode}}\r\n                {{userInformations?.deliveryAddress?.city}}</p>\r\n        </div>\r\n        <h3 class=\"h3InfosPerso\">Email : </h3>\r\n        <p>{{userInformations?.email}}</p>\r\n        <h3 class=\"h3InfosPerso\">Numéro de téléphone :</h3>\r\n        <p>{{userInformations?.phone}}</p>\r\n        <div fxLayout=\"row wrap\" fxLayoutAlign=\"space-evenly center\" *ngIf=\"!updatingInfos\">\r\n            <button fxFlex=\"40\" fxFlex.lt-sm=\"87\" class=\"updateInfosButton\" mat-raised-button\r\n                aria-label=\"Modifier mes informations personnelles\" (click)=\"updatingInfos = !updatingInfos\">\r\n                Modifier mes informations\r\n            </button>\r\n        </div>\r\n    </mat-card-content>\r\n</mat-card>\r\n<!-- -------------------------------------------------------------------------------------------- -->\r\n\r\n<mat-card id=\"cardModifInfos\" class=\"m-card\" *ngIf=\"updatingInfos\">\r\n\r\n    <div id=\"importantInformation\">Attention, ces changements ne seront effectifs que pour les prochaines commandes\r\n        et n'affecteront donc pas vos\r\n        précédentes commandes.</div>\r\n    <form [formGroup]=\"infosPersosForm\" (ngSubmit)=\"submitUpdateInfos()\">\r\n        <div fxLayout=\"row wrap\" fxLayoutAlign=\"space-evenly space-evenly\">\r\n            <mat-form-field fxFlex=\"40\" fxFlex.lt-sm=\"87\" appearance=\"outline\">\r\n                <mat-label>Nom de votre entreprise</mat-label>\r\n                <input matInput type=\"text\" placeholder=\"Ex: Restaurant du port\" formControlName=\"name\" required />\r\n                <mat-error *ngIf=\"infosPersosForm.get('name')?.invalid\">{{\r\n                    getErrorMessage(\"name\", infosPersosForm, errorMessages)\r\n                    }}</mat-error>\r\n            </mat-form-field>\r\n            <mat-form-field fxFlex=\"40\" fxFlex.lt-sm=\"87\" appearance=\"outline\">\r\n                <mat-label>Numéro de téléphone</mat-label>\r\n                <input matInput type=\"tel\" placeholder=\"Ex: 0546331122\" formControlName=\"phone\" required />\r\n                <mat-error *ngIf=\"infosPersosForm.get('phone')?.invalid\">{{\r\n                    getErrorMessage(\"phone\", infosPersosForm, errorMessages)\r\n                    }}</mat-error>\r\n            </mat-form-field>\r\n        </div>\r\n        <div formGroupName=\"address\">\r\n            <div fxLayout=\"row\" fxLayoutAlign=\"center\">\r\n                <mat-form-field fxFlex=\"87\" appearance=\"outline\">\r\n                    <mat-label>Rue</mat-label>\r\n                    <input matInput type=\"text\" placeholder=\"Ex: 2 rue du port\" formControlName=\"street\" required />\r\n                    <mat-error *ngIf=\"infosPersosForm.get('address')?.get('street')?.invalid\">{{\r\n                        getErrorMessage(\"street\", infosPersosForm, errorMessages, \"address\")\r\n                        }}</mat-error>\r\n                </mat-form-field>\r\n            </div>\r\n            <div fxLayout=\"row wrap\" fxLayoutAlign=\"space-evenly space-evenly\">\r\n                <mat-form-field fxFlex=\"40\" fxFlex.lt-sm=\"87\" appearance=\"outline\">\r\n                    <mat-label>Code postal</mat-label>\r\n                    <input matInput type=\"text\" placeholder=\"Ex: 17000\" formControlName=\"zipCode\" required />\r\n                    <mat-error *ngIf=\"infosPersosForm.get('address')?.get('zipCode')?.invalid\">{{\r\n                        getErrorMessage(\"zipCode\", infosPersosForm, errorMessages, \"address\")\r\n                        }}</mat-error>\r\n                </mat-form-field>\r\n                <mat-form-field fxFlex=\"40\" fxFlex.lt-sm=\"87\" appearance=\"outline\">\r\n                    <mat-label>Ville</mat-label>\r\n                    <input matInput type=\"text\" placeholder=\"Ex: La Rochelle\" formControlName=\"city\" required />\r\n                    <mat-error *ngIf=\"infosPersosForm.get('address')?.get('city')?.invalid\">{{\r\n                        getErrorMessage(\"city\", infosPersosForm, errorMessages, \"address\")\r\n                        }}</mat-error>\r\n                </mat-form-field>\r\n            </div>\r\n        </div>\r\n        <div fxLayout=\"row wrap\" class=\"checkboxRow\" fxLayoutAlign=\"flex-start center\">\r\n            <mat-checkbox id=\"differentAddress\" fxFlexOffset=\"7\" (change)=\"hasDifferentDeliveryAddress($event.checked)\"\r\n                formControlName=\"hasDifferentDeliveryAddress\">Adresse de livraison différente</mat-checkbox>\r\n        </div>\r\n        <div id=\"deliveryAddress\" formGroupName=\"deliveryAddress\" *ngIf=\"displayDeliveryForm\">\r\n            <div fxLayout=\"row\" fxLayoutAlign=\"center\">\r\n                <mat-form-field fxFlex=\"87\" appearance=\"outline\">\r\n                    <mat-label>Rue</mat-label>\r\n                    <input matInput type=\"text\" placeholder=\"Ex: 2 rue du port\" formControlName=\"street\" required />\r\n                    <mat-error *ngIf=\"infosPersosForm.get('deliveryAddress')?.get('street')?.invalid\">{{\r\n                        getErrorMessage(\"street\",\r\n                        infosPersosForm, errorMessages,\r\n                        \"address\") }}</mat-error>\r\n                </mat-form-field>\r\n            </div>\r\n            <div fxLayout=\"row wrap\" fxLayoutAlign=\"space-evenly space-evenly\">\r\n                <mat-form-field fxFlex=\"40\" fxFlex.lt-sm=\"87\" appearance=\"outline\">\r\n                    <mat-label>Code postal</mat-label>\r\n                    <input matInput type=\"text\" placeholder=\"Ex: 17000\" formControlName=\"zipCode\" required />\r\n                    <mat-error *ngIf=\"infosPersosForm.get('deliveryAddress')?.get('zipCode')?.invalid\">{{\r\n                        getErrorMessage(\"zipCode\",\r\n                        infosPersosForm, errorMessages,\r\n                        \"address\") }}</mat-error>\r\n                </mat-form-field>\r\n                <mat-form-field fxFlex=\"40\" fxFlex.lt-sm=\"87\" appearance=\"outline\">\r\n                    <mat-label>Ville</mat-label>\r\n                    <input matInput type=\"text\" placeholder=\"Ex: La Rochelle\" formControlName=\"city\" required />\r\n                    <mat-error *ngIf=\"infosPersosForm.get('deliveryAddress')?.get('city')?.invalid\">{{\r\n                        getErrorMessage(\"city\", infosPersosForm,\r\n                        errorMessages, \"address\")\r\n                        }}</mat-error>\r\n                </mat-form-field>\r\n            </div>\r\n        </div>\r\n        <div fxLayout=\"row wrap\" fxLayoutAlign=\"space-evenly center\">\r\n            <button fxFlex=\"40\" fxFlex.lt-sm=\"87\" mat-raised-button aria-label=\"Annuler\" id=\"cancelButton\"\r\n                (click)=\"updatingInfos = !updatingInfos\">\r\n                Annuler\r\n            </button>\r\n            <button fxFlex=\"40\" fxFlex.lt-sm=\"87\" class=\"updateInfosButton\" mat-raised-button type=\"submit\">\r\n                Mettre à jour mes informations\r\n            </button>\r\n        </div>\r\n    </form>\r\n</mat-card>\r\n<!-- ------------------------------------------------------------------------ -->\r\n<!-- <form [formGroup]=\"updatePasswordForm\" (ngSubmit)=\"submitUpdatePassword()\" *ngIf=\"updatingPassword\">\r\n    <div fxLayout=\"row wrap\" fxLayoutAlign=\"space-evenly center\">\r\n        <mat-form-field fxFlex=\"87\" appearance=\"outline\">\r\n            <mat-label>Mot de passe</mat-label>\r\n            <input matInput type=\"password\" formControlName=\"currentPassword\" required />\r\n            <mat-error *ngIf=\"updatePasswordForm.get('currentPassword')?.invalid\">{{\r\n                getErrorMessage(\"currentPassword\", updatePasswordForm, errorMessagesUpdatePassword)\r\n                }}</mat-error>\r\n        </mat-form-field>\r\n    </div>\r\n    <div fxLayout=\"row wrap\" fxLayoutAlign=\"space-evenly center\">\r\n        <mat-form-field fxFlex=\"87\" appearance=\"outline\">\r\n            <mat-label>Nouveau mot de passe</mat-label>\r\n            <input matInput type=\"password\" formControlName=\"password\" required />\r\n            <mat-error *ngIf=\"updatePasswordForm.get('password')?.invalid\">{{\r\n                getErrorMessage(\"password\", updatePasswordForm, errorMessagesUpdatePassword)\r\n                }}</mat-error>\r\n        </mat-form-field>\r\n        <mat-form-field fxFlex=\"87\" appearance=\"outline\">\r\n            <mat-label>Confirmer le nouveau mot de passe</mat-label>\r\n            <input matInput type=\"password\" formControlName=\"confirmPassword\" required />\r\n            <mat-error *ngIf=\"updatePasswordForm.get('confirmPassword')?.invalid\">{{\r\n                getErrorMessage(\"confirmPassword\", updatePasswordForm, errorMessagesUpdatePassword)\r\n                }}</mat-error>\r\n        </mat-form-field>\r\n    </div>\r\n    <div fxLayout=\"row wrap\" fxLayoutAlign=\"space-evenly center\">\r\n        <button fxFlex=\"40\" fxFlex.lt-sm=\"87\" mat-raised-button type=\"submit\">\r\n            Valider\r\n        </button>\r\n    </div>\r\n</form> -->","import { Component } from '@angular/core';\r\nimport { FormBuilder, Validators } from '@angular/forms';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { Router } from '@angular/router';\r\nimport { OpeningDaysService } from '@app/admin/services/opening-days.service';\r\nimport { TemplateModalComponent } from '@app/shared/components/info-modal/template-modal.component';\r\nimport { DateUtils } from '@app/shared/utils/date.utils';\r\nimport { FormUtils } from '@app/shared/utils/form-utils';\r\nimport { UserService } from '@app/user/services/user.service';\r\nimport { ClosingDay } from '@models/closingDay';\r\nimport { FormErrorMessages } from '@models/formErrorMessages';\r\nimport { Order } from '@models/order';\r\nimport { ProductUnit, ProductUnitWording } from '@models/product';\r\nimport { take } from 'rxjs';\r\n\r\n\r\n@Component({\r\n  selector: 'app-place-same-order-form',\r\n  templateUrl: './place-same-order-form.component.html',\r\n  styleUrls: ['./place-same-order-form.component.scss'],\r\n})\r\nexport class PlaceSameOrderFormComponent {\r\n  public PRODUCTUNITWORDING = ProductUnitWording;\r\n  public PRODUCTUNIT = ProductUnit;\r\n  public minimalDay = new Date();\r\n  public validatedModal!: MatDialogRef<TemplateModalComponent>;\r\n  public closingDays: ClosingDay[] = [];\r\n  public orderToPlace: Order;\r\n  public selectDeliveryTime = false;\r\n  public orderForm = this.fb.group({\r\n    deliveryDate: [null, [Validators.required]],\r\n    deliveryTime: [null],\r\n    orderDate: [new Date(Date.now()), [Validators.required]],\r\n  });\r\n  public getErrorMessage = FormUtils.GetErrorMessage;\r\n  public filterDaysAfterToday = DateUtils.FilterDaysAfterToday;\r\n  public orderDays = DateUtils.OrderDays;\r\n  public IsItOpenToday = DateUtils.IsItOpenToday;\r\n  public setMinimalDay = DateUtils.SetMinimalDay;\r\n  public errorMessages: FormErrorMessages = {\r\n    deliveryDate: {\r\n      required: 'Date de livraison obligatoire',\r\n      matDatepickerMin: 'Date incorrecte',\r\n    },\r\n  };\r\n\r\n  constructor(private router: Router, private fb: FormBuilder, private openingDaysService: OpeningDaysService, private dialog: MatDialog,\r\n    private userService: UserService) {\r\n    if (this.router.getCurrentNavigation()?.extras.state?.data === undefined) {\r\n      this.router.navigate([\"/compte/mes-commandes\"]);\r\n    }\r\n    this.orderToPlace = this.router.getCurrentNavigation()!.extras.state!.data as Order;\r\n    if (this.orderToPlace.isCanceled) {\r\n      delete this.orderToPlace.isCanceled\r\n    }\r\n    delete this.orderToPlace.orderId;\r\n\r\n    this.openingDaysService\r\n      .getAllClosingDays()\r\n      .pipe(take(1))\r\n      .subscribe((res) => {\r\n        this.closingDays = res;\r\n        this.closingDays = this.orderDays(this.closingDays);\r\n        this.closingDays = this.filterDaysAfterToday(this.closingDays);\r\n        this.minimalDay = this.setMinimalDay(this.minimalDay, this.closingDays);\r\n      });\r\n\r\n  }\r\n\r\n  placeOrderAgain() {\r\n    this.orderForm.get('orderDate')?.setValue(new Date(Date.now()));\r\n    if (this.orderForm.valid) {\r\n      const finalOrder = {\r\n        ...this.orderToPlace,\r\n        ...this.orderForm.value,\r\n      };\r\n      this.userService.placeSameOrder(finalOrder).pipe(\r\n        take(1))\r\n        .subscribe({\r\n          next: () => {\r\n            this.validatedModal = this.dialog.open(TemplateModalComponent, {\r\n              data: {\r\n                title: \"Votre commande a bien été repassée!\",\r\n                bodyText: `\r\n                <p>La boulangerie M vous remercie de votre commande.</p>\r\n                <p>En espérant vous revoir très prochainement et que votre commande vous satifera pleinement.</p>\r\n                `,\r\n                buttonAction: () => this.router.navigate([\"/compte/mes-commandes\"])\r\n              },\r\n              disableClose: true,\r\n              width: '400px',\r\n              maxWidth: '90%',\r\n            });\r\n          },\r\n          error: (err) => {\r\n            this.validatedModal = this.dialog.open(TemplateModalComponent, {\r\n              data: {\r\n                title: \"Oups\",\r\n                bodyText: `\r\n              <p>Une erreur a eu lieu la confirmation de votre commande, veuillez réessayer plus tard ou contacter la boulangerie directement. ${err}</p>\r\n              `\r\n              },\r\n              disableClose: true,\r\n              width: '400px',\r\n              maxWidth: '90%',\r\n            });\r\n          }\r\n        });\r\n    }\r\n  }\r\n\r\n  public isItOpenToday = (d: Date | null): boolean => {\r\n    return this.IsItOpenToday(d, this.closingDays);\r\n  };\r\n\r\n  public specificDeliveryTime(checked: boolean): void {\r\n    this.selectDeliveryTime = checked;\r\n    if (this.selectDeliveryTime) {\r\n      this.orderForm.get('deliveryTime')?.enable();\r\n    } else {\r\n      this.orderForm.get('deliveryTime')?.reset();\r\n      this.orderForm.get('deliveryTime')?.disable();\r\n    }\r\n  }\r\n\r\n}\r\n","<mat-card class=\"m-card\">\r\n    <h2>Vous souhaitez repasser la commande suivante :\r\n    </h2>\r\n    <mat-card-content id=\"sameOrderContent\">\r\n        <mat-card-subtitle>\r\n            Veuillez vérifier les produits et sélectionnez un nouveau jour de livraison.\r\n        </mat-card-subtitle>\r\n        <div *ngIf=\"!orderToPlace.deliveryAddress; else mulitpleAddress\">\r\n            <h4>Adresse de livraison et facturation :</h4>\r\n            <p>\r\n                {{ orderToPlace.address.street }}\r\n            </p>\r\n            <p>\r\n                <span>\r\n                    {{ orderToPlace.address.zipCode }}\r\n                </span>\r\n                <span>\r\n                    {{ orderToPlace.address.city }}\r\n                </span>\r\n            </p>\r\n        </div>\r\n        <ng-template #mulitpleAddress>\r\n            <div>\r\n                <h4>Adresse de facturation :</h4>\r\n                <p>{{ orderToPlace.address.street }}</p>\r\n                <p>\r\n                    <span>\r\n                        {{ orderToPlace.address.zipCode }}\r\n                    </span>\r\n                    <span>\r\n                        {{ orderToPlace.address.city }}\r\n                    </span>\r\n                </p>\r\n            </div>\r\n            <div>\r\n                <h4>Adresse de livraison :</h4>\r\n                <p>{{ orderToPlace.deliveryAddress.street }}</p>\r\n                <p>\r\n                    <span>\r\n                        {{ orderToPlace.deliveryAddress.zipCode }}\r\n                    </span>\r\n                    <span>\r\n                        {{ orderToPlace.deliveryAddress.city }}\r\n                    </span>\r\n                </p>\r\n            </div>\r\n        </ng-template>\r\n        <h3 *ngIf=\"orderToPlace.orderComment\">Commentaires\r\n        </h3>\r\n        <div *ngIf=\"orderToPlace.orderComment\">\r\n            <pre>{{ orderToPlace.orderComment }}</pre>\r\n        </div>\r\n        <h3>Produits</h3>\r\n        <ul>\r\n            <li *ngFor=\"let elem of orderToPlace.order\">\r\n                {{ elem?.product }} :\r\n                {{ elem?.quantity }}\r\n                {{ elem.unit === PRODUCTUNIT.KG ? PRODUCTUNITWORDING.KG :\r\n                PRODUCTUNITWORDING.UNIT\r\n                }}<span *ngIf=\"elem && elem.quantity && elem.quantity > 1\">s</span>\r\n                <span *ngIf=\"elem && elem.isSliced\">&nbsp;/&nbsp;Tranché</span>\r\n                <span *ngIf=\"elem && elem.comment\">&nbsp;/&nbsp;Commentaire&nbsp;:&nbsp;{{ elem.comment\r\n                    }}</span>\r\n            </li>\r\n        </ul>\r\n        <h3 fxLayoutAlign=\"flex-end\">Prix total: {{ orderToPlace?.totalPrice?.toFixed(2)\r\n            }} €\r\n            H.T.</h3>\r\n        <form [formGroup]=\"orderForm\" (ngSubmit)=\"placeOrderAgain()\">\r\n            <div fxLayoutAlign=\"center center\">\r\n                <mat-form-field fxFlex=\"40\" fxFlex.lt-sm=\"100\" appearance=\"outline\" (click)=\"picker.open()\">\r\n                    <mat-label>Date de livraison</mat-label>\r\n                    <input matInput required formControlName=\"deliveryDate\" [min]=\"minimalDay\" [matDatepicker]=\"picker\"\r\n                        [matDatepickerFilter]=\"isItOpenToday\" readonly />\r\n                    <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n                    <mat-datepicker #picker touchUi></mat-datepicker>\r\n                    <mat-error *ngIf=\"orderForm.get('deliveryDate')?.invalid\">{{\r\n                        getErrorMessage(\"deliveryDate\", orderForm, errorMessages)\r\n                        }}</mat-error>\r\n                </mat-form-field>\r\n            </div>\r\n            <div fxLayout=\"row\" id=\"checkboxRow\" fxLayoutAlign=\"center center\" fxLayoutAlign.gt-sm=\"flex-start center\">\r\n                <mat-checkbox (change)=\"specificDeliveryTime($event.checked)\" [checked]=\"selectDeliveryTime\">\r\n                    Besoin d'une heure de livraison précise?\r\n                </mat-checkbox>\r\n            </div>\r\n            <div fxLayout=\"row\" fxLayoutAlign=\"center center\" fxLayoutAlign.gt-sm=\"flex-start center\">\r\n                <mat-form-field *ngIf=\"selectDeliveryTime\" fxFlex=\"40\" fxFlex.lt-sm=\"100\" appearance=\"outline\">\r\n                    <mat-label>Heure de livraison</mat-label>\r\n                    <input [ngxTimepicker]=\"$any(datePicker)\" min=\"06:00\" max=\"12:00\" [format]=\"24\" readonly matInput\r\n                        formControlName=\"deliveryTime\" />\r\n                    <ngx-material-timepicker #datePicker></ngx-material-timepicker>\r\n                </mat-form-field>\r\n            </div>\r\n\r\n            <div fxLayout=\"row wrap\" fxLayoutAlign=\"space-around center\" fxLayoutAlign.lt-sm=\"center center\">\r\n                <button fxFlex=\"40\" fxFlex.lt-sm=\"100\" class=\"cancelButton\" routerLink=\"/compte/mes-commandes\"\r\n                    routerLinkActive=\"active\" mat-raised-button>\r\n                    Annuler\r\n                </button>\r\n                <button fxFlex=\"40\" fxFlex.lt-sm=\"100\" mat-raised-button type=\"submit\">\r\n                    Repasser la commande\r\n                </button>\r\n            </div>\r\n        </form>\r\n    </mat-card-content>\r\n</mat-card>","import { Component, OnInit } from '@angular/core';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { PageEvent } from '@angular/material/paginator';\r\nimport { Router } from '@angular/router';\r\nimport { TemplateModalComponent } from '@app/shared/components/info-modal/template-modal.component';\r\nimport { mapOrderListToOrderProductList } from '@app/shared/utils/orderListToOrderProductList';\r\nimport { UserService } from '@app/user/services/user.service';\r\nimport { MonthWording } from '@models/monthWording';\r\nimport { Order, OrderProduct } from '@models/order';\r\nimport { ProductUnit, ProductUnitWording } from '@models/product';\r\nimport { getMonth, set, sub } from 'date-fns';\r\nimport { switchMap, take } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-user-orders',\r\n  templateUrl: './user-orders.component.html',\r\n  styleUrls: ['./user-orders.component.scss'],\r\n})\r\nexport class UserOrdersComponent implements OnInit {\r\n  public PRODUCTUNITWORDING = ProductUnitWording;\r\n  public PRODUCTUNIT = ProductUnit;\r\n  public ordersLoading: boolean = false;\r\n  public totalUserOrders: Order[] = [];\r\n  public displayedUserOrders: Order[] = [];\r\n  public currentIndex: number = 0;\r\n  public arrayCancelableOrders: boolean[] = [];\r\n  public cancelOrderConfirmationModal!: MatDialogRef<TemplateModalComponent>;\r\n  public month: string = \"\";\r\n  public allUserOrdersProducts: OrderProduct[] = [];\r\n\r\n\r\n  constructor(private userService: UserService, private router: Router, private dialog: MatDialog) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getUserOrdersByDate();\r\n    this.getRecapLastMonthOrders();\r\n\r\n  }\r\n\r\n  getRecapLastMonthOrders() {\r\n    this.userService.getUserInfos().pipe(\r\n      take(1),\r\n      switchMap(user => {\r\n        let today = new Date(Date.now());\r\n        today = set(today, { hours: 0, minutes: 0, seconds: 0, milliseconds: 0 });\r\n        let firstDayOfPreviousMonth = today;\r\n        firstDayOfPreviousMonth = sub(firstDayOfPreviousMonth, { months: 1 });\r\n        firstDayOfPreviousMonth = set(firstDayOfPreviousMonth, { date: 1 });\r\n        this.month = MonthWording[getMonth(firstDayOfPreviousMonth)];\r\n        return this.userService.getUserOrdersForSpecificMonth(user.firebaseUid, firstDayOfPreviousMonth);\r\n      })\r\n    )\r\n      .subscribe(v => {\r\n        this.allUserOrdersProducts = mapOrderListToOrderProductList(v);\r\n      });\r\n  }\r\n\r\n  getUserOrdersByDate(): void {\r\n    this.ordersLoading = true;\r\n    this.userService.getUserInfos().pipe(\r\n      take(1),\r\n      switchMap(userInfos => this.userService.getUserOrders(userInfos.firebaseUid as string))\r\n    ).subscribe(orders => {\r\n      this.totalUserOrders = orders.sort((a, b) => {\r\n        if (a.deliveryDate > b.deliveryDate) {\r\n          return -1;\r\n        }\r\n        if (a.deliveryDate < b.deliveryDate) {\r\n          return 1;\r\n        }\r\n        return 0;\r\n      });\r\n      this.ordersLoading = false;\r\n      this.initiateFirstPageData();\r\n    });\r\n  }\r\n\r\n  initiateFirstPageData() {\r\n    this.displayedUserOrders = this.totalUserOrders.slice(0, 10);\r\n\r\n    let today = new Date()\r\n    this.arrayCancelableOrders = this.totalUserOrders.map(el => {\r\n      let deliveryDate = el.deliveryDate.toDate().getTime();\r\n      let daysDifference = (deliveryDate - today.getTime()) / (1000 * 3600 * 24);\r\n\r\n      if (daysDifference >= 2) {\r\n        return true;\r\n      } else if (daysDifference > 1 && daysDifference < 2 && today.getHours() < 18) {\r\n        return true;\r\n      } else {\r\n        return false;\r\n      }\r\n    })\r\n  }\r\n\r\n  pagination(event: PageEvent) {\r\n    let isUserGoingForward = event.previousPageIndex! < event.pageIndex;\r\n    this.currentIndex = event.pageIndex;\r\n    if (isUserGoingForward) {\r\n      if (event?.pageIndex == Math.floor(this.totalUserOrders.length / 10)) {\r\n        this.displayedUserOrders = this.totalUserOrders.slice((event?.pageIndex * 10), this.totalUserOrders.length + 1);\r\n      } else {\r\n        this.displayedUserOrders = this.totalUserOrders.slice(((event?.pageIndex - 1) * 10), (event?.pageIndex * 10));\r\n      }\r\n    } else {\r\n      this.displayedUserOrders = this.totalUserOrders.slice((event?.pageIndex * 10), ((event?.pageIndex + 1) * 10));\r\n    }\r\n  }\r\n\r\n  cancelOrder(orderId: string | undefined) {\r\n    this.cancelOrderConfirmationModal = this.dialog.open(TemplateModalComponent, {\r\n      data: {\r\n        title: \"Annuler la commande\",\r\n        bodyText: `\r\n        <p>Êtes-vous sûr de vouloir annuler votre commande ?</p>\r\n        <p>Vous aurez toujours la possibilité de repasser la même commande après l'annulation.</p>\r\n        <p>De plus, elle sera toujours visible dans votre liste des commandes.</p>\r\n        `,\r\n        extraCloseButton: true,\r\n        buttonText: \"Annuler la commande\",\r\n        buttonAction: () => this.userService.cancelOrder(orderId as string).pipe(take(1)).subscribe({\r\n          error: (err) => {\r\n            this.cancelOrderConfirmationModal = this.dialog.open(TemplateModalComponent, {\r\n              data: {\r\n                title: \"Oups\",\r\n                bodyText: `\r\n                <p>Une erreur a eu lieu pendant l'annulation de votre commande ${orderId}, veuillez réessayer plus tard ou contacter la boulangerie directement. ${err}</p>\r\n                `\r\n              },\r\n              disableClose: true,\r\n              width: '400px',\r\n              maxWidth: '90%',\r\n            });\r\n          }\r\n        })\r\n      },\r\n      disableClose: true,\r\n      width: '400px',\r\n      maxWidth: '90%',\r\n    });\r\n  }\r\n\r\n  placeSameOrder(order: Order) {\r\n    this.router.navigate([\"/compte/repasser-commande\"], { state: { data: { ...order } } })\r\n  }\r\n\r\n}\r\n","<div fxLayout=\"row wrap\" fxLayoutAlign=\"center center\" *ngIf=\"!totalUserOrders.length && ordersLoading\">\r\n    <mat-spinner></mat-spinner>\r\n</div>\r\n\r\n<div class=\"noOrder\" fxLayout=\"row\" fxLayoutAlign=\"center center\"\r\n    *ngIf=\"!totalUserOrders.length && totalUserOrders.length === 0 && !ordersLoading\">\r\n    <h2>Vous n'avez pas encore passé de commandes.</h2>\r\n</div>\r\n<mat-card class=\"m-card\" id=\"ordersListCard\" *ngIf=\"totalUserOrders.length\">\r\n    <mat-card-title fxLayout=\"row wrap\" fxLayoutAlign=\"center center\" class=\"m-card-title\">\r\n        <h1>Mes commandes</h1>\r\n    </mat-card-title>\r\n\r\n\r\n    <mat-card-content>\r\n        <mat-expansion-panel id=\"orderContainer\" *ngIf=\"allUserOrdersProducts.length > 0\">\r\n            <mat-expansion-panel-header class=\"userOrder\">\r\n                <mat-panel-title>Récapitulatif de mes commandes en {{month}}\r\n                </mat-panel-title>\r\n            </mat-expansion-panel-header>\r\n            <mat-card-content class=\"orderDetail\">\r\n                <ul>\r\n                    <li *ngFor=\"let elem of allUserOrdersProducts\">\r\n                        {{ elem?.product }} :\r\n                        {{ elem?.quantity }}\r\n                        {{ elem.unit === PRODUCTUNIT.KG ? PRODUCTUNITWORDING.KG :\r\n                        PRODUCTUNITWORDING.UNIT\r\n                        }}<span *ngIf=\"elem && elem.quantity && elem.quantity > 1\">s</span>\r\n                        <span *ngIf=\"elem && elem.isSliced\">&nbsp;/&nbsp;Tranché</span>\r\n                        <span *ngIf=\"elem && elem.comment\">&nbsp;/&nbsp;Commentaire&nbsp;:&nbsp;{{ elem.comment\r\n                            }}</span>\r\n                    </li>\r\n                </ul>\r\n            </mat-card-content>\r\n        </mat-expansion-panel>\r\n        <mat-expansion-panel id=\"orderContainer\" *ngFor=\"let order of displayedUserOrders; let i = index\">\r\n            <mat-expansion-panel-header class=\"userOrder\">\r\n                <mat-panel-title>Commande\r\n                    n°{{totalUserOrders.length - (currentIndex * 10) - i}} pour le\r\n                    {{ order.deliveryDate.toDate() | date: \"EEEE d MMMM y\"\r\n                    }}{{\r\n                    order?.deliveryTime ? \" à \" + order.deliveryTime : \"\"\r\n                    }}<span id=\"canceledOrder\">{{order.isCanceled ? \" ANNULÉE\": \"\"}}</span>\r\n                </mat-panel-title>\r\n            </mat-expansion-panel-header>\r\n            <mat-card-content class=\"orderDetail\">\r\n                <mat-card-subtitle>\r\n                    Commandée le\r\n                    {{ order.orderDate.toDate() | date: \"EEEE d MMMM y\" }} à\r\n                    {{ order.orderDate.toDate() | date: \"h:mm\" }}\r\n                </mat-card-subtitle>\r\n                <div *ngIf=\"!order.deliveryAddress; else mulitpleAddress\">\r\n                    <h4>Adresse de livraison et facturation :</h4>\r\n                    <p>\r\n                        {{ order.address.street }}\r\n                    </p>\r\n                    <p>\r\n                        <span>\r\n                            {{ order.address.zipCode }}\r\n                        </span>\r\n                        <span>\r\n                            {{ order.address.city }}\r\n                        </span>\r\n                    </p>\r\n                </div>\r\n                <ng-template #mulitpleAddress>\r\n                    <div>\r\n                        <h4>Adresse de facturation :</h4>\r\n                        <p>{{ order.address.street }}</p>\r\n                        <p>\r\n                            <span>\r\n                                {{ order.address.zipCode }}\r\n                            </span>\r\n                            <span>\r\n                                {{ order.address.city }}\r\n                            </span>\r\n                        </p>\r\n                    </div>\r\n                    <div>\r\n                        <h4>Adresse de livraison :</h4>\r\n                        <p>{{ order.deliveryAddress.street }}</p>\r\n                        <p>\r\n                            <span>\r\n                                {{ order.deliveryAddress.zipCode }}\r\n                            </span>\r\n                            <span>\r\n                                {{ order.deliveryAddress.city }}\r\n                            </span>\r\n                        </p>\r\n                    </div>\r\n                </ng-template>\r\n                <h3 *ngIf=\"order.orderComment\">Commentaires\r\n                </h3>\r\n                <div *ngIf=\"order.orderComment\">\r\n                    <pre>{{ order.orderComment }}</pre>\r\n                </div>\r\n                <h3>Produits</h3>\r\n                <ul>\r\n                    <li *ngFor=\"let elem of order.order\">\r\n                        {{ elem?.product }} :\r\n                        {{ elem?.quantity }}\r\n                        {{ elem.unit === PRODUCTUNIT.KG ? PRODUCTUNITWORDING.KG :\r\n                        PRODUCTUNITWORDING.UNIT\r\n                        }}<span *ngIf=\"elem && elem.quantity && elem.quantity > 1\">s</span>\r\n                        <span *ngIf=\"elem && elem.isSliced\">&nbsp;/&nbsp;Tranché</span>\r\n                        <span *ngIf=\"elem && elem.comment\">&nbsp;/&nbsp;Commentaire&nbsp;:&nbsp;{{ elem.comment\r\n                            }}</span>\r\n                    </li>\r\n                </ul>\r\n                <h3 fxLayoutAlign=\"flex-end\">Prix total: {{\r\n                    order?.totalPrice?.toFixed(2)\r\n                    }} €\r\n                    H.T.</h3>\r\n                <div fxLayout=\"row wrap\" fxLayoutAlign=\"space-around center\" fxLayoutAlign.lt-sm=\"center center\">\r\n                    <button fxFlex=\"40\" fxFlex.lt-sm=\"100\" class=\"cancelButton\"\r\n                        *ngIf=\"arrayCancelableOrders[(currentIndex * 10) + i] && !order.isCanceled\" mat-raised-button\r\n                        (click)=\"cancelOrder(order?.orderId)\">\r\n                        Annuler ma commande\r\n                    </button>\r\n                    <button fxFlex=\"40\" fxFlex.lt-sm=\"100\" mat-raised-button (click)=\"placeSameOrder(order)\">\r\n                        Repasser la commande\r\n                    </button>\r\n                </div>\r\n            </mat-card-content>\r\n        </mat-expansion-panel>\r\n        <mat-paginator #paginator [length]=\"totalUserOrders.length\" [pageSize]=\"10\" [hidePageSize]=\"true\"\r\n            [showFirstLastButtons]=\"true\" aria-label=\"Selectionnez la page\" (page)=\"pagination($event)\">\r\n        </mat-paginator>\r\n    </mat-card-content>\r\n</mat-card>","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { InfosPersoComponent } from './pages/infos-perso/infos-perso.component';\r\nimport { PlaceSameOrderFormComponent } from './pages/place-same-order-form/place-same-order-form.component';\r\nimport { UserOrdersComponent } from './pages/user-orders/user-orders.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  { path: '', redirectTo: 'infos', pathMatch: 'full' },\r\n  { path: 'infos', component: InfosPersoComponent },\r\n  { path: 'mes-commandes', component: UserOrdersComponent },\r\n  { path: 'repasser-commande', component: PlaceSameOrderFormComponent },\r\n  // { path: 'recap', component: RecapMensuelComponent },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class UserRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatExpansionModule } from '@angular/material/expansion';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { SharedModule } from '@app/shared/shared.module';\r\nimport { NgxMaterialTimepickerModule } from 'ngx-material-timepicker';\r\n\r\nimport { InfosPersoComponent } from './pages/infos-perso/infos-perso.component';\r\nimport { PlaceSameOrderFormComponent } from './pages/place-same-order-form/place-same-order-form.component';\r\nimport { UserOrdersComponent } from './pages/user-orders/user-orders.component';\r\nimport { UserService } from './services/user.service';\r\nimport { UserRoutingModule } from './user-routing.module';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    InfosPersoComponent,\r\n    UserOrdersComponent,\r\n    PlaceSameOrderFormComponent,\r\n    // RecapMensuelComponent\r\n  ],\r\n  imports: [\r\n    UserRoutingModule,\r\n    MatFormFieldModule,\r\n    ReactiveFormsModule,\r\n    MatInputModule,\r\n    MatCheckboxModule,\r\n    MatCardModule,\r\n    MatIconModule,\r\n    SharedModule,\r\n    MatExpansionModule,\r\n    MatPaginatorModule,\r\n    MatDatepickerModule,\r\n    NgxMaterialTimepickerModule,\r\n  ],\r\n  providers: [UserService],\r\n})\r\nexport class UserModule { }\r\n","import * as i0 from '@angular/core';\nimport { NgModule, Injectable } from '@angular/core';\nimport { coerceArray } from '@angular/cdk/coercion';\nimport { Subject, combineLatest, concat, Observable } from 'rxjs';\nimport { take, skip, debounceTime, map, startWith, takeUntil } from 'rxjs/operators';\nimport * as i1 from '@angular/cdk/platform';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass LayoutModule {\n}\nLayoutModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.0\", ngImport: i0, type: LayoutModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nLayoutModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.2.0\", ngImport: i0, type: LayoutModule });\nLayoutModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.2.0\", ngImport: i0, type: LayoutModule });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.0\", ngImport: i0, type: LayoutModule, decorators: [{\n            type: NgModule,\n            args: [{}]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Global registry for all dynamically-created, injected media queries. */\nconst mediaQueriesForWebkitCompatibility = new Set();\n/** Style tag that holds all of the dynamically-created media queries. */\nlet mediaQueryStyleNode;\n/** A utility for calling matchMedia queries. */\nclass MediaMatcher {\n    constructor(_platform) {\n        this._platform = _platform;\n        this._matchMedia =\n            this._platform.isBrowser && window.matchMedia\n                ? // matchMedia is bound to the window scope intentionally as it is an illegal invocation to\n                    // call it from a different scope.\n                    window.matchMedia.bind(window)\n                : noopMatchMedia;\n    }\n    /**\n     * Evaluates the given media query and returns the native MediaQueryList from which results\n     * can be retrieved.\n     * Confirms the layout engine will trigger for the selector query provided and returns the\n     * MediaQueryList for the query provided.\n     */\n    matchMedia(query) {\n        if (this._platform.WEBKIT || this._platform.BLINK) {\n            createEmptyStyleRule(query);\n        }\n        return this._matchMedia(query);\n    }\n}\nMediaMatcher.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.0\", ngImport: i0, type: MediaMatcher, deps: [{ token: i1.Platform }], target: i0.ɵɵFactoryTarget.Injectable });\nMediaMatcher.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.2.0\", ngImport: i0, type: MediaMatcher, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.0\", ngImport: i0, type: MediaMatcher, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () { return [{ type: i1.Platform }]; } });\n/**\n * Creates an empty stylesheet that is used to work around browser inconsistencies related to\n * `matchMedia`. At the time of writing, it handles the following cases:\n * 1. On WebKit browsers, a media query has to have at least one rule in order for `matchMedia`\n * to fire. We work around it by declaring a dummy stylesheet with a `@media` declaration.\n * 2. In some cases Blink browsers will stop firing the `matchMedia` listener if none of the rules\n * inside the `@media` match existing elements on the page. We work around it by having one rule\n * targeting the `body`. See https://github.com/angular/components/issues/23546.\n */\nfunction createEmptyStyleRule(query) {\n    if (mediaQueriesForWebkitCompatibility.has(query)) {\n        return;\n    }\n    try {\n        if (!mediaQueryStyleNode) {\n            mediaQueryStyleNode = document.createElement('style');\n            mediaQueryStyleNode.setAttribute('type', 'text/css');\n            document.head.appendChild(mediaQueryStyleNode);\n        }\n        if (mediaQueryStyleNode.sheet) {\n            mediaQueryStyleNode.sheet.insertRule(`@media ${query} {body{ }}`, 0);\n            mediaQueriesForWebkitCompatibility.add(query);\n        }\n    }\n    catch (e) {\n        console.error(e);\n    }\n}\n/** No-op matchMedia replacement for non-browser platforms. */\nfunction noopMatchMedia(query) {\n    // Use `as any` here to avoid adding additional necessary properties for\n    // the noop matcher.\n    return {\n        matches: query === 'all' || query === '',\n        media: query,\n        addListener: () => { },\n        removeListener: () => { },\n    };\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Utility for checking the matching state of @media queries. */\nclass BreakpointObserver {\n    constructor(_mediaMatcher, _zone) {\n        this._mediaMatcher = _mediaMatcher;\n        this._zone = _zone;\n        /**  A map of all media queries currently being listened for. */\n        this._queries = new Map();\n        /** A subject for all other observables to takeUntil based on. */\n        this._destroySubject = new Subject();\n    }\n    /** Completes the active subject, signalling to all other observables to complete. */\n    ngOnDestroy() {\n        this._destroySubject.next();\n        this._destroySubject.complete();\n    }\n    /**\n     * Whether one or more media queries match the current viewport size.\n     * @param value One or more media queries to check.\n     * @returns Whether any of the media queries match.\n     */\n    isMatched(value) {\n        const queries = splitQueries(coerceArray(value));\n        return queries.some(mediaQuery => this._registerQuery(mediaQuery).mql.matches);\n    }\n    /**\n     * Gets an observable of results for the given queries that will emit new results for any changes\n     * in matching of the given queries.\n     * @param value One or more media queries to check.\n     * @returns A stream of matches for the given queries.\n     */\n    observe(value) {\n        const queries = splitQueries(coerceArray(value));\n        const observables = queries.map(query => this._registerQuery(query).observable);\n        let stateObservable = combineLatest(observables);\n        // Emit the first state immediately, and then debounce the subsequent emissions.\n        stateObservable = concat(stateObservable.pipe(take(1)), stateObservable.pipe(skip(1), debounceTime(0)));\n        return stateObservable.pipe(map(breakpointStates => {\n            const response = {\n                matches: false,\n                breakpoints: {},\n            };\n            breakpointStates.forEach(({ matches, query }) => {\n                response.matches = response.matches || matches;\n                response.breakpoints[query] = matches;\n            });\n            return response;\n        }));\n    }\n    /** Registers a specific query to be listened for. */\n    _registerQuery(query) {\n        // Only set up a new MediaQueryList if it is not already being listened for.\n        if (this._queries.has(query)) {\n            return this._queries.get(query);\n        }\n        const mql = this._mediaMatcher.matchMedia(query);\n        // Create callback for match changes and add it is as a listener.\n        const queryObservable = new Observable((observer) => {\n            // Listener callback methods are wrapped to be placed back in ngZone. Callbacks must be placed\n            // back into the zone because matchMedia is only included in Zone.js by loading the\n            // webapis-media-query.js file alongside the zone.js file.  Additionally, some browsers do not\n            // have MediaQueryList inherit from EventTarget, which causes inconsistencies in how Zone.js\n            // patches it.\n            const handler = (e) => this._zone.run(() => observer.next(e));\n            mql.addListener(handler);\n            return () => {\n                mql.removeListener(handler);\n            };\n        }).pipe(startWith(mql), map(({ matches }) => ({ query, matches })), takeUntil(this._destroySubject));\n        // Add the MediaQueryList to the set of queries.\n        const output = { observable: queryObservable, mql };\n        this._queries.set(query, output);\n        return output;\n    }\n}\nBreakpointObserver.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.0\", ngImport: i0, type: BreakpointObserver, deps: [{ token: MediaMatcher }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Injectable });\nBreakpointObserver.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.2.0\", ngImport: i0, type: BreakpointObserver, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.0\", ngImport: i0, type: BreakpointObserver, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () { return [{ type: MediaMatcher }, { type: i0.NgZone }]; } });\n/**\n * Split each query string into separate query strings if two queries are provided as comma\n * separated.\n */\nfunction splitQueries(queries) {\n    return queries\n        .map(query => query.split(','))\n        .reduce((a1, a2) => a1.concat(a2))\n        .map(query => query.trim());\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// PascalCase is being used as Breakpoints is used like an enum.\n// tslint:disable-next-line:variable-name\nconst Breakpoints = {\n    XSmall: '(max-width: 599.98px)',\n    Small: '(min-width: 600px) and (max-width: 959.98px)',\n    Medium: '(min-width: 960px) and (max-width: 1279.98px)',\n    Large: '(min-width: 1280px) and (max-width: 1919.98px)',\n    XLarge: '(min-width: 1920px)',\n    Handset: '(max-width: 599.98px) and (orientation: portrait), ' +\n        '(max-width: 959.98px) and (orientation: landscape)',\n    Tablet: '(min-width: 600px) and (max-width: 839.98px) and (orientation: portrait), ' +\n        '(min-width: 960px) and (max-width: 1279.98px) and (orientation: landscape)',\n    Web: '(min-width: 840px) and (orientation: portrait), ' +\n        '(min-width: 1280px) and (orientation: landscape)',\n    HandsetPortrait: '(max-width: 599.98px) and (orientation: portrait)',\n    TabletPortrait: '(min-width: 600px) and (max-width: 839.98px) and (orientation: portrait)',\n    WebPortrait: '(min-width: 840px) and (orientation: portrait)',\n    HandsetLandscape: '(max-width: 959.98px) and (orientation: landscape)',\n    TabletLandscape: '(min-width: 960px) and (max-width: 1279.98px) and (orientation: landscape)',\n    WebLandscape: '(min-width: 1280px) and (orientation: landscape)',\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BreakpointObserver, Breakpoints, LayoutModule, MediaMatcher };\n","import * as i6 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { Injectable, Optional, SkipSelf, InjectionToken, EventEmitter, Directive, Input, Output, Component, ChangeDetectionStrategy, ViewEncapsulation, Inject, NgModule } from '@angular/core';\nimport * as i4 from '@angular/material/core';\nimport { mixinDisabled, mixinInitialized, MatCommonModule } from '@angular/material/core';\nimport * as i5 from '@angular/material/button';\nimport { MatButtonModule } from '@angular/material/button';\nimport * as i3 from '@angular/material/select';\nimport { MatSelectModule } from '@angular/material/select';\nimport * as i7 from '@angular/material/tooltip';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { coerceNumberProperty, coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { Subject } from 'rxjs';\nimport * as i2 from '@angular/material/form-field';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * To modify the labels and text displayed, create a new instance of MatPaginatorIntl and\n * include it in a custom provider\n */\nclass MatPaginatorIntl {\n    constructor() {\n        /**\n         * Stream to emit from when labels are changed. Use this to notify components when the labels have\n         * changed after initialization.\n         */\n        this.changes = new Subject();\n        /** A label for the page size selector. */\n        this.itemsPerPageLabel = 'Items per page:';\n        /** A label for the button that increments the current page. */\n        this.nextPageLabel = 'Next page';\n        /** A label for the button that decrements the current page. */\n        this.previousPageLabel = 'Previous page';\n        /** A label for the button that moves to the first page. */\n        this.firstPageLabel = 'First page';\n        /** A label for the button that moves to the last page. */\n        this.lastPageLabel = 'Last page';\n        /** A label for the range of items within the current page and the length of the whole list. */\n        this.getRangeLabel = (page, pageSize, length) => {\n            if (length == 0 || pageSize == 0) {\n                return `0 of ${length}`;\n            }\n            length = Math.max(length, 0);\n            const startIndex = page * pageSize;\n            // If the start index exceeds the list length, do not try and fix the end index to the end.\n            const endIndex = startIndex < length ? Math.min(startIndex + pageSize, length) : startIndex + pageSize;\n            return `${startIndex + 1} – ${endIndex} of ${length}`;\n        };\n    }\n}\nMatPaginatorIntl.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.0\", ngImport: i0, type: MatPaginatorIntl, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\nMatPaginatorIntl.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.2.0\", ngImport: i0, type: MatPaginatorIntl, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.0\", ngImport: i0, type: MatPaginatorIntl, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\n/** @docs-private */\nfunction MAT_PAGINATOR_INTL_PROVIDER_FACTORY(parentIntl) {\n    return parentIntl || new MatPaginatorIntl();\n}\n/** @docs-private */\nconst MAT_PAGINATOR_INTL_PROVIDER = {\n    // If there is already an MatPaginatorIntl available, use that. Otherwise, provide a new one.\n    provide: MatPaginatorIntl,\n    deps: [[new Optional(), new SkipSelf(), MatPaginatorIntl]],\n    useFactory: MAT_PAGINATOR_INTL_PROVIDER_FACTORY,\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** The default page size if there is no page size and there are no provided page size options. */\nconst DEFAULT_PAGE_SIZE = 50;\n/**\n * Change event object that is emitted when the user selects a\n * different page size or navigates to another page.\n */\nclass PageEvent {\n}\n/** Injection token that can be used to provide the default options for the paginator module. */\nconst MAT_PAGINATOR_DEFAULT_OPTIONS = new InjectionToken('MAT_PAGINATOR_DEFAULT_OPTIONS');\n// Boilerplate for applying mixins to _MatPaginatorBase.\n/** @docs-private */\nconst _MatPaginatorMixinBase = mixinDisabled(mixinInitialized(class {\n}));\n/**\n * Base class with all of the `MatPaginator` functionality.\n * @docs-private\n */\nclass _MatPaginatorBase extends _MatPaginatorMixinBase {\n    constructor(_intl, _changeDetectorRef, defaults) {\n        super();\n        this._intl = _intl;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._pageIndex = 0;\n        this._length = 0;\n        this._pageSizeOptions = [];\n        this._hidePageSize = false;\n        this._showFirstLastButtons = false;\n        /** Event emitted when the paginator changes the page size or page index. */\n        this.page = new EventEmitter();\n        this._intlChanges = _intl.changes.subscribe(() => this._changeDetectorRef.markForCheck());\n        if (defaults) {\n            const { pageSize, pageSizeOptions, hidePageSize, showFirstLastButtons } = defaults;\n            if (pageSize != null) {\n                this._pageSize = pageSize;\n            }\n            if (pageSizeOptions != null) {\n                this._pageSizeOptions = pageSizeOptions;\n            }\n            if (hidePageSize != null) {\n                this._hidePageSize = hidePageSize;\n            }\n            if (showFirstLastButtons != null) {\n                this._showFirstLastButtons = showFirstLastButtons;\n            }\n        }\n    }\n    /** The zero-based page index of the displayed list of items. Defaulted to 0. */\n    get pageIndex() {\n        return this._pageIndex;\n    }\n    set pageIndex(value) {\n        this._pageIndex = Math.max(coerceNumberProperty(value), 0);\n        this._changeDetectorRef.markForCheck();\n    }\n    /** The length of the total number of items that are being paginated. Defaulted to 0. */\n    get length() {\n        return this._length;\n    }\n    set length(value) {\n        this._length = coerceNumberProperty(value);\n        this._changeDetectorRef.markForCheck();\n    }\n    /** Number of items to display on a page. By default set to 50. */\n    get pageSize() {\n        return this._pageSize;\n    }\n    set pageSize(value) {\n        this._pageSize = Math.max(coerceNumberProperty(value), 0);\n        this._updateDisplayedPageSizeOptions();\n    }\n    /** The set of provided page size options to display to the user. */\n    get pageSizeOptions() {\n        return this._pageSizeOptions;\n    }\n    set pageSizeOptions(value) {\n        this._pageSizeOptions = (value || []).map(p => coerceNumberProperty(p));\n        this._updateDisplayedPageSizeOptions();\n    }\n    /** Whether to hide the page size selection UI from the user. */\n    get hidePageSize() {\n        return this._hidePageSize;\n    }\n    set hidePageSize(value) {\n        this._hidePageSize = coerceBooleanProperty(value);\n    }\n    /** Whether to show the first/last buttons UI to the user. */\n    get showFirstLastButtons() {\n        return this._showFirstLastButtons;\n    }\n    set showFirstLastButtons(value) {\n        this._showFirstLastButtons = coerceBooleanProperty(value);\n    }\n    ngOnInit() {\n        this._initialized = true;\n        this._updateDisplayedPageSizeOptions();\n        this._markInitialized();\n    }\n    ngOnDestroy() {\n        this._intlChanges.unsubscribe();\n    }\n    /** Advances to the next page if it exists. */\n    nextPage() {\n        if (!this.hasNextPage()) {\n            return;\n        }\n        const previousPageIndex = this.pageIndex;\n        this.pageIndex = this.pageIndex + 1;\n        this._emitPageEvent(previousPageIndex);\n    }\n    /** Move back to the previous page if it exists. */\n    previousPage() {\n        if (!this.hasPreviousPage()) {\n            return;\n        }\n        const previousPageIndex = this.pageIndex;\n        this.pageIndex = this.pageIndex - 1;\n        this._emitPageEvent(previousPageIndex);\n    }\n    /** Move to the first page if not already there. */\n    firstPage() {\n        // hasPreviousPage being false implies at the start\n        if (!this.hasPreviousPage()) {\n            return;\n        }\n        const previousPageIndex = this.pageIndex;\n        this.pageIndex = 0;\n        this._emitPageEvent(previousPageIndex);\n    }\n    /** Move to the last page if not already there. */\n    lastPage() {\n        // hasNextPage being false implies at the end\n        if (!this.hasNextPage()) {\n            return;\n        }\n        const previousPageIndex = this.pageIndex;\n        this.pageIndex = this.getNumberOfPages() - 1;\n        this._emitPageEvent(previousPageIndex);\n    }\n    /** Whether there is a previous page. */\n    hasPreviousPage() {\n        return this.pageIndex >= 1 && this.pageSize != 0;\n    }\n    /** Whether there is a next page. */\n    hasNextPage() {\n        const maxPageIndex = this.getNumberOfPages() - 1;\n        return this.pageIndex < maxPageIndex && this.pageSize != 0;\n    }\n    /** Calculate the number of pages */\n    getNumberOfPages() {\n        if (!this.pageSize) {\n            return 0;\n        }\n        return Math.ceil(this.length / this.pageSize);\n    }\n    /**\n     * Changes the page size so that the first item displayed on the page will still be\n     * displayed using the new page size.\n     *\n     * For example, if the page size is 10 and on the second page (items indexed 10-19) then\n     * switching so that the page size is 5 will set the third page as the current page so\n     * that the 10th item will still be displayed.\n     */\n    _changePageSize(pageSize) {\n        // Current page needs to be updated to reflect the new page size. Navigate to the page\n        // containing the previous page's first item.\n        const startIndex = this.pageIndex * this.pageSize;\n        const previousPageIndex = this.pageIndex;\n        this.pageIndex = Math.floor(startIndex / pageSize) || 0;\n        this.pageSize = pageSize;\n        this._emitPageEvent(previousPageIndex);\n    }\n    /** Checks whether the buttons for going forwards should be disabled. */\n    _nextButtonsDisabled() {\n        return this.disabled || !this.hasNextPage();\n    }\n    /** Checks whether the buttons for going backwards should be disabled. */\n    _previousButtonsDisabled() {\n        return this.disabled || !this.hasPreviousPage();\n    }\n    /**\n     * Updates the list of page size options to display to the user. Includes making sure that\n     * the page size is an option and that the list is sorted.\n     */\n    _updateDisplayedPageSizeOptions() {\n        if (!this._initialized) {\n            return;\n        }\n        // If no page size is provided, use the first page size option or the default page size.\n        if (!this.pageSize) {\n            this._pageSize =\n                this.pageSizeOptions.length != 0 ? this.pageSizeOptions[0] : DEFAULT_PAGE_SIZE;\n        }\n        this._displayedPageSizeOptions = this.pageSizeOptions.slice();\n        if (this._displayedPageSizeOptions.indexOf(this.pageSize) === -1) {\n            this._displayedPageSizeOptions.push(this.pageSize);\n        }\n        // Sort the numbers using a number-specific sort function.\n        this._displayedPageSizeOptions.sort((a, b) => a - b);\n        this._changeDetectorRef.markForCheck();\n    }\n    /** Emits an event notifying that a change of the paginator's properties has been triggered. */\n    _emitPageEvent(previousPageIndex) {\n        this.page.emit({\n            previousPageIndex,\n            pageIndex: this.pageIndex,\n            pageSize: this.pageSize,\n            length: this.length,\n        });\n    }\n}\n_MatPaginatorBase.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.0\", ngImport: i0, type: _MatPaginatorBase, deps: \"invalid\", target: i0.ɵɵFactoryTarget.Directive });\n_MatPaginatorBase.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.2.0\", type: _MatPaginatorBase, inputs: { color: \"color\", pageIndex: \"pageIndex\", length: \"length\", pageSize: \"pageSize\", pageSizeOptions: \"pageSizeOptions\", hidePageSize: \"hidePageSize\", showFirstLastButtons: \"showFirstLastButtons\" }, outputs: { page: \"page\" }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.0\", ngImport: i0, type: _MatPaginatorBase, decorators: [{\n            type: Directive\n        }], ctorParameters: function () { return [{ type: MatPaginatorIntl }, { type: i0.ChangeDetectorRef }, { type: undefined }]; }, propDecorators: { color: [{\n                type: Input\n            }], pageIndex: [{\n                type: Input\n            }], length: [{\n                type: Input\n            }], pageSize: [{\n                type: Input\n            }], pageSizeOptions: [{\n                type: Input\n            }], hidePageSize: [{\n                type: Input\n            }], showFirstLastButtons: [{\n                type: Input\n            }], page: [{\n                type: Output\n            }] } });\n/**\n * Component to provide navigation between paged information. Displays the size of the current\n * page, user-selectable options to change that size, what items are being shown, and\n * navigational button to go to the previous or next page.\n */\nclass MatPaginator extends _MatPaginatorBase {\n    constructor(intl, changeDetectorRef, defaults) {\n        super(intl, changeDetectorRef, defaults);\n        if (defaults && defaults.formFieldAppearance != null) {\n            this._formFieldAppearance = defaults.formFieldAppearance;\n        }\n    }\n}\nMatPaginator.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.0\", ngImport: i0, type: MatPaginator, deps: [{ token: MatPaginatorIntl }, { token: i0.ChangeDetectorRef }, { token: MAT_PAGINATOR_DEFAULT_OPTIONS, optional: true }], target: i0.ɵɵFactoryTarget.Component });\nMatPaginator.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.2.0\", type: MatPaginator, selector: \"mat-paginator\", inputs: { disabled: \"disabled\" }, host: { attributes: { \"role\": \"group\" }, classAttribute: \"mat-paginator\" }, exportAs: [\"matPaginator\"], usesInheritance: true, ngImport: i0, template: \"<div class=\\\"mat-paginator-outer-container\\\">\\n  <div class=\\\"mat-paginator-container\\\">\\n    <div class=\\\"mat-paginator-page-size\\\" *ngIf=\\\"!hidePageSize\\\">\\n      <div class=\\\"mat-paginator-page-size-label\\\">\\n        {{_intl.itemsPerPageLabel}}\\n      </div>\\n\\n      <mat-form-field\\n        *ngIf=\\\"_displayedPageSizeOptions.length > 1\\\"\\n        [appearance]=\\\"_formFieldAppearance!\\\"\\n        [color]=\\\"color\\\"\\n        class=\\\"mat-paginator-page-size-select\\\">\\n        <mat-select\\n          [value]=\\\"pageSize\\\"\\n          [disabled]=\\\"disabled\\\"\\n          [aria-label]=\\\"_intl.itemsPerPageLabel\\\"\\n          (selectionChange)=\\\"_changePageSize($event.value)\\\">\\n          <mat-option *ngFor=\\\"let pageSizeOption of _displayedPageSizeOptions\\\" [value]=\\\"pageSizeOption\\\">\\n            {{pageSizeOption}}\\n          </mat-option>\\n        </mat-select>\\n      </mat-form-field>\\n\\n      <div\\n        class=\\\"mat-paginator-page-size-value\\\"\\n        *ngIf=\\\"_displayedPageSizeOptions.length <= 1\\\">{{pageSize}}</div>\\n    </div>\\n\\n    <div class=\\\"mat-paginator-range-actions\\\">\\n      <div class=\\\"mat-paginator-range-label\\\">\\n        {{_intl.getRangeLabel(pageIndex, pageSize, length)}}\\n      </div>\\n\\n      <button mat-icon-button type=\\\"button\\\"\\n              class=\\\"mat-paginator-navigation-first\\\"\\n              (click)=\\\"firstPage()\\\"\\n              [attr.aria-label]=\\\"_intl.firstPageLabel\\\"\\n              [matTooltip]=\\\"_intl.firstPageLabel\\\"\\n              [matTooltipDisabled]=\\\"_previousButtonsDisabled()\\\"\\n              [matTooltipPosition]=\\\"'above'\\\"\\n              [disabled]=\\\"_previousButtonsDisabled()\\\"\\n              *ngIf=\\\"showFirstLastButtons\\\">\\n        <svg class=\\\"mat-paginator-icon\\\" viewBox=\\\"0 0 24 24\\\" focusable=\\\"false\\\">\\n          <path d=\\\"M18.41 16.59L13.82 12l4.59-4.59L17 6l-6 6 6 6zM6 6h2v12H6z\\\"/>\\n        </svg>\\n      </button>\\n      <button mat-icon-button type=\\\"button\\\"\\n              class=\\\"mat-paginator-navigation-previous\\\"\\n              (click)=\\\"previousPage()\\\"\\n              [attr.aria-label]=\\\"_intl.previousPageLabel\\\"\\n              [matTooltip]=\\\"_intl.previousPageLabel\\\"\\n              [matTooltipDisabled]=\\\"_previousButtonsDisabled()\\\"\\n              [matTooltipPosition]=\\\"'above'\\\"\\n              [disabled]=\\\"_previousButtonsDisabled()\\\">\\n        <svg class=\\\"mat-paginator-icon\\\" viewBox=\\\"0 0 24 24\\\" focusable=\\\"false\\\">\\n          <path d=\\\"M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z\\\"/>\\n        </svg>\\n      </button>\\n      <button mat-icon-button type=\\\"button\\\"\\n              class=\\\"mat-paginator-navigation-next\\\"\\n              (click)=\\\"nextPage()\\\"\\n              [attr.aria-label]=\\\"_intl.nextPageLabel\\\"\\n              [matTooltip]=\\\"_intl.nextPageLabel\\\"\\n              [matTooltipDisabled]=\\\"_nextButtonsDisabled()\\\"\\n              [matTooltipPosition]=\\\"'above'\\\"\\n              [disabled]=\\\"_nextButtonsDisabled()\\\">\\n        <svg class=\\\"mat-paginator-icon\\\" viewBox=\\\"0 0 24 24\\\" focusable=\\\"false\\\">\\n          <path d=\\\"M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z\\\"/>\\n        </svg>\\n      </button>\\n      <button mat-icon-button type=\\\"button\\\"\\n              class=\\\"mat-paginator-navigation-last\\\"\\n              (click)=\\\"lastPage()\\\"\\n              [attr.aria-label]=\\\"_intl.lastPageLabel\\\"\\n              [matTooltip]=\\\"_intl.lastPageLabel\\\"\\n              [matTooltipDisabled]=\\\"_nextButtonsDisabled()\\\"\\n              [matTooltipPosition]=\\\"'above'\\\"\\n              [disabled]=\\\"_nextButtonsDisabled()\\\"\\n              *ngIf=\\\"showFirstLastButtons\\\">\\n        <svg class=\\\"mat-paginator-icon\\\" viewBox=\\\"0 0 24 24\\\" focusable=\\\"false\\\">\\n          <path d=\\\"M5.59 7.41L10.18 12l-4.59 4.59L7 18l6-6-6-6zM16 6h2v12h-2z\\\"/>\\n        </svg>\\n      </button>\\n    </div>\\n  </div>\\n</div>\\n\", styles: [\".mat-paginator{display:block}.mat-paginator-outer-container{display:flex}.mat-paginator-container{display:flex;align-items:center;justify-content:flex-end;padding:0 8px;flex-wrap:wrap-reverse;width:100%}.mat-paginator-page-size{display:flex;align-items:baseline;margin-right:8px}[dir=rtl] .mat-paginator-page-size{margin-right:0;margin-left:8px}.mat-paginator-page-size-label{margin:0 4px}.mat-paginator-page-size-select{margin:6px 4px 0 4px;width:56px}.mat-paginator-page-size-select.mat-form-field-appearance-outline{width:64px}.mat-paginator-page-size-select.mat-form-field-appearance-fill{width:64px}.mat-paginator-range-label{margin:0 32px 0 24px}.mat-paginator-range-actions{display:flex;align-items:center}.mat-paginator-icon{width:28px;fill:currentColor}[dir=rtl] .mat-paginator-icon{transform:rotate(180deg)}.cdk-high-contrast-active .mat-paginator-icon{fill:CanvasText}\\n\"], components: [{ type: i2.MatFormField, selector: \"mat-form-field\", inputs: [\"color\", \"appearance\", \"hideRequiredMarker\", \"hintLabel\", \"floatLabel\"], exportAs: [\"matFormField\"] }, { type: i3.MatSelect, selector: \"mat-select\", inputs: [\"disabled\", \"disableRipple\", \"tabIndex\"], exportAs: [\"matSelect\"] }, { type: i4.MatOption, selector: \"mat-option\", exportAs: [\"matOption\"] }, { type: i5.MatButton, selector: \"button[mat-button], button[mat-raised-button], button[mat-icon-button],             button[mat-fab], button[mat-mini-fab], button[mat-stroked-button],             button[mat-flat-button]\", inputs: [\"disabled\", \"disableRipple\", \"color\"], exportAs: [\"matButton\"] }], directives: [{ type: i6.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i6.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: i7.MatTooltip, selector: \"[matTooltip]\", exportAs: [\"matTooltip\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.0\", ngImport: i0, type: MatPaginator, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-paginator', exportAs: 'matPaginator', inputs: ['disabled'], host: {\n                        'class': 'mat-paginator',\n                        'role': 'group',\n                    }, changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, template: \"<div class=\\\"mat-paginator-outer-container\\\">\\n  <div class=\\\"mat-paginator-container\\\">\\n    <div class=\\\"mat-paginator-page-size\\\" *ngIf=\\\"!hidePageSize\\\">\\n      <div class=\\\"mat-paginator-page-size-label\\\">\\n        {{_intl.itemsPerPageLabel}}\\n      </div>\\n\\n      <mat-form-field\\n        *ngIf=\\\"_displayedPageSizeOptions.length > 1\\\"\\n        [appearance]=\\\"_formFieldAppearance!\\\"\\n        [color]=\\\"color\\\"\\n        class=\\\"mat-paginator-page-size-select\\\">\\n        <mat-select\\n          [value]=\\\"pageSize\\\"\\n          [disabled]=\\\"disabled\\\"\\n          [aria-label]=\\\"_intl.itemsPerPageLabel\\\"\\n          (selectionChange)=\\\"_changePageSize($event.value)\\\">\\n          <mat-option *ngFor=\\\"let pageSizeOption of _displayedPageSizeOptions\\\" [value]=\\\"pageSizeOption\\\">\\n            {{pageSizeOption}}\\n          </mat-option>\\n        </mat-select>\\n      </mat-form-field>\\n\\n      <div\\n        class=\\\"mat-paginator-page-size-value\\\"\\n        *ngIf=\\\"_displayedPageSizeOptions.length <= 1\\\">{{pageSize}}</div>\\n    </div>\\n\\n    <div class=\\\"mat-paginator-range-actions\\\">\\n      <div class=\\\"mat-paginator-range-label\\\">\\n        {{_intl.getRangeLabel(pageIndex, pageSize, length)}}\\n      </div>\\n\\n      <button mat-icon-button type=\\\"button\\\"\\n              class=\\\"mat-paginator-navigation-first\\\"\\n              (click)=\\\"firstPage()\\\"\\n              [attr.aria-label]=\\\"_intl.firstPageLabel\\\"\\n              [matTooltip]=\\\"_intl.firstPageLabel\\\"\\n              [matTooltipDisabled]=\\\"_previousButtonsDisabled()\\\"\\n              [matTooltipPosition]=\\\"'above'\\\"\\n              [disabled]=\\\"_previousButtonsDisabled()\\\"\\n              *ngIf=\\\"showFirstLastButtons\\\">\\n        <svg class=\\\"mat-paginator-icon\\\" viewBox=\\\"0 0 24 24\\\" focusable=\\\"false\\\">\\n          <path d=\\\"M18.41 16.59L13.82 12l4.59-4.59L17 6l-6 6 6 6zM6 6h2v12H6z\\\"/>\\n        </svg>\\n      </button>\\n      <button mat-icon-button type=\\\"button\\\"\\n              class=\\\"mat-paginator-navigation-previous\\\"\\n              (click)=\\\"previousPage()\\\"\\n              [attr.aria-label]=\\\"_intl.previousPageLabel\\\"\\n              [matTooltip]=\\\"_intl.previousPageLabel\\\"\\n              [matTooltipDisabled]=\\\"_previousButtonsDisabled()\\\"\\n              [matTooltipPosition]=\\\"'above'\\\"\\n              [disabled]=\\\"_previousButtonsDisabled()\\\">\\n        <svg class=\\\"mat-paginator-icon\\\" viewBox=\\\"0 0 24 24\\\" focusable=\\\"false\\\">\\n          <path d=\\\"M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z\\\"/>\\n        </svg>\\n      </button>\\n      <button mat-icon-button type=\\\"button\\\"\\n              class=\\\"mat-paginator-navigation-next\\\"\\n              (click)=\\\"nextPage()\\\"\\n              [attr.aria-label]=\\\"_intl.nextPageLabel\\\"\\n              [matTooltip]=\\\"_intl.nextPageLabel\\\"\\n              [matTooltipDisabled]=\\\"_nextButtonsDisabled()\\\"\\n              [matTooltipPosition]=\\\"'above'\\\"\\n              [disabled]=\\\"_nextButtonsDisabled()\\\">\\n        <svg class=\\\"mat-paginator-icon\\\" viewBox=\\\"0 0 24 24\\\" focusable=\\\"false\\\">\\n          <path d=\\\"M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z\\\"/>\\n        </svg>\\n      </button>\\n      <button mat-icon-button type=\\\"button\\\"\\n              class=\\\"mat-paginator-navigation-last\\\"\\n              (click)=\\\"lastPage()\\\"\\n              [attr.aria-label]=\\\"_intl.lastPageLabel\\\"\\n              [matTooltip]=\\\"_intl.lastPageLabel\\\"\\n              [matTooltipDisabled]=\\\"_nextButtonsDisabled()\\\"\\n              [matTooltipPosition]=\\\"'above'\\\"\\n              [disabled]=\\\"_nextButtonsDisabled()\\\"\\n              *ngIf=\\\"showFirstLastButtons\\\">\\n        <svg class=\\\"mat-paginator-icon\\\" viewBox=\\\"0 0 24 24\\\" focusable=\\\"false\\\">\\n          <path d=\\\"M5.59 7.41L10.18 12l-4.59 4.59L7 18l6-6-6-6zM16 6h2v12h-2z\\\"/>\\n        </svg>\\n      </button>\\n    </div>\\n  </div>\\n</div>\\n\", styles: [\".mat-paginator{display:block}.mat-paginator-outer-container{display:flex}.mat-paginator-container{display:flex;align-items:center;justify-content:flex-end;padding:0 8px;flex-wrap:wrap-reverse;width:100%}.mat-paginator-page-size{display:flex;align-items:baseline;margin-right:8px}[dir=rtl] .mat-paginator-page-size{margin-right:0;margin-left:8px}.mat-paginator-page-size-label{margin:0 4px}.mat-paginator-page-size-select{margin:6px 4px 0 4px;width:56px}.mat-paginator-page-size-select.mat-form-field-appearance-outline{width:64px}.mat-paginator-page-size-select.mat-form-field-appearance-fill{width:64px}.mat-paginator-range-label{margin:0 32px 0 24px}.mat-paginator-range-actions{display:flex;align-items:center}.mat-paginator-icon{width:28px;fill:currentColor}[dir=rtl] .mat-paginator-icon{transform:rotate(180deg)}.cdk-high-contrast-active .mat-paginator-icon{fill:CanvasText}\\n\"] }]\n        }], ctorParameters: function () {\n        return [{ type: MatPaginatorIntl }, { type: i0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [MAT_PAGINATOR_DEFAULT_OPTIONS]\n                    }] }];\n    } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatPaginatorModule {\n}\nMatPaginatorModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.0\", ngImport: i0, type: MatPaginatorModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nMatPaginatorModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.2.0\", ngImport: i0, type: MatPaginatorModule, declarations: [MatPaginator], imports: [CommonModule, MatButtonModule, MatSelectModule, MatTooltipModule, MatCommonModule], exports: [MatPaginator] });\nMatPaginatorModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.2.0\", ngImport: i0, type: MatPaginatorModule, providers: [MAT_PAGINATOR_INTL_PROVIDER], imports: [[CommonModule, MatButtonModule, MatSelectModule, MatTooltipModule, MatCommonModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.0\", ngImport: i0, type: MatPaginatorModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule, MatButtonModule, MatSelectModule, MatTooltipModule, MatCommonModule],\n                    exports: [MatPaginator],\n                    declarations: [MatPaginator],\n                    providers: [MAT_PAGINATOR_INTL_PROVIDER],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_PAGINATOR_DEFAULT_OPTIONS, MAT_PAGINATOR_INTL_PROVIDER, MAT_PAGINATOR_INTL_PROVIDER_FACTORY, MatPaginator, MatPaginatorIntl, MatPaginatorModule, PageEvent, _MatPaginatorBase };\n","import * as i7 from '@angular/cdk/overlay';\nimport { Overlay, CdkConnectedOverlay, OverlayModule } from '@angular/cdk/overlay';\nimport * as i8 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, Directive, EventEmitter, Optional, Inject, Self, Attribute, ViewChild, Input, Output, Component, ViewEncapsulation, ChangeDetectionStrategy, ContentChildren, ContentChild, NgModule } from '@angular/core';\nimport * as i2 from '@angular/material/core';\nimport { mixinDisableRipple, mixinTabIndex, mixinDisabled, mixinErrorState, _countGroupLabelsBeforeOption, _getOptionScrollPosition, MAT_OPTION_PARENT_COMPONENT, MatOption, MAT_OPTGROUP, MatOptionModule, MatCommonModule } from '@angular/material/core';\nimport * as i6 from '@angular/material/form-field';\nimport { MAT_FORM_FIELD, MatFormFieldControl, MatFormFieldModule } from '@angular/material/form-field';\nimport * as i1 from '@angular/cdk/scrolling';\nimport { CdkScrollableModule } from '@angular/cdk/scrolling';\nimport * as i5 from '@angular/cdk/a11y';\nimport { ActiveDescendantKeyManager } from '@angular/cdk/a11y';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { DOWN_ARROW, UP_ARROW, LEFT_ARROW, RIGHT_ARROW, ENTER, SPACE, hasModifierKey, A } from '@angular/cdk/keycodes';\nimport * as i4 from '@angular/forms';\nimport { Validators } from '@angular/forms';\nimport { Subject, defer, merge } from 'rxjs';\nimport { startWith, switchMap, take, filter, map, distinctUntilChanged, takeUntil } from 'rxjs/operators';\nimport { trigger, transition, query, animateChild, state, style, animate } from '@angular/animations';\nimport * as i3 from '@angular/cdk/bidi';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * The following are all the animations for the mat-select component, with each\n * const containing the metadata for one animation.\n *\n * The values below match the implementation of the AngularJS Material mat-select animation.\n * @docs-private\n */\nconst matSelectAnimations = {\n    /**\n     * This animation ensures the select's overlay panel animation (transformPanel) is called when\n     * closing the select.\n     * This is needed due to https://github.com/angular/angular/issues/23302\n     */\n    transformPanelWrap: trigger('transformPanelWrap', [\n        transition('* => void', query('@transformPanel', [animateChild()], { optional: true })),\n    ]),\n    /**\n     * This animation transforms the select's overlay panel on and off the page.\n     *\n     * When the panel is attached to the DOM, it expands its width by the amount of padding, scales it\n     * up to 100% on the Y axis, fades in its border, and translates slightly up and to the\n     * side to ensure the option text correctly overlaps the trigger text.\n     *\n     * When the panel is removed from the DOM, it simply fades out linearly.\n     */\n    transformPanel: trigger('transformPanel', [\n        state('void', style({\n            transform: 'scaleY(0.8)',\n            minWidth: '100%',\n            opacity: 0,\n        })),\n        state('showing', style({\n            opacity: 1,\n            minWidth: 'calc(100% + 32px)',\n            transform: 'scaleY(1)',\n        })),\n        state('showing-multiple', style({\n            opacity: 1,\n            minWidth: 'calc(100% + 64px)',\n            transform: 'scaleY(1)',\n        })),\n        transition('void => *', animate('120ms cubic-bezier(0, 0, 0.2, 1)')),\n        transition('* => void', animate('100ms 25ms linear', style({ opacity: 0 }))),\n    ]),\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Returns an exception to be thrown when attempting to change a select's `multiple` option\n * after initialization.\n * @docs-private\n */\nfunction getMatSelectDynamicMultipleError() {\n    return Error('Cannot change `multiple` mode of select after initialization.');\n}\n/**\n * Returns an exception to be thrown when attempting to assign a non-array value to a select\n * in `multiple` mode. Note that `undefined` and `null` are still valid values to allow for\n * resetting the value.\n * @docs-private\n */\nfunction getMatSelectNonArrayValueError() {\n    return Error('Value must be an array in multiple-selection mode.');\n}\n/**\n * Returns an exception to be thrown when assigning a non-function value to the comparator\n * used to determine if a value corresponds to an option. Note that whether the function\n * actually takes two values and returns a boolean is not checked.\n */\nfunction getMatSelectNonFunctionValueError() {\n    return Error('`compareWith` must be a function.');\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nlet nextUniqueId = 0;\n/**\n * The following style constants are necessary to save here in order\n * to properly calculate the alignment of the selected option over\n * the trigger element.\n */\n/** The max height of the select's overlay panel. */\nconst SELECT_PANEL_MAX_HEIGHT = 256;\n/** The panel's padding on the x-axis. */\nconst SELECT_PANEL_PADDING_X = 16;\n/** The panel's x axis padding if it is indented (e.g. there is an option group). */\nconst SELECT_PANEL_INDENT_PADDING_X = SELECT_PANEL_PADDING_X * 2;\n/** The height of the select items in `em` units. */\nconst SELECT_ITEM_HEIGHT_EM = 3;\n// TODO(josephperrott): Revert to a constant after 2018 spec updates are fully merged.\n/**\n * Distance between the panel edge and the option text in\n * multi-selection mode.\n *\n * Calculated as:\n * (SELECT_PANEL_PADDING_X * 1.5) + 16 = 40\n * The padding is multiplied by 1.5 because the checkbox's margin is half the padding.\n * The checkbox width is 16px.\n */\nconst SELECT_MULTIPLE_PANEL_PADDING_X = SELECT_PANEL_PADDING_X * 1.5 + 16;\n/**\n * The select panel will only \"fit\" inside the viewport if it is positioned at\n * this value or more away from the viewport boundary.\n */\nconst SELECT_PANEL_VIEWPORT_PADDING = 8;\n/** Injection token that determines the scroll handling while a select is open. */\nconst MAT_SELECT_SCROLL_STRATEGY = new InjectionToken('mat-select-scroll-strategy');\n/** @docs-private */\nfunction MAT_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY(overlay) {\n    return () => overlay.scrollStrategies.reposition();\n}\n/** Injection token that can be used to provide the default options the select module. */\nconst MAT_SELECT_CONFIG = new InjectionToken('MAT_SELECT_CONFIG');\n/** @docs-private */\nconst MAT_SELECT_SCROLL_STRATEGY_PROVIDER = {\n    provide: MAT_SELECT_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MAT_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY,\n};\n/** Change event object that is emitted when the select value has changed. */\nclass MatSelectChange {\n    constructor(\n    /** Reference to the select that emitted the change event. */\n    source, \n    /** Current value of the select that emitted the event. */\n    value) {\n        this.source = source;\n        this.value = value;\n    }\n}\n// Boilerplate for applying mixins to MatSelect.\n/** @docs-private */\nconst _MatSelectMixinBase = mixinDisableRipple(mixinTabIndex(mixinDisabled(mixinErrorState(class {\n    constructor(_elementRef, _defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl) {\n        this._elementRef = _elementRef;\n        this._defaultErrorStateMatcher = _defaultErrorStateMatcher;\n        this._parentForm = _parentForm;\n        this._parentFormGroup = _parentFormGroup;\n        this.ngControl = ngControl;\n    }\n}))));\n/**\n * Injection token that can be used to reference instances of `MatSelectTrigger`. It serves as\n * alternative token to the actual `MatSelectTrigger` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_SELECT_TRIGGER = new InjectionToken('MatSelectTrigger');\n/**\n * Allows the user to customize the trigger that is displayed when the select has a value.\n */\nclass MatSelectTrigger {\n}\nMatSelectTrigger.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.0\", ngImport: i0, type: MatSelectTrigger, deps: [], target: i0.ɵɵFactoryTarget.Directive });\nMatSelectTrigger.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.2.0\", type: MatSelectTrigger, selector: \"mat-select-trigger\", providers: [{ provide: MAT_SELECT_TRIGGER, useExisting: MatSelectTrigger }], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.0\", ngImport: i0, type: MatSelectTrigger, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'mat-select-trigger',\n                    providers: [{ provide: MAT_SELECT_TRIGGER, useExisting: MatSelectTrigger }],\n                }]\n        }] });\n/** Base class with all of the `MatSelect` functionality. */\nclass _MatSelectBase extends _MatSelectMixinBase {\n    constructor(_viewportRuler, _changeDetectorRef, _ngZone, _defaultErrorStateMatcher, elementRef, _dir, _parentForm, _parentFormGroup, _parentFormField, ngControl, tabIndex, scrollStrategyFactory, _liveAnnouncer, _defaultOptions) {\n        var _a, _b, _c;\n        super(elementRef, _defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl);\n        this._viewportRuler = _viewportRuler;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._ngZone = _ngZone;\n        this._dir = _dir;\n        this._parentFormField = _parentFormField;\n        this._liveAnnouncer = _liveAnnouncer;\n        this._defaultOptions = _defaultOptions;\n        /** Whether or not the overlay panel is open. */\n        this._panelOpen = false;\n        /** Comparison function to specify which option is displayed. Defaults to object equality. */\n        this._compareWith = (o1, o2) => o1 === o2;\n        /** Unique id for this input. */\n        this._uid = `mat-select-${nextUniqueId++}`;\n        /** Current `ariar-labelledby` value for the select trigger. */\n        this._triggerAriaLabelledBy = null;\n        /** Emits whenever the component is destroyed. */\n        this._destroy = new Subject();\n        /** `View -> model callback called when value changes` */\n        this._onChange = () => { };\n        /** `View -> model callback called when select has been touched` */\n        this._onTouched = () => { };\n        /** ID for the DOM node containing the select's value. */\n        this._valueId = `mat-select-value-${nextUniqueId++}`;\n        /** Emits when the panel element is finished transforming in. */\n        this._panelDoneAnimatingStream = new Subject();\n        this._overlayPanelClass = ((_a = this._defaultOptions) === null || _a === void 0 ? void 0 : _a.overlayPanelClass) || '';\n        this._focused = false;\n        /** A name for this control that can be used by `mat-form-field`. */\n        this.controlType = 'mat-select';\n        this._multiple = false;\n        this._disableOptionCentering = (_c = (_b = this._defaultOptions) === null || _b === void 0 ? void 0 : _b.disableOptionCentering) !== null && _c !== void 0 ? _c : false;\n        /** Aria label of the select. */\n        this.ariaLabel = '';\n        /** Combined stream of all of the child options' change events. */\n        this.optionSelectionChanges = defer(() => {\n            const options = this.options;\n            if (options) {\n                return options.changes.pipe(startWith(options), switchMap(() => merge(...options.map(option => option.onSelectionChange))));\n            }\n            return this._ngZone.onStable.pipe(take(1), switchMap(() => this.optionSelectionChanges));\n        });\n        /** Event emitted when the select panel has been toggled. */\n        this.openedChange = new EventEmitter();\n        /** Event emitted when the select has been opened. */\n        this._openedStream = this.openedChange.pipe(filter(o => o), map(() => { }));\n        /** Event emitted when the select has been closed. */\n        this._closedStream = this.openedChange.pipe(filter(o => !o), map(() => { }));\n        /** Event emitted when the selected value has been changed by the user. */\n        this.selectionChange = new EventEmitter();\n        /**\n         * Event that emits whenever the raw value of the select changes. This is here primarily\n         * to facilitate the two-way binding for the `value` input.\n         * @docs-private\n         */\n        this.valueChange = new EventEmitter();\n        if (this.ngControl) {\n            // Note: we provide the value accessor through here, instead of\n            // the `providers` to avoid running into a circular import.\n            this.ngControl.valueAccessor = this;\n        }\n        // Note that we only want to set this when the defaults pass it in, otherwise it should\n        // stay as `undefined` so that it falls back to the default in the key manager.\n        if ((_defaultOptions === null || _defaultOptions === void 0 ? void 0 : _defaultOptions.typeaheadDebounceInterval) != null) {\n            this._typeaheadDebounceInterval = _defaultOptions.typeaheadDebounceInterval;\n        }\n        this._scrollStrategyFactory = scrollStrategyFactory;\n        this._scrollStrategy = this._scrollStrategyFactory();\n        this.tabIndex = parseInt(tabIndex) || 0;\n        // Force setter to be called in case id was not specified.\n        this.id = this.id;\n    }\n    /** Whether the select is focused. */\n    get focused() {\n        return this._focused || this._panelOpen;\n    }\n    /** Placeholder to be shown if no value has been selected. */\n    get placeholder() {\n        return this._placeholder;\n    }\n    set placeholder(value) {\n        this._placeholder = value;\n        this.stateChanges.next();\n    }\n    /** Whether the component is required. */\n    get required() {\n        var _a, _b, _c, _d;\n        return (_d = (_a = this._required) !== null && _a !== void 0 ? _a : (_c = (_b = this.ngControl) === null || _b === void 0 ? void 0 : _b.control) === null || _c === void 0 ? void 0 : _c.hasValidator(Validators.required)) !== null && _d !== void 0 ? _d : false;\n    }\n    set required(value) {\n        this._required = coerceBooleanProperty(value);\n        this.stateChanges.next();\n    }\n    /** Whether the user should be allowed to select multiple options. */\n    get multiple() {\n        return this._multiple;\n    }\n    set multiple(value) {\n        if (this._selectionModel && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getMatSelectDynamicMultipleError();\n        }\n        this._multiple = coerceBooleanProperty(value);\n    }\n    /** Whether to center the active option over the trigger. */\n    get disableOptionCentering() {\n        return this._disableOptionCentering;\n    }\n    set disableOptionCentering(value) {\n        this._disableOptionCentering = coerceBooleanProperty(value);\n    }\n    /**\n     * Function to compare the option values with the selected values. The first argument\n     * is a value from an option. The second is a value from the selection. A boolean\n     * should be returned.\n     */\n    get compareWith() {\n        return this._compareWith;\n    }\n    set compareWith(fn) {\n        if (typeof fn !== 'function' && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getMatSelectNonFunctionValueError();\n        }\n        this._compareWith = fn;\n        if (this._selectionModel) {\n            // A different comparator means the selection could change.\n            this._initializeSelection();\n        }\n    }\n    /** Value of the select control. */\n    get value() {\n        return this._value;\n    }\n    set value(newValue) {\n        // Always re-assign an array, because it might have been mutated.\n        if (newValue !== this._value || (this._multiple && Array.isArray(newValue))) {\n            if (this.options) {\n                this._setSelectionByValue(newValue);\n            }\n            this._value = newValue;\n        }\n    }\n    /** Time to wait in milliseconds after the last keystroke before moving focus to an item. */\n    get typeaheadDebounceInterval() {\n        return this._typeaheadDebounceInterval;\n    }\n    set typeaheadDebounceInterval(value) {\n        this._typeaheadDebounceInterval = coerceNumberProperty(value);\n    }\n    /** Unique id of the element. */\n    get id() {\n        return this._id;\n    }\n    set id(value) {\n        this._id = value || this._uid;\n        this.stateChanges.next();\n    }\n    ngOnInit() {\n        this._selectionModel = new SelectionModel(this.multiple);\n        this.stateChanges.next();\n        // We need `distinctUntilChanged` here, because some browsers will\n        // fire the animation end event twice for the same animation. See:\n        // https://github.com/angular/angular/issues/24084\n        this._panelDoneAnimatingStream\n            .pipe(distinctUntilChanged(), takeUntil(this._destroy))\n            .subscribe(() => this._panelDoneAnimating(this.panelOpen));\n    }\n    ngAfterContentInit() {\n        this._initKeyManager();\n        this._selectionModel.changed.pipe(takeUntil(this._destroy)).subscribe(event => {\n            event.added.forEach(option => option.select());\n            event.removed.forEach(option => option.deselect());\n        });\n        this.options.changes.pipe(startWith(null), takeUntil(this._destroy)).subscribe(() => {\n            this._resetOptions();\n            this._initializeSelection();\n        });\n    }\n    ngDoCheck() {\n        const newAriaLabelledby = this._getTriggerAriaLabelledby();\n        // We have to manage setting the `aria-labelledby` ourselves, because part of its value\n        // is computed as a result of a content query which can cause this binding to trigger a\n        // \"changed after checked\" error.\n        if (newAriaLabelledby !== this._triggerAriaLabelledBy) {\n            const element = this._elementRef.nativeElement;\n            this._triggerAriaLabelledBy = newAriaLabelledby;\n            if (newAriaLabelledby) {\n                element.setAttribute('aria-labelledby', newAriaLabelledby);\n            }\n            else {\n                element.removeAttribute('aria-labelledby');\n            }\n        }\n        if (this.ngControl) {\n            this.updateErrorState();\n        }\n    }\n    ngOnChanges(changes) {\n        // Updating the disabled state is handled by `mixinDisabled`, but we need to additionally let\n        // the parent form field know to run change detection when the disabled state changes.\n        if (changes['disabled']) {\n            this.stateChanges.next();\n        }\n        if (changes['typeaheadDebounceInterval'] && this._keyManager) {\n            this._keyManager.withTypeAhead(this._typeaheadDebounceInterval);\n        }\n    }\n    ngOnDestroy() {\n        this._destroy.next();\n        this._destroy.complete();\n        this.stateChanges.complete();\n    }\n    /** Toggles the overlay panel open or closed. */\n    toggle() {\n        this.panelOpen ? this.close() : this.open();\n    }\n    /** Opens the overlay panel. */\n    open() {\n        if (this._canOpen()) {\n            this._panelOpen = true;\n            this._keyManager.withHorizontalOrientation(null);\n            this._highlightCorrectOption();\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /** Closes the overlay panel and focuses the host element. */\n    close() {\n        if (this._panelOpen) {\n            this._panelOpen = false;\n            this._keyManager.withHorizontalOrientation(this._isRtl() ? 'rtl' : 'ltr');\n            this._changeDetectorRef.markForCheck();\n            this._onTouched();\n        }\n    }\n    /**\n     * Sets the select's value. Part of the ControlValueAccessor interface\n     * required to integrate with Angular's core forms API.\n     *\n     * @param value New value to be written to the model.\n     */\n    writeValue(value) {\n        this.value = value;\n    }\n    /**\n     * Saves a callback function to be invoked when the select's value\n     * changes from user input. Part of the ControlValueAccessor interface\n     * required to integrate with Angular's core forms API.\n     *\n     * @param fn Callback to be triggered when the value changes.\n     */\n    registerOnChange(fn) {\n        this._onChange = fn;\n    }\n    /**\n     * Saves a callback function to be invoked when the select is blurred\n     * by the user. Part of the ControlValueAccessor interface required\n     * to integrate with Angular's core forms API.\n     *\n     * @param fn Callback to be triggered when the component has been touched.\n     */\n    registerOnTouched(fn) {\n        this._onTouched = fn;\n    }\n    /**\n     * Disables the select. Part of the ControlValueAccessor interface required\n     * to integrate with Angular's core forms API.\n     *\n     * @param isDisabled Sets whether the component is disabled.\n     */\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n        this._changeDetectorRef.markForCheck();\n        this.stateChanges.next();\n    }\n    /** Whether or not the overlay panel is open. */\n    get panelOpen() {\n        return this._panelOpen;\n    }\n    /** The currently selected option. */\n    get selected() {\n        var _a, _b;\n        return this.multiple ? ((_a = this._selectionModel) === null || _a === void 0 ? void 0 : _a.selected) || [] : (_b = this._selectionModel) === null || _b === void 0 ? void 0 : _b.selected[0];\n    }\n    /** The value displayed in the trigger. */\n    get triggerValue() {\n        if (this.empty) {\n            return '';\n        }\n        if (this._multiple) {\n            const selectedOptions = this._selectionModel.selected.map(option => option.viewValue);\n            if (this._isRtl()) {\n                selectedOptions.reverse();\n            }\n            // TODO(crisbeto): delimiter should be configurable for proper localization.\n            return selectedOptions.join(', ');\n        }\n        return this._selectionModel.selected[0].viewValue;\n    }\n    /** Whether the element is in RTL mode. */\n    _isRtl() {\n        return this._dir ? this._dir.value === 'rtl' : false;\n    }\n    /** Handles all keydown events on the select. */\n    _handleKeydown(event) {\n        if (!this.disabled) {\n            this.panelOpen ? this._handleOpenKeydown(event) : this._handleClosedKeydown(event);\n        }\n    }\n    /** Handles keyboard events while the select is closed. */\n    _handleClosedKeydown(event) {\n        const keyCode = event.keyCode;\n        const isArrowKey = keyCode === DOWN_ARROW ||\n            keyCode === UP_ARROW ||\n            keyCode === LEFT_ARROW ||\n            keyCode === RIGHT_ARROW;\n        const isOpenKey = keyCode === ENTER || keyCode === SPACE;\n        const manager = this._keyManager;\n        // Open the select on ALT + arrow key to match the native <select>\n        if ((!manager.isTyping() && isOpenKey && !hasModifierKey(event)) ||\n            ((this.multiple || event.altKey) && isArrowKey)) {\n            event.preventDefault(); // prevents the page from scrolling down when pressing space\n            this.open();\n        }\n        else if (!this.multiple) {\n            const previouslySelectedOption = this.selected;\n            manager.onKeydown(event);\n            const selectedOption = this.selected;\n            // Since the value has changed, we need to announce it ourselves.\n            if (selectedOption && previouslySelectedOption !== selectedOption) {\n                // We set a duration on the live announcement, because we want the live element to be\n                // cleared after a while so that users can't navigate to it using the arrow keys.\n                this._liveAnnouncer.announce(selectedOption.viewValue, 10000);\n            }\n        }\n    }\n    /** Handles keyboard events when the selected is open. */\n    _handleOpenKeydown(event) {\n        const manager = this._keyManager;\n        const keyCode = event.keyCode;\n        const isArrowKey = keyCode === DOWN_ARROW || keyCode === UP_ARROW;\n        const isTyping = manager.isTyping();\n        if (isArrowKey && event.altKey) {\n            // Close the select on ALT + arrow key to match the native <select>\n            event.preventDefault();\n            this.close();\n            // Don't do anything in this case if the user is typing,\n            // because the typing sequence can include the space key.\n        }\n        else if (!isTyping &&\n            (keyCode === ENTER || keyCode === SPACE) &&\n            manager.activeItem &&\n            !hasModifierKey(event)) {\n            event.preventDefault();\n            manager.activeItem._selectViaInteraction();\n        }\n        else if (!isTyping && this._multiple && keyCode === A && event.ctrlKey) {\n            event.preventDefault();\n            const hasDeselectedOptions = this.options.some(opt => !opt.disabled && !opt.selected);\n            this.options.forEach(option => {\n                if (!option.disabled) {\n                    hasDeselectedOptions ? option.select() : option.deselect();\n                }\n            });\n        }\n        else {\n            const previouslyFocusedIndex = manager.activeItemIndex;\n            manager.onKeydown(event);\n            if (this._multiple &&\n                isArrowKey &&\n                event.shiftKey &&\n                manager.activeItem &&\n                manager.activeItemIndex !== previouslyFocusedIndex) {\n                manager.activeItem._selectViaInteraction();\n            }\n        }\n    }\n    _onFocus() {\n        if (!this.disabled) {\n            this._focused = true;\n            this.stateChanges.next();\n        }\n    }\n    /**\n     * Calls the touched callback only if the panel is closed. Otherwise, the trigger will\n     * \"blur\" to the panel when it opens, causing a false positive.\n     */\n    _onBlur() {\n        this._focused = false;\n        if (!this.disabled && !this.panelOpen) {\n            this._onTouched();\n            this._changeDetectorRef.markForCheck();\n            this.stateChanges.next();\n        }\n    }\n    /**\n     * Callback that is invoked when the overlay panel has been attached.\n     */\n    _onAttached() {\n        this._overlayDir.positionChange.pipe(take(1)).subscribe(() => {\n            this._changeDetectorRef.detectChanges();\n            this._positioningSettled();\n        });\n    }\n    /** Returns the theme to be used on the panel. */\n    _getPanelTheme() {\n        return this._parentFormField ? `mat-${this._parentFormField.color}` : '';\n    }\n    /** Whether the select has a value. */\n    get empty() {\n        return !this._selectionModel || this._selectionModel.isEmpty();\n    }\n    _initializeSelection() {\n        // Defer setting the value in order to avoid the \"Expression\n        // has changed after it was checked\" errors from Angular.\n        Promise.resolve().then(() => {\n            if (this.ngControl) {\n                this._value = this.ngControl.value;\n            }\n            this._setSelectionByValue(this._value);\n            this.stateChanges.next();\n        });\n    }\n    /**\n     * Sets the selected option based on a value. If no option can be\n     * found with the designated value, the select trigger is cleared.\n     */\n    _setSelectionByValue(value) {\n        this._selectionModel.selected.forEach(option => option.setInactiveStyles());\n        this._selectionModel.clear();\n        if (this.multiple && value) {\n            if (!Array.isArray(value) && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throw getMatSelectNonArrayValueError();\n            }\n            value.forEach((currentValue) => this._selectValue(currentValue));\n            this._sortValues();\n        }\n        else {\n            const correspondingOption = this._selectValue(value);\n            // Shift focus to the active item. Note that we shouldn't do this in multiple\n            // mode, because we don't know what option the user interacted with last.\n            if (correspondingOption) {\n                this._keyManager.updateActiveItem(correspondingOption);\n            }\n            else if (!this.panelOpen) {\n                // Otherwise reset the highlighted option. Note that we only want to do this while\n                // closed, because doing it while open can shift the user's focus unnecessarily.\n                this._keyManager.updateActiveItem(-1);\n            }\n        }\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Finds and selects and option based on its value.\n     * @returns Option that has the corresponding value.\n     */\n    _selectValue(value) {\n        const correspondingOption = this.options.find((option) => {\n            // Skip options that are already in the model. This allows us to handle cases\n            // where the same primitive value is selected multiple times.\n            if (this._selectionModel.isSelected(option)) {\n                return false;\n            }\n            try {\n                // Treat null as a special reset value.\n                return option.value != null && this._compareWith(option.value, value);\n            }\n            catch (error) {\n                if (typeof ngDevMode === 'undefined' || ngDevMode) {\n                    // Notify developers of errors in their comparator.\n                    console.warn(error);\n                }\n                return false;\n            }\n        });\n        if (correspondingOption) {\n            this._selectionModel.select(correspondingOption);\n        }\n        return correspondingOption;\n    }\n    /** Sets up a key manager to listen to keyboard events on the overlay panel. */\n    _initKeyManager() {\n        this._keyManager = new ActiveDescendantKeyManager(this.options)\n            .withTypeAhead(this._typeaheadDebounceInterval)\n            .withVerticalOrientation()\n            .withHorizontalOrientation(this._isRtl() ? 'rtl' : 'ltr')\n            .withHomeAndEnd()\n            .withAllowedModifierKeys(['shiftKey']);\n        this._keyManager.tabOut.pipe(takeUntil(this._destroy)).subscribe(() => {\n            if (this.panelOpen) {\n                // Select the active item when tabbing away. This is consistent with how the native\n                // select behaves. Note that we only want to do this in single selection mode.\n                if (!this.multiple && this._keyManager.activeItem) {\n                    this._keyManager.activeItem._selectViaInteraction();\n                }\n                // Restore focus to the trigger before closing. Ensures that the focus\n                // position won't be lost if the user got focus into the overlay.\n                this.focus();\n                this.close();\n            }\n        });\n        this._keyManager.change.pipe(takeUntil(this._destroy)).subscribe(() => {\n            if (this._panelOpen && this.panel) {\n                this._scrollOptionIntoView(this._keyManager.activeItemIndex || 0);\n            }\n            else if (!this._panelOpen && !this.multiple && this._keyManager.activeItem) {\n                this._keyManager.activeItem._selectViaInteraction();\n            }\n        });\n    }\n    /** Drops current option subscriptions and IDs and resets from scratch. */\n    _resetOptions() {\n        const changedOrDestroyed = merge(this.options.changes, this._destroy);\n        this.optionSelectionChanges.pipe(takeUntil(changedOrDestroyed)).subscribe(event => {\n            this._onSelect(event.source, event.isUserInput);\n            if (event.isUserInput && !this.multiple && this._panelOpen) {\n                this.close();\n                this.focus();\n            }\n        });\n        // Listen to changes in the internal state of the options and react accordingly.\n        // Handles cases like the labels of the selected options changing.\n        merge(...this.options.map(option => option._stateChanges))\n            .pipe(takeUntil(changedOrDestroyed))\n            .subscribe(() => {\n            this._changeDetectorRef.markForCheck();\n            this.stateChanges.next();\n        });\n    }\n    /** Invoked when an option is clicked. */\n    _onSelect(option, isUserInput) {\n        const wasSelected = this._selectionModel.isSelected(option);\n        if (option.value == null && !this._multiple) {\n            option.deselect();\n            this._selectionModel.clear();\n            if (this.value != null) {\n                this._propagateChanges(option.value);\n            }\n        }\n        else {\n            if (wasSelected !== option.selected) {\n                option.selected\n                    ? this._selectionModel.select(option)\n                    : this._selectionModel.deselect(option);\n            }\n            if (isUserInput) {\n                this._keyManager.setActiveItem(option);\n            }\n            if (this.multiple) {\n                this._sortValues();\n                if (isUserInput) {\n                    // In case the user selected the option with their mouse, we\n                    // want to restore focus back to the trigger, in order to\n                    // prevent the select keyboard controls from clashing with\n                    // the ones from `mat-option`.\n                    this.focus();\n                }\n            }\n        }\n        if (wasSelected !== this._selectionModel.isSelected(option)) {\n            this._propagateChanges();\n        }\n        this.stateChanges.next();\n    }\n    /** Sorts the selected values in the selected based on their order in the panel. */\n    _sortValues() {\n        if (this.multiple) {\n            const options = this.options.toArray();\n            this._selectionModel.sort((a, b) => {\n                return this.sortComparator\n                    ? this.sortComparator(a, b, options)\n                    : options.indexOf(a) - options.indexOf(b);\n            });\n            this.stateChanges.next();\n        }\n    }\n    /** Emits change event to set the model value. */\n    _propagateChanges(fallbackValue) {\n        let valueToEmit = null;\n        if (this.multiple) {\n            valueToEmit = this.selected.map(option => option.value);\n        }\n        else {\n            valueToEmit = this.selected ? this.selected.value : fallbackValue;\n        }\n        this._value = valueToEmit;\n        this.valueChange.emit(valueToEmit);\n        this._onChange(valueToEmit);\n        this.selectionChange.emit(this._getChangeEvent(valueToEmit));\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Highlights the selected item. If no option is selected, it will highlight\n     * the first item instead.\n     */\n    _highlightCorrectOption() {\n        if (this._keyManager) {\n            if (this.empty) {\n                this._keyManager.setFirstItemActive();\n            }\n            else {\n                this._keyManager.setActiveItem(this._selectionModel.selected[0]);\n            }\n        }\n    }\n    /** Whether the panel is allowed to open. */\n    _canOpen() {\n        var _a;\n        return !this._panelOpen && !this.disabled && ((_a = this.options) === null || _a === void 0 ? void 0 : _a.length) > 0;\n    }\n    /** Focuses the select element. */\n    focus(options) {\n        this._elementRef.nativeElement.focus(options);\n    }\n    /** Gets the aria-labelledby for the select panel. */\n    _getPanelAriaLabelledby() {\n        var _a;\n        if (this.ariaLabel) {\n            return null;\n        }\n        const labelId = (_a = this._parentFormField) === null || _a === void 0 ? void 0 : _a.getLabelId();\n        const labelExpression = labelId ? labelId + ' ' : '';\n        return this.ariaLabelledby ? labelExpression + this.ariaLabelledby : labelId;\n    }\n    /** Determines the `aria-activedescendant` to be set on the host. */\n    _getAriaActiveDescendant() {\n        if (this.panelOpen && this._keyManager && this._keyManager.activeItem) {\n            return this._keyManager.activeItem.id;\n        }\n        return null;\n    }\n    /** Gets the aria-labelledby of the select component trigger. */\n    _getTriggerAriaLabelledby() {\n        var _a;\n        if (this.ariaLabel) {\n            return null;\n        }\n        const labelId = (_a = this._parentFormField) === null || _a === void 0 ? void 0 : _a.getLabelId();\n        let value = (labelId ? labelId + ' ' : '') + this._valueId;\n        if (this.ariaLabelledby) {\n            value += ' ' + this.ariaLabelledby;\n        }\n        return value;\n    }\n    /** Called when the overlay panel is done animating. */\n    _panelDoneAnimating(isOpen) {\n        this.openedChange.emit(isOpen);\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    setDescribedByIds(ids) {\n        this._ariaDescribedby = ids.join(' ');\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    onContainerClick() {\n        this.focus();\n        this.open();\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get shouldLabelFloat() {\n        return this._panelOpen || !this.empty || (this._focused && !!this._placeholder);\n    }\n}\n_MatSelectBase.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.0\", ngImport: i0, type: _MatSelectBase, deps: [{ token: i1.ViewportRuler }, { token: i0.ChangeDetectorRef }, { token: i0.NgZone }, { token: i2.ErrorStateMatcher }, { token: i0.ElementRef }, { token: i3.Directionality, optional: true }, { token: i4.NgForm, optional: true }, { token: i4.FormGroupDirective, optional: true }, { token: MAT_FORM_FIELD, optional: true }, { token: i4.NgControl, optional: true, self: true }, { token: 'tabindex', attribute: true }, { token: MAT_SELECT_SCROLL_STRATEGY }, { token: i5.LiveAnnouncer }, { token: MAT_SELECT_CONFIG, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\n_MatSelectBase.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.2.0\", type: _MatSelectBase, inputs: { panelClass: \"panelClass\", placeholder: \"placeholder\", required: \"required\", multiple: \"multiple\", disableOptionCentering: \"disableOptionCentering\", compareWith: \"compareWith\", value: \"value\", ariaLabel: [\"aria-label\", \"ariaLabel\"], ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"], errorStateMatcher: \"errorStateMatcher\", typeaheadDebounceInterval: \"typeaheadDebounceInterval\", sortComparator: \"sortComparator\", id: \"id\" }, outputs: { openedChange: \"openedChange\", _openedStream: \"opened\", _closedStream: \"closed\", selectionChange: \"selectionChange\", valueChange: \"valueChange\" }, viewQueries: [{ propertyName: \"trigger\", first: true, predicate: [\"trigger\"], descendants: true }, { propertyName: \"panel\", first: true, predicate: [\"panel\"], descendants: true }, { propertyName: \"_overlayDir\", first: true, predicate: CdkConnectedOverlay, descendants: true }], usesInheritance: true, usesOnChanges: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.0\", ngImport: i0, type: _MatSelectBase, decorators: [{\n            type: Directive\n        }], ctorParameters: function () {\n        return [{ type: i1.ViewportRuler }, { type: i0.ChangeDetectorRef }, { type: i0.NgZone }, { type: i2.ErrorStateMatcher }, { type: i0.ElementRef }, { type: i3.Directionality, decorators: [{\n                        type: Optional\n                    }] }, { type: i4.NgForm, decorators: [{\n                        type: Optional\n                    }] }, { type: i4.FormGroupDirective, decorators: [{\n                        type: Optional\n                    }] }, { type: i6.MatFormField, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [MAT_FORM_FIELD]\n                    }] }, { type: i4.NgControl, decorators: [{\n                        type: Self\n                    }, {\n                        type: Optional\n                    }] }, { type: undefined, decorators: [{\n                        type: Attribute,\n                        args: ['tabindex']\n                    }] }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: [MAT_SELECT_SCROLL_STRATEGY]\n                    }] }, { type: i5.LiveAnnouncer }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [MAT_SELECT_CONFIG]\n                    }] }];\n    }, propDecorators: { trigger: [{\n                type: ViewChild,\n                args: ['trigger']\n            }], panel: [{\n                type: ViewChild,\n                args: ['panel']\n            }], _overlayDir: [{\n                type: ViewChild,\n                args: [CdkConnectedOverlay]\n            }], panelClass: [{\n                type: Input\n            }], placeholder: [{\n                type: Input\n            }], required: [{\n                type: Input\n            }], multiple: [{\n                type: Input\n            }], disableOptionCentering: [{\n                type: Input\n            }], compareWith: [{\n                type: Input\n            }], value: [{\n                type: Input\n            }], ariaLabel: [{\n                type: Input,\n                args: ['aria-label']\n            }], ariaLabelledby: [{\n                type: Input,\n                args: ['aria-labelledby']\n            }], errorStateMatcher: [{\n                type: Input\n            }], typeaheadDebounceInterval: [{\n                type: Input\n            }], sortComparator: [{\n                type: Input\n            }], id: [{\n                type: Input\n            }], openedChange: [{\n                type: Output\n            }], _openedStream: [{\n                type: Output,\n                args: ['opened']\n            }], _closedStream: [{\n                type: Output,\n                args: ['closed']\n            }], selectionChange: [{\n                type: Output\n            }], valueChange: [{\n                type: Output\n            }] } });\nclass MatSelect extends _MatSelectBase {\n    constructor() {\n        super(...arguments);\n        /** The scroll position of the overlay panel, calculated to center the selected option. */\n        this._scrollTop = 0;\n        /** The cached font-size of the trigger element. */\n        this._triggerFontSize = 0;\n        /** The value of the select panel's transform-origin property. */\n        this._transformOrigin = 'top';\n        /**\n         * The y-offset of the overlay panel in relation to the trigger's top start corner.\n         * This must be adjusted to align the selected option text over the trigger text.\n         * when the panel opens. Will change based on the y-position of the selected option.\n         */\n        this._offsetY = 0;\n        this._positions = [\n            {\n                originX: 'start',\n                originY: 'top',\n                overlayX: 'start',\n                overlayY: 'top',\n            },\n            {\n                originX: 'start',\n                originY: 'bottom',\n                overlayX: 'start',\n                overlayY: 'bottom',\n            },\n        ];\n    }\n    /**\n     * Calculates the scroll position of the select's overlay panel.\n     *\n     * Attempts to center the selected option in the panel. If the option is\n     * too high or too low in the panel to be scrolled to the center, it clamps the\n     * scroll position to the min or max scroll positions respectively.\n     */\n    _calculateOverlayScroll(selectedIndex, scrollBuffer, maxScroll) {\n        const itemHeight = this._getItemHeight();\n        const optionOffsetFromScrollTop = itemHeight * selectedIndex;\n        const halfOptionHeight = itemHeight / 2;\n        // Starts at the optionOffsetFromScrollTop, which scrolls the option to the top of the\n        // scroll container, then subtracts the scroll buffer to scroll the option down to\n        // the center of the overlay panel. Half the option height must be re-added to the\n        // scrollTop so the option is centered based on its middle, not its top edge.\n        const optimalScrollPosition = optionOffsetFromScrollTop - scrollBuffer + halfOptionHeight;\n        return Math.min(Math.max(0, optimalScrollPosition), maxScroll);\n    }\n    ngOnInit() {\n        super.ngOnInit();\n        this._viewportRuler\n            .change()\n            .pipe(takeUntil(this._destroy))\n            .subscribe(() => {\n            if (this.panelOpen) {\n                this._triggerRect = this.trigger.nativeElement.getBoundingClientRect();\n                this._changeDetectorRef.markForCheck();\n            }\n        });\n    }\n    open() {\n        if (super._canOpen()) {\n            super.open();\n            this._triggerRect = this.trigger.nativeElement.getBoundingClientRect();\n            // Note: The computed font-size will be a string pixel value (e.g. \"16px\").\n            // `parseInt` ignores the trailing 'px' and converts this to a number.\n            this._triggerFontSize = parseInt(getComputedStyle(this.trigger.nativeElement).fontSize || '0');\n            this._calculateOverlayPosition();\n            // Set the font size on the panel element once it exists.\n            this._ngZone.onStable.pipe(take(1)).subscribe(() => {\n                if (this._triggerFontSize &&\n                    this._overlayDir.overlayRef &&\n                    this._overlayDir.overlayRef.overlayElement) {\n                    this._overlayDir.overlayRef.overlayElement.style.fontSize = `${this._triggerFontSize}px`;\n                }\n            });\n        }\n    }\n    /** Scrolls the active option into view. */\n    _scrollOptionIntoView(index) {\n        const labelCount = _countGroupLabelsBeforeOption(index, this.options, this.optionGroups);\n        const itemHeight = this._getItemHeight();\n        if (index === 0 && labelCount === 1) {\n            // If we've got one group label before the option and we're at the top option,\n            // scroll the list to the top. This is better UX than scrolling the list to the\n            // top of the option, because it allows the user to read the top group's label.\n            this.panel.nativeElement.scrollTop = 0;\n        }\n        else {\n            this.panel.nativeElement.scrollTop = _getOptionScrollPosition((index + labelCount) * itemHeight, itemHeight, this.panel.nativeElement.scrollTop, SELECT_PANEL_MAX_HEIGHT);\n        }\n    }\n    _positioningSettled() {\n        this._calculateOverlayOffsetX();\n        this.panel.nativeElement.scrollTop = this._scrollTop;\n    }\n    _panelDoneAnimating(isOpen) {\n        if (this.panelOpen) {\n            this._scrollTop = 0;\n        }\n        else {\n            this._overlayDir.offsetX = 0;\n            this._changeDetectorRef.markForCheck();\n        }\n        super._panelDoneAnimating(isOpen);\n    }\n    _getChangeEvent(value) {\n        return new MatSelectChange(this, value);\n    }\n    /**\n     * Sets the x-offset of the overlay panel in relation to the trigger's top start corner.\n     * This must be adjusted to align the selected option text over the trigger text when\n     * the panel opens. Will change based on LTR or RTL text direction. Note that the offset\n     * can't be calculated until the panel has been attached, because we need to know the\n     * content width in order to constrain the panel within the viewport.\n     */\n    _calculateOverlayOffsetX() {\n        const overlayRect = this._overlayDir.overlayRef.overlayElement.getBoundingClientRect();\n        const viewportSize = this._viewportRuler.getViewportSize();\n        const isRtl = this._isRtl();\n        const paddingWidth = this.multiple\n            ? SELECT_MULTIPLE_PANEL_PADDING_X + SELECT_PANEL_PADDING_X\n            : SELECT_PANEL_PADDING_X * 2;\n        let offsetX;\n        // Adjust the offset, depending on the option padding.\n        if (this.multiple) {\n            offsetX = SELECT_MULTIPLE_PANEL_PADDING_X;\n        }\n        else if (this.disableOptionCentering) {\n            offsetX = SELECT_PANEL_PADDING_X;\n        }\n        else {\n            let selected = this._selectionModel.selected[0] || this.options.first;\n            offsetX = selected && selected.group ? SELECT_PANEL_INDENT_PADDING_X : SELECT_PANEL_PADDING_X;\n        }\n        // Invert the offset in LTR.\n        if (!isRtl) {\n            offsetX *= -1;\n        }\n        // Determine how much the select overflows on each side.\n        const leftOverflow = 0 - (overlayRect.left + offsetX - (isRtl ? paddingWidth : 0));\n        const rightOverflow = overlayRect.right + offsetX - viewportSize.width + (isRtl ? 0 : paddingWidth);\n        // If the element overflows on either side, reduce the offset to allow it to fit.\n        if (leftOverflow > 0) {\n            offsetX += leftOverflow + SELECT_PANEL_VIEWPORT_PADDING;\n        }\n        else if (rightOverflow > 0) {\n            offsetX -= rightOverflow + SELECT_PANEL_VIEWPORT_PADDING;\n        }\n        // Set the offset directly in order to avoid having to go through change detection and\n        // potentially triggering \"changed after it was checked\" errors. Round the value to avoid\n        // blurry content in some browsers.\n        this._overlayDir.offsetX = Math.round(offsetX);\n        this._overlayDir.overlayRef.updatePosition();\n    }\n    /**\n     * Calculates the y-offset of the select's overlay panel in relation to the\n     * top start corner of the trigger. It has to be adjusted in order for the\n     * selected option to be aligned over the trigger when the panel opens.\n     */\n    _calculateOverlayOffsetY(selectedIndex, scrollBuffer, maxScroll) {\n        const itemHeight = this._getItemHeight();\n        const optionHeightAdjustment = (itemHeight - this._triggerRect.height) / 2;\n        const maxOptionsDisplayed = Math.floor(SELECT_PANEL_MAX_HEIGHT / itemHeight);\n        let optionOffsetFromPanelTop;\n        // Disable offset if requested by user by returning 0 as value to offset\n        if (this.disableOptionCentering) {\n            return 0;\n        }\n        if (this._scrollTop === 0) {\n            optionOffsetFromPanelTop = selectedIndex * itemHeight;\n        }\n        else if (this._scrollTop === maxScroll) {\n            const firstDisplayedIndex = this._getItemCount() - maxOptionsDisplayed;\n            const selectedDisplayIndex = selectedIndex - firstDisplayedIndex;\n            // The first item is partially out of the viewport. Therefore we need to calculate what\n            // portion of it is shown in the viewport and account for it in our offset.\n            let partialItemHeight = itemHeight - ((this._getItemCount() * itemHeight - SELECT_PANEL_MAX_HEIGHT) % itemHeight);\n            // Because the panel height is longer than the height of the options alone,\n            // there is always extra padding at the top or bottom of the panel. When\n            // scrolled to the very bottom, this padding is at the top of the panel and\n            // must be added to the offset.\n            optionOffsetFromPanelTop = selectedDisplayIndex * itemHeight + partialItemHeight;\n        }\n        else {\n            // If the option was scrolled to the middle of the panel using a scroll buffer,\n            // its offset will be the scroll buffer minus the half height that was added to\n            // center it.\n            optionOffsetFromPanelTop = scrollBuffer - itemHeight / 2;\n        }\n        // The final offset is the option's offset from the top, adjusted for the height difference,\n        // multiplied by -1 to ensure that the overlay moves in the correct direction up the page.\n        // The value is rounded to prevent some browsers from blurring the content.\n        return Math.round(optionOffsetFromPanelTop * -1 - optionHeightAdjustment);\n    }\n    /**\n     * Checks that the attempted overlay position will fit within the viewport.\n     * If it will not fit, tries to adjust the scroll position and the associated\n     * y-offset so the panel can open fully on-screen. If it still won't fit,\n     * sets the offset back to 0 to allow the fallback position to take over.\n     */\n    _checkOverlayWithinViewport(maxScroll) {\n        const itemHeight = this._getItemHeight();\n        const viewportSize = this._viewportRuler.getViewportSize();\n        const topSpaceAvailable = this._triggerRect.top - SELECT_PANEL_VIEWPORT_PADDING;\n        const bottomSpaceAvailable = viewportSize.height - this._triggerRect.bottom - SELECT_PANEL_VIEWPORT_PADDING;\n        const panelHeightTop = Math.abs(this._offsetY);\n        const totalPanelHeight = Math.min(this._getItemCount() * itemHeight, SELECT_PANEL_MAX_HEIGHT);\n        const panelHeightBottom = totalPanelHeight - panelHeightTop - this._triggerRect.height;\n        if (panelHeightBottom > bottomSpaceAvailable) {\n            this._adjustPanelUp(panelHeightBottom, bottomSpaceAvailable);\n        }\n        else if (panelHeightTop > topSpaceAvailable) {\n            this._adjustPanelDown(panelHeightTop, topSpaceAvailable, maxScroll);\n        }\n        else {\n            this._transformOrigin = this._getOriginBasedOnOption();\n        }\n    }\n    /** Adjusts the overlay panel up to fit in the viewport. */\n    _adjustPanelUp(panelHeightBottom, bottomSpaceAvailable) {\n        // Browsers ignore fractional scroll offsets, so we need to round.\n        const distanceBelowViewport = Math.round(panelHeightBottom - bottomSpaceAvailable);\n        // Scrolls the panel up by the distance it was extending past the boundary, then\n        // adjusts the offset by that amount to move the panel up into the viewport.\n        this._scrollTop -= distanceBelowViewport;\n        this._offsetY -= distanceBelowViewport;\n        this._transformOrigin = this._getOriginBasedOnOption();\n        // If the panel is scrolled to the very top, it won't be able to fit the panel\n        // by scrolling, so set the offset to 0 to allow the fallback position to take\n        // effect.\n        if (this._scrollTop <= 0) {\n            this._scrollTop = 0;\n            this._offsetY = 0;\n            this._transformOrigin = `50% bottom 0px`;\n        }\n    }\n    /** Adjusts the overlay panel down to fit in the viewport. */\n    _adjustPanelDown(panelHeightTop, topSpaceAvailable, maxScroll) {\n        // Browsers ignore fractional scroll offsets, so we need to round.\n        const distanceAboveViewport = Math.round(panelHeightTop - topSpaceAvailable);\n        // Scrolls the panel down by the distance it was extending past the boundary, then\n        // adjusts the offset by that amount to move the panel down into the viewport.\n        this._scrollTop += distanceAboveViewport;\n        this._offsetY += distanceAboveViewport;\n        this._transformOrigin = this._getOriginBasedOnOption();\n        // If the panel is scrolled to the very bottom, it won't be able to fit the\n        // panel by scrolling, so set the offset to 0 to allow the fallback position\n        // to take effect.\n        if (this._scrollTop >= maxScroll) {\n            this._scrollTop = maxScroll;\n            this._offsetY = 0;\n            this._transformOrigin = `50% top 0px`;\n            return;\n        }\n    }\n    /** Calculates the scroll position and x- and y-offsets of the overlay panel. */\n    _calculateOverlayPosition() {\n        const itemHeight = this._getItemHeight();\n        const items = this._getItemCount();\n        const panelHeight = Math.min(items * itemHeight, SELECT_PANEL_MAX_HEIGHT);\n        const scrollContainerHeight = items * itemHeight;\n        // The farthest the panel can be scrolled before it hits the bottom\n        const maxScroll = scrollContainerHeight - panelHeight;\n        // If no value is selected we open the popup to the first item.\n        let selectedOptionOffset;\n        if (this.empty) {\n            selectedOptionOffset = 0;\n        }\n        else {\n            selectedOptionOffset = Math.max(this.options.toArray().indexOf(this._selectionModel.selected[0]), 0);\n        }\n        selectedOptionOffset += _countGroupLabelsBeforeOption(selectedOptionOffset, this.options, this.optionGroups);\n        // We must maintain a scroll buffer so the selected option will be scrolled to the\n        // center of the overlay panel rather than the top.\n        const scrollBuffer = panelHeight / 2;\n        this._scrollTop = this._calculateOverlayScroll(selectedOptionOffset, scrollBuffer, maxScroll);\n        this._offsetY = this._calculateOverlayOffsetY(selectedOptionOffset, scrollBuffer, maxScroll);\n        this._checkOverlayWithinViewport(maxScroll);\n    }\n    /** Sets the transform origin point based on the selected option. */\n    _getOriginBasedOnOption() {\n        const itemHeight = this._getItemHeight();\n        const optionHeightAdjustment = (itemHeight - this._triggerRect.height) / 2;\n        const originY = Math.abs(this._offsetY) - optionHeightAdjustment + itemHeight / 2;\n        return `50% ${originY}px 0px`;\n    }\n    /** Calculates the height of the select's options. */\n    _getItemHeight() {\n        return this._triggerFontSize * SELECT_ITEM_HEIGHT_EM;\n    }\n    /** Calculates the amount of items in the select. This includes options and group labels. */\n    _getItemCount() {\n        return this.options.length + this.optionGroups.length;\n    }\n}\nMatSelect.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.0\", ngImport: i0, type: MatSelect, deps: null, target: i0.ɵɵFactoryTarget.Component });\nMatSelect.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.2.0\", type: MatSelect, selector: \"mat-select\", inputs: { disabled: \"disabled\", disableRipple: \"disableRipple\", tabIndex: \"tabIndex\" }, host: { attributes: { \"role\": \"combobox\", \"aria-autocomplete\": \"none\", \"aria-haspopup\": \"true\" }, listeners: { \"keydown\": \"_handleKeydown($event)\", \"focus\": \"_onFocus()\", \"blur\": \"_onBlur()\" }, properties: { \"attr.id\": \"id\", \"attr.tabindex\": \"tabIndex\", \"attr.aria-controls\": \"panelOpen ? id + \\\"-panel\\\" : null\", \"attr.aria-expanded\": \"panelOpen\", \"attr.aria-label\": \"ariaLabel || null\", \"attr.aria-required\": \"required.toString()\", \"attr.aria-disabled\": \"disabled.toString()\", \"attr.aria-invalid\": \"errorState\", \"attr.aria-describedby\": \"_ariaDescribedby || null\", \"attr.aria-activedescendant\": \"_getAriaActiveDescendant()\", \"class.mat-select-disabled\": \"disabled\", \"class.mat-select-invalid\": \"errorState\", \"class.mat-select-required\": \"required\", \"class.mat-select-empty\": \"empty\", \"class.mat-select-multiple\": \"multiple\" }, classAttribute: \"mat-select\" }, providers: [\n        { provide: MatFormFieldControl, useExisting: MatSelect },\n        { provide: MAT_OPTION_PARENT_COMPONENT, useExisting: MatSelect },\n    ], queries: [{ propertyName: \"customTrigger\", first: true, predicate: MAT_SELECT_TRIGGER, descendants: true }, { propertyName: \"options\", predicate: MatOption, descendants: true }, { propertyName: \"optionGroups\", predicate: MAT_OPTGROUP, descendants: true }], exportAs: [\"matSelect\"], usesInheritance: true, ngImport: i0, template: \"<!--\\n Note that the select trigger element specifies `aria-owns` pointing to the listbox overlay.\\n While aria-owns is not required for the ARIA 1.2 `role=\\\"combobox\\\"` interaction pattern,\\n it fixes an issue with VoiceOver when the select appears inside of an `aria-model=\\\"true\\\"`\\n element (e.g. a dialog). Without this `aria-owns`, the `aria-modal` on a dialog prevents\\n VoiceOver from \\\"seeing\\\" the select's listbox overlay for aria-activedescendant.\\n Using `aria-owns` re-parents the select overlay so that it works again.\\n See https://github.com/angular/components/issues/20694\\n-->\\n<div cdk-overlay-origin\\n     [attr.aria-owns]=\\\"panelOpen ? id + '-panel' : null\\\"\\n     class=\\\"mat-select-trigger\\\"\\n     (click)=\\\"toggle()\\\"\\n     #origin=\\\"cdkOverlayOrigin\\\"\\n     #trigger>\\n  <div class=\\\"mat-select-value\\\" [ngSwitch]=\\\"empty\\\" [attr.id]=\\\"_valueId\\\">\\n    <span class=\\\"mat-select-placeholder mat-select-min-line\\\" *ngSwitchCase=\\\"true\\\">{{placeholder}}</span>\\n    <span class=\\\"mat-select-value-text\\\" *ngSwitchCase=\\\"false\\\" [ngSwitch]=\\\"!!customTrigger\\\">\\n      <span class=\\\"mat-select-min-line\\\" *ngSwitchDefault>{{triggerValue}}</span>\\n      <ng-content select=\\\"mat-select-trigger\\\" *ngSwitchCase=\\\"true\\\"></ng-content>\\n    </span>\\n  </div>\\n\\n  <div class=\\\"mat-select-arrow-wrapper\\\"><div class=\\\"mat-select-arrow\\\"></div></div>\\n</div>\\n\\n<ng-template\\n  cdk-connected-overlay\\n  cdkConnectedOverlayLockPosition\\n  cdkConnectedOverlayHasBackdrop\\n  cdkConnectedOverlayBackdropClass=\\\"cdk-overlay-transparent-backdrop\\\"\\n  [cdkConnectedOverlayPanelClass]=\\\"_overlayPanelClass\\\"\\n  [cdkConnectedOverlayScrollStrategy]=\\\"_scrollStrategy\\\"\\n  [cdkConnectedOverlayOrigin]=\\\"origin\\\"\\n  [cdkConnectedOverlayOpen]=\\\"panelOpen\\\"\\n  [cdkConnectedOverlayPositions]=\\\"_positions\\\"\\n  [cdkConnectedOverlayMinWidth]=\\\"_triggerRect?.width!\\\"\\n  [cdkConnectedOverlayOffsetY]=\\\"_offsetY\\\"\\n  (backdropClick)=\\\"close()\\\"\\n  (attach)=\\\"_onAttached()\\\"\\n  (detach)=\\\"close()\\\">\\n  <div class=\\\"mat-select-panel-wrap\\\" [@transformPanelWrap]>\\n    <div\\n      #panel\\n      role=\\\"listbox\\\"\\n      tabindex=\\\"-1\\\"\\n      class=\\\"mat-select-panel {{ _getPanelTheme() }}\\\"\\n      [attr.id]=\\\"id + '-panel'\\\"\\n      [attr.aria-multiselectable]=\\\"multiple\\\"\\n      [attr.aria-label]=\\\"ariaLabel || null\\\"\\n      [attr.aria-labelledby]=\\\"_getPanelAriaLabelledby()\\\"\\n      [ngClass]=\\\"panelClass\\\"\\n      [@transformPanel]=\\\"multiple ? 'showing-multiple' : 'showing'\\\"\\n      (@transformPanel.done)=\\\"_panelDoneAnimatingStream.next($event.toState)\\\"\\n      [style.transformOrigin]=\\\"_transformOrigin\\\"\\n      [style.font-size.px]=\\\"_triggerFontSize\\\"\\n      (keydown)=\\\"_handleKeydown($event)\\\">\\n      <ng-content></ng-content>\\n    </div>\\n  </div>\\n</ng-template>\\n\", styles: [\".mat-select{display:inline-block;width:100%;outline:none}.mat-select-trigger{display:inline-table;cursor:pointer;position:relative;box-sizing:border-box}.mat-select-disabled .mat-select-trigger{-webkit-user-select:none;-moz-user-select:none;user-select:none;cursor:default}.mat-select-value{display:table-cell;max-width:0;width:100%;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.mat-select-value-text{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.mat-select-arrow-wrapper{display:table-cell;vertical-align:middle}.mat-form-field-appearance-fill .mat-select-arrow-wrapper{transform:translateY(-50%)}.mat-form-field-appearance-outline .mat-select-arrow-wrapper{transform:translateY(-25%)}.mat-form-field-appearance-standard.mat-form-field-has-label .mat-select:not(.mat-select-empty) .mat-select-arrow-wrapper{transform:translateY(-50%)}.mat-form-field-appearance-standard .mat-select.mat-select-empty .mat-select-arrow-wrapper{transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}._mat-animation-noopable.mat-form-field-appearance-standard .mat-select.mat-select-empty .mat-select-arrow-wrapper{transition:none}.mat-select-arrow{width:0;height:0;border-left:5px solid transparent;border-right:5px solid transparent;border-top:5px solid;margin:0 4px}.mat-form-field.mat-focused .mat-select-arrow{transform:translateX(0)}.mat-select-panel-wrap{flex-basis:100%}.mat-select-panel{min-width:112px;max-width:280px;overflow:auto;-webkit-overflow-scrolling:touch;padding-top:0;padding-bottom:0;max-height:256px;min-width:100%;border-radius:4px;outline:0}.cdk-high-contrast-active .mat-select-panel{outline:solid 1px}.mat-select-panel .mat-optgroup-label,.mat-select-panel .mat-option{font-size:inherit;line-height:3em;height:3em}.mat-form-field-type-mat-select:not(.mat-form-field-disabled) .mat-form-field-flex{cursor:pointer}.mat-form-field-type-mat-select .mat-form-field-label{width:calc(100% - 18px)}.mat-select-placeholder{transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}._mat-animation-noopable .mat-select-placeholder{transition:none}.mat-form-field-hide-placeholder .mat-select-placeholder{color:transparent;-webkit-text-fill-color:transparent;transition:none;display:block}.mat-select-min-line:empty::before{content:\\\" \\\";white-space:pre;width:1px;display:inline-block;opacity:0}\\n\"], directives: [{ type: i7.CdkOverlayOrigin, selector: \"[cdk-overlay-origin], [overlay-origin], [cdkOverlayOrigin]\", exportAs: [\"cdkOverlayOrigin\"] }, { type: i8.NgSwitch, selector: \"[ngSwitch]\", inputs: [\"ngSwitch\"] }, { type: i8.NgSwitchCase, selector: \"[ngSwitchCase]\", inputs: [\"ngSwitchCase\"] }, { type: i8.NgSwitchDefault, selector: \"[ngSwitchDefault]\" }, { type: i7.CdkConnectedOverlay, selector: \"[cdk-connected-overlay], [connected-overlay], [cdkConnectedOverlay]\", inputs: [\"cdkConnectedOverlayOrigin\", \"cdkConnectedOverlayPositions\", \"cdkConnectedOverlayPositionStrategy\", \"cdkConnectedOverlayOffsetX\", \"cdkConnectedOverlayOffsetY\", \"cdkConnectedOverlayWidth\", \"cdkConnectedOverlayHeight\", \"cdkConnectedOverlayMinWidth\", \"cdkConnectedOverlayMinHeight\", \"cdkConnectedOverlayBackdropClass\", \"cdkConnectedOverlayPanelClass\", \"cdkConnectedOverlayViewportMargin\", \"cdkConnectedOverlayScrollStrategy\", \"cdkConnectedOverlayOpen\", \"cdkConnectedOverlayDisableClose\", \"cdkConnectedOverlayTransformOriginOn\", \"cdkConnectedOverlayHasBackdrop\", \"cdkConnectedOverlayLockPosition\", \"cdkConnectedOverlayFlexibleDimensions\", \"cdkConnectedOverlayGrowAfterOpen\", \"cdkConnectedOverlayPush\"], outputs: [\"backdropClick\", \"positionChange\", \"attach\", \"detach\", \"overlayKeydown\", \"overlayOutsideClick\"], exportAs: [\"cdkConnectedOverlay\"] }, { type: i8.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }], animations: [matSelectAnimations.transformPanelWrap, matSelectAnimations.transformPanel], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.0\", ngImport: i0, type: MatSelect, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-select', exportAs: 'matSelect', inputs: ['disabled', 'disableRipple', 'tabIndex'], encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, host: {\n                        'role': 'combobox',\n                        'aria-autocomplete': 'none',\n                        // TODO(crisbeto): the value for aria-haspopup should be `listbox`, but currently it's difficult\n                        // to sync into Google, because of an outdated automated a11y check which flags it as an invalid\n                        // value. At some point we should try to switch it back to being `listbox`.\n                        'aria-haspopup': 'true',\n                        'class': 'mat-select',\n                        '[attr.id]': 'id',\n                        '[attr.tabindex]': 'tabIndex',\n                        '[attr.aria-controls]': 'panelOpen ? id + \"-panel\" : null',\n                        '[attr.aria-expanded]': 'panelOpen',\n                        '[attr.aria-label]': 'ariaLabel || null',\n                        '[attr.aria-required]': 'required.toString()',\n                        '[attr.aria-disabled]': 'disabled.toString()',\n                        '[attr.aria-invalid]': 'errorState',\n                        '[attr.aria-describedby]': '_ariaDescribedby || null',\n                        '[attr.aria-activedescendant]': '_getAriaActiveDescendant()',\n                        '[class.mat-select-disabled]': 'disabled',\n                        '[class.mat-select-invalid]': 'errorState',\n                        '[class.mat-select-required]': 'required',\n                        '[class.mat-select-empty]': 'empty',\n                        '[class.mat-select-multiple]': 'multiple',\n                        '(keydown)': '_handleKeydown($event)',\n                        '(focus)': '_onFocus()',\n                        '(blur)': '_onBlur()',\n                    }, animations: [matSelectAnimations.transformPanelWrap, matSelectAnimations.transformPanel], providers: [\n                        { provide: MatFormFieldControl, useExisting: MatSelect },\n                        { provide: MAT_OPTION_PARENT_COMPONENT, useExisting: MatSelect },\n                    ], template: \"<!--\\n Note that the select trigger element specifies `aria-owns` pointing to the listbox overlay.\\n While aria-owns is not required for the ARIA 1.2 `role=\\\"combobox\\\"` interaction pattern,\\n it fixes an issue with VoiceOver when the select appears inside of an `aria-model=\\\"true\\\"`\\n element (e.g. a dialog). Without this `aria-owns`, the `aria-modal` on a dialog prevents\\n VoiceOver from \\\"seeing\\\" the select's listbox overlay for aria-activedescendant.\\n Using `aria-owns` re-parents the select overlay so that it works again.\\n See https://github.com/angular/components/issues/20694\\n-->\\n<div cdk-overlay-origin\\n     [attr.aria-owns]=\\\"panelOpen ? id + '-panel' : null\\\"\\n     class=\\\"mat-select-trigger\\\"\\n     (click)=\\\"toggle()\\\"\\n     #origin=\\\"cdkOverlayOrigin\\\"\\n     #trigger>\\n  <div class=\\\"mat-select-value\\\" [ngSwitch]=\\\"empty\\\" [attr.id]=\\\"_valueId\\\">\\n    <span class=\\\"mat-select-placeholder mat-select-min-line\\\" *ngSwitchCase=\\\"true\\\">{{placeholder}}</span>\\n    <span class=\\\"mat-select-value-text\\\" *ngSwitchCase=\\\"false\\\" [ngSwitch]=\\\"!!customTrigger\\\">\\n      <span class=\\\"mat-select-min-line\\\" *ngSwitchDefault>{{triggerValue}}</span>\\n      <ng-content select=\\\"mat-select-trigger\\\" *ngSwitchCase=\\\"true\\\"></ng-content>\\n    </span>\\n  </div>\\n\\n  <div class=\\\"mat-select-arrow-wrapper\\\"><div class=\\\"mat-select-arrow\\\"></div></div>\\n</div>\\n\\n<ng-template\\n  cdk-connected-overlay\\n  cdkConnectedOverlayLockPosition\\n  cdkConnectedOverlayHasBackdrop\\n  cdkConnectedOverlayBackdropClass=\\\"cdk-overlay-transparent-backdrop\\\"\\n  [cdkConnectedOverlayPanelClass]=\\\"_overlayPanelClass\\\"\\n  [cdkConnectedOverlayScrollStrategy]=\\\"_scrollStrategy\\\"\\n  [cdkConnectedOverlayOrigin]=\\\"origin\\\"\\n  [cdkConnectedOverlayOpen]=\\\"panelOpen\\\"\\n  [cdkConnectedOverlayPositions]=\\\"_positions\\\"\\n  [cdkConnectedOverlayMinWidth]=\\\"_triggerRect?.width!\\\"\\n  [cdkConnectedOverlayOffsetY]=\\\"_offsetY\\\"\\n  (backdropClick)=\\\"close()\\\"\\n  (attach)=\\\"_onAttached()\\\"\\n  (detach)=\\\"close()\\\">\\n  <div class=\\\"mat-select-panel-wrap\\\" [@transformPanelWrap]>\\n    <div\\n      #panel\\n      role=\\\"listbox\\\"\\n      tabindex=\\\"-1\\\"\\n      class=\\\"mat-select-panel {{ _getPanelTheme() }}\\\"\\n      [attr.id]=\\\"id + '-panel'\\\"\\n      [attr.aria-multiselectable]=\\\"multiple\\\"\\n      [attr.aria-label]=\\\"ariaLabel || null\\\"\\n      [attr.aria-labelledby]=\\\"_getPanelAriaLabelledby()\\\"\\n      [ngClass]=\\\"panelClass\\\"\\n      [@transformPanel]=\\\"multiple ? 'showing-multiple' : 'showing'\\\"\\n      (@transformPanel.done)=\\\"_panelDoneAnimatingStream.next($event.toState)\\\"\\n      [style.transformOrigin]=\\\"_transformOrigin\\\"\\n      [style.font-size.px]=\\\"_triggerFontSize\\\"\\n      (keydown)=\\\"_handleKeydown($event)\\\">\\n      <ng-content></ng-content>\\n    </div>\\n  </div>\\n</ng-template>\\n\", styles: [\".mat-select{display:inline-block;width:100%;outline:none}.mat-select-trigger{display:inline-table;cursor:pointer;position:relative;box-sizing:border-box}.mat-select-disabled .mat-select-trigger{-webkit-user-select:none;-moz-user-select:none;user-select:none;cursor:default}.mat-select-value{display:table-cell;max-width:0;width:100%;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.mat-select-value-text{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.mat-select-arrow-wrapper{display:table-cell;vertical-align:middle}.mat-form-field-appearance-fill .mat-select-arrow-wrapper{transform:translateY(-50%)}.mat-form-field-appearance-outline .mat-select-arrow-wrapper{transform:translateY(-25%)}.mat-form-field-appearance-standard.mat-form-field-has-label .mat-select:not(.mat-select-empty) .mat-select-arrow-wrapper{transform:translateY(-50%)}.mat-form-field-appearance-standard .mat-select.mat-select-empty .mat-select-arrow-wrapper{transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}._mat-animation-noopable.mat-form-field-appearance-standard .mat-select.mat-select-empty .mat-select-arrow-wrapper{transition:none}.mat-select-arrow{width:0;height:0;border-left:5px solid transparent;border-right:5px solid transparent;border-top:5px solid;margin:0 4px}.mat-form-field.mat-focused .mat-select-arrow{transform:translateX(0)}.mat-select-panel-wrap{flex-basis:100%}.mat-select-panel{min-width:112px;max-width:280px;overflow:auto;-webkit-overflow-scrolling:touch;padding-top:0;padding-bottom:0;max-height:256px;min-width:100%;border-radius:4px;outline:0}.cdk-high-contrast-active .mat-select-panel{outline:solid 1px}.mat-select-panel .mat-optgroup-label,.mat-select-panel .mat-option{font-size:inherit;line-height:3em;height:3em}.mat-form-field-type-mat-select:not(.mat-form-field-disabled) .mat-form-field-flex{cursor:pointer}.mat-form-field-type-mat-select .mat-form-field-label{width:calc(100% - 18px)}.mat-select-placeholder{transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}._mat-animation-noopable .mat-select-placeholder{transition:none}.mat-form-field-hide-placeholder .mat-select-placeholder{color:transparent;-webkit-text-fill-color:transparent;transition:none;display:block}.mat-select-min-line:empty::before{content:\\\" \\\";white-space:pre;width:1px;display:inline-block;opacity:0}\\n\"] }]\n        }], propDecorators: { options: [{\n                type: ContentChildren,\n                args: [MatOption, { descendants: true }]\n            }], optionGroups: [{\n                type: ContentChildren,\n                args: [MAT_OPTGROUP, { descendants: true }]\n            }], customTrigger: [{\n                type: ContentChild,\n                args: [MAT_SELECT_TRIGGER]\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatSelectModule {\n}\nMatSelectModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.0\", ngImport: i0, type: MatSelectModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nMatSelectModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.2.0\", ngImport: i0, type: MatSelectModule, declarations: [MatSelect, MatSelectTrigger], imports: [CommonModule, OverlayModule, MatOptionModule, MatCommonModule], exports: [CdkScrollableModule,\n        MatFormFieldModule,\n        MatSelect,\n        MatSelectTrigger,\n        MatOptionModule,\n        MatCommonModule] });\nMatSelectModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.2.0\", ngImport: i0, type: MatSelectModule, providers: [MAT_SELECT_SCROLL_STRATEGY_PROVIDER], imports: [[CommonModule, OverlayModule, MatOptionModule, MatCommonModule], CdkScrollableModule,\n        MatFormFieldModule,\n        MatOptionModule,\n        MatCommonModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.0\", ngImport: i0, type: MatSelectModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule, OverlayModule, MatOptionModule, MatCommonModule],\n                    exports: [\n                        CdkScrollableModule,\n                        MatFormFieldModule,\n                        MatSelect,\n                        MatSelectTrigger,\n                        MatOptionModule,\n                        MatCommonModule,\n                    ],\n                    declarations: [MatSelect, MatSelectTrigger],\n                    providers: [MAT_SELECT_SCROLL_STRATEGY_PROVIDER],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_SELECT_CONFIG, MAT_SELECT_SCROLL_STRATEGY, MAT_SELECT_SCROLL_STRATEGY_PROVIDER, MAT_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY, MAT_SELECT_TRIGGER, MatSelect, MatSelectChange, MatSelectModule, MatSelectTrigger, _MatSelectBase, matSelectAnimations };\n","import * as i1 from '@angular/cdk/overlay';\nimport { Overlay, OverlayModule } from '@angular/cdk/overlay';\nimport * as i4 from '@angular/cdk/a11y';\nimport { A11yModule } from '@angular/cdk/a11y';\nimport * as i7 from '@angular/common';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, Directive, Inject, Input, Optional, Component, ViewEncapsulation, ChangeDetectionStrategy, NgModule } from '@angular/core';\nimport { MatCommonModule } from '@angular/material/core';\nimport * as i2 from '@angular/cdk/scrolling';\nimport { CdkScrollableModule } from '@angular/cdk/scrolling';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { ESCAPE, hasModifierKey } from '@angular/cdk/keycodes';\nimport * as i6 from '@angular/cdk/layout';\nimport { Breakpoints } from '@angular/cdk/layout';\nimport * as i3 from '@angular/cdk/platform';\nimport { normalizePassiveListenerOptions } from '@angular/cdk/platform';\nimport { ComponentPortal } from '@angular/cdk/portal';\nimport { Subject } from 'rxjs';\nimport { takeUntil, take } from 'rxjs/operators';\nimport { trigger, state, style, transition, animate, keyframes } from '@angular/animations';\nimport * as i5 from '@angular/cdk/bidi';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Animations used by MatTooltip.\n * @docs-private\n */\nconst matTooltipAnimations = {\n    /** Animation that transitions a tooltip in and out. */\n    tooltipState: trigger('state', [\n        state('initial, void, hidden', style({ opacity: 0, transform: 'scale(0)' })),\n        state('visible', style({ transform: 'scale(1)' })),\n        transition('* => visible', animate('200ms cubic-bezier(0, 0, 0.2, 1)', keyframes([\n            style({ opacity: 0, transform: 'scale(0)', offset: 0 }),\n            style({ opacity: 0.5, transform: 'scale(0.99)', offset: 0.5 }),\n            style({ opacity: 1, transform: 'scale(1)', offset: 1 }),\n        ]))),\n        transition('* => hidden', animate('100ms cubic-bezier(0, 0, 0.2, 1)', style({ opacity: 0 }))),\n    ]),\n};\n\n/** Time in ms to throttle repositioning after scroll events. */\nconst SCROLL_THROTTLE_MS = 20;\n/**\n * CSS class that will be attached to the overlay panel.\n * @deprecated\n * @breaking-change 13.0.0 remove this variable\n */\nconst TOOLTIP_PANEL_CLASS = 'mat-tooltip-panel';\nconst PANEL_CLASS = 'tooltip-panel';\n/** Options used to bind passive event listeners. */\nconst passiveListenerOptions = normalizePassiveListenerOptions({ passive: true });\n/**\n * Time between the user putting the pointer on a tooltip\n * trigger and the long press event being fired.\n */\nconst LONGPRESS_DELAY = 500;\n/**\n * Creates an error to be thrown if the user supplied an invalid tooltip position.\n * @docs-private\n */\nfunction getMatTooltipInvalidPositionError(position) {\n    return Error(`Tooltip position \"${position}\" is invalid.`);\n}\n/** Injection token that determines the scroll handling while a tooltip is visible. */\nconst MAT_TOOLTIP_SCROLL_STRATEGY = new InjectionToken('mat-tooltip-scroll-strategy');\n/** @docs-private */\nfunction MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY(overlay) {\n    return () => overlay.scrollStrategies.reposition({ scrollThrottle: SCROLL_THROTTLE_MS });\n}\n/** @docs-private */\nconst MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER = {\n    provide: MAT_TOOLTIP_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY,\n};\n/** Injection token to be used to override the default options for `matTooltip`. */\nconst MAT_TOOLTIP_DEFAULT_OPTIONS = new InjectionToken('mat-tooltip-default-options', {\n    providedIn: 'root',\n    factory: MAT_TOOLTIP_DEFAULT_OPTIONS_FACTORY,\n});\n/** @docs-private */\nfunction MAT_TOOLTIP_DEFAULT_OPTIONS_FACTORY() {\n    return {\n        showDelay: 0,\n        hideDelay: 0,\n        touchendHideDelay: 1500,\n    };\n}\nclass _MatTooltipBase {\n    constructor(_overlay, _elementRef, _scrollDispatcher, _viewContainerRef, _ngZone, _platform, _ariaDescriber, _focusMonitor, scrollStrategy, _dir, _defaultOptions, _document) {\n        this._overlay = _overlay;\n        this._elementRef = _elementRef;\n        this._scrollDispatcher = _scrollDispatcher;\n        this._viewContainerRef = _viewContainerRef;\n        this._ngZone = _ngZone;\n        this._platform = _platform;\n        this._ariaDescriber = _ariaDescriber;\n        this._focusMonitor = _focusMonitor;\n        this._dir = _dir;\n        this._defaultOptions = _defaultOptions;\n        this._position = 'below';\n        this._disabled = false;\n        this._viewInitialized = false;\n        this._pointerExitEventsInitialized = false;\n        this._viewportMargin = 8;\n        this._cssClassPrefix = 'mat';\n        this._showDelay = this._defaultOptions.showDelay;\n        this._hideDelay = this._defaultOptions.hideDelay;\n        /**\n         * How touch gestures should be handled by the tooltip. On touch devices the tooltip directive\n         * uses a long press gesture to show and hide, however it can conflict with the native browser\n         * gestures. To work around the conflict, Angular Material disables native gestures on the\n         * trigger, but that might not be desirable on particular elements (e.g. inputs and draggable\n         * elements). The different values for this option configure the touch event handling as follows:\n         * - `auto` - Enables touch gestures for all elements, but tries to avoid conflicts with native\n         *   browser gestures on particular elements. In particular, it allows text selection on inputs\n         *   and textareas, and preserves the native browser dragging on elements marked as `draggable`.\n         * - `on` - Enables touch gestures for all elements and disables native\n         *   browser gestures with no exceptions.\n         * - `off` - Disables touch gestures. Note that this will prevent the tooltip from\n         *   showing on touch devices.\n         */\n        this.touchGestures = 'auto';\n        this._message = '';\n        /** Manually-bound passive event listeners. */\n        this._passiveListeners = [];\n        /** Emits when the component is destroyed. */\n        this._destroyed = new Subject();\n        this._scrollStrategy = scrollStrategy;\n        this._document = _document;\n        if (_defaultOptions) {\n            if (_defaultOptions.position) {\n                this.position = _defaultOptions.position;\n            }\n            if (_defaultOptions.touchGestures) {\n                this.touchGestures = _defaultOptions.touchGestures;\n            }\n        }\n        _dir.change.pipe(takeUntil(this._destroyed)).subscribe(() => {\n            if (this._overlayRef) {\n                this._updatePosition(this._overlayRef);\n            }\n        });\n    }\n    /** Allows the user to define the position of the tooltip relative to the parent element */\n    get position() {\n        return this._position;\n    }\n    set position(value) {\n        var _a;\n        if (value !== this._position) {\n            this._position = value;\n            if (this._overlayRef) {\n                this._updatePosition(this._overlayRef);\n                (_a = this._tooltipInstance) === null || _a === void 0 ? void 0 : _a.show(0);\n                this._overlayRef.updatePosition();\n            }\n        }\n    }\n    /** Disables the display of the tooltip. */\n    get disabled() {\n        return this._disabled;\n    }\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n        // If tooltip is disabled, hide immediately.\n        if (this._disabled) {\n            this.hide(0);\n        }\n        else {\n            this._setupPointerEnterEventsIfNeeded();\n        }\n    }\n    /** The default delay in ms before showing the tooltip after show is called */\n    get showDelay() {\n        return this._showDelay;\n    }\n    set showDelay(value) {\n        this._showDelay = coerceNumberProperty(value);\n    }\n    /** The default delay in ms before hiding the tooltip after hide is called */\n    get hideDelay() {\n        return this._hideDelay;\n    }\n    set hideDelay(value) {\n        this._hideDelay = coerceNumberProperty(value);\n    }\n    /** The message to be displayed in the tooltip */\n    get message() {\n        return this._message;\n    }\n    set message(value) {\n        this._ariaDescriber.removeDescription(this._elementRef.nativeElement, this._message, 'tooltip');\n        // If the message is not a string (e.g. number), convert it to a string and trim it.\n        // Must convert with `String(value)`, not `${value}`, otherwise Closure Compiler optimises\n        // away the string-conversion: https://github.com/angular/components/issues/20684\n        this._message = value != null ? String(value).trim() : '';\n        if (!this._message && this._isTooltipVisible()) {\n            this.hide(0);\n        }\n        else {\n            this._setupPointerEnterEventsIfNeeded();\n            this._updateTooltipMessage();\n            this._ngZone.runOutsideAngular(() => {\n                // The `AriaDescriber` has some functionality that avoids adding a description if it's the\n                // same as the `aria-label` of an element, however we can't know whether the tooltip trigger\n                // has a data-bound `aria-label` or when it'll be set for the first time. We can avoid the\n                // issue by deferring the description by a tick so Angular has time to set the `aria-label`.\n                Promise.resolve().then(() => {\n                    this._ariaDescriber.describe(this._elementRef.nativeElement, this.message, 'tooltip');\n                });\n            });\n        }\n    }\n    /** Classes to be passed to the tooltip. Supports the same syntax as `ngClass`. */\n    get tooltipClass() {\n        return this._tooltipClass;\n    }\n    set tooltipClass(value) {\n        this._tooltipClass = value;\n        if (this._tooltipInstance) {\n            this._setTooltipClass(this._tooltipClass);\n        }\n    }\n    ngAfterViewInit() {\n        // This needs to happen after view init so the initial values for all inputs have been set.\n        this._viewInitialized = true;\n        this._setupPointerEnterEventsIfNeeded();\n        this._focusMonitor\n            .monitor(this._elementRef)\n            .pipe(takeUntil(this._destroyed))\n            .subscribe(origin => {\n            // Note that the focus monitor runs outside the Angular zone.\n            if (!origin) {\n                this._ngZone.run(() => this.hide(0));\n            }\n            else if (origin === 'keyboard') {\n                this._ngZone.run(() => this.show());\n            }\n        });\n    }\n    /**\n     * Dispose the tooltip when destroyed.\n     */\n    ngOnDestroy() {\n        const nativeElement = this._elementRef.nativeElement;\n        clearTimeout(this._touchstartTimeout);\n        if (this._overlayRef) {\n            this._overlayRef.dispose();\n            this._tooltipInstance = null;\n        }\n        // Clean up the event listeners set in the constructor\n        this._passiveListeners.forEach(([event, listener]) => {\n            nativeElement.removeEventListener(event, listener, passiveListenerOptions);\n        });\n        this._passiveListeners.length = 0;\n        this._destroyed.next();\n        this._destroyed.complete();\n        this._ariaDescriber.removeDescription(nativeElement, this.message, 'tooltip');\n        this._focusMonitor.stopMonitoring(nativeElement);\n    }\n    /** Shows the tooltip after the delay in ms, defaults to tooltip-delay-show or 0ms if no input */\n    show(delay = this.showDelay) {\n        if (this.disabled ||\n            !this.message ||\n            (this._isTooltipVisible() &&\n                !this._tooltipInstance._showTimeoutId &&\n                !this._tooltipInstance._hideTimeoutId)) {\n            return;\n        }\n        const overlayRef = this._createOverlay();\n        this._detach();\n        this._portal =\n            this._portal || new ComponentPortal(this._tooltipComponent, this._viewContainerRef);\n        this._tooltipInstance = overlayRef.attach(this._portal).instance;\n        this._tooltipInstance\n            .afterHidden()\n            .pipe(takeUntil(this._destroyed))\n            .subscribe(() => this._detach());\n        this._setTooltipClass(this._tooltipClass);\n        this._updateTooltipMessage();\n        this._tooltipInstance.show(delay);\n    }\n    /** Hides the tooltip after the delay in ms, defaults to tooltip-delay-hide or 0ms if no input */\n    hide(delay = this.hideDelay) {\n        if (this._tooltipInstance) {\n            this._tooltipInstance.hide(delay);\n        }\n    }\n    /** Shows/hides the tooltip */\n    toggle() {\n        this._isTooltipVisible() ? this.hide() : this.show();\n    }\n    /** Returns true if the tooltip is currently visible to the user */\n    _isTooltipVisible() {\n        return !!this._tooltipInstance && this._tooltipInstance.isVisible();\n    }\n    /** Create the overlay config and position strategy */\n    _createOverlay() {\n        if (this._overlayRef) {\n            return this._overlayRef;\n        }\n        const scrollableAncestors = this._scrollDispatcher.getAncestorScrollContainers(this._elementRef);\n        // Create connected position strategy that listens for scroll events to reposition.\n        const strategy = this._overlay\n            .position()\n            .flexibleConnectedTo(this._elementRef)\n            .withTransformOriginOn(`.${this._cssClassPrefix}-tooltip`)\n            .withFlexibleDimensions(false)\n            .withViewportMargin(this._viewportMargin)\n            .withScrollableContainers(scrollableAncestors);\n        strategy.positionChanges.pipe(takeUntil(this._destroyed)).subscribe(change => {\n            this._updateCurrentPositionClass(change.connectionPair);\n            if (this._tooltipInstance) {\n                if (change.scrollableViewProperties.isOverlayClipped && this._tooltipInstance.isVisible()) {\n                    // After position changes occur and the overlay is clipped by\n                    // a parent scrollable then close the tooltip.\n                    this._ngZone.run(() => this.hide(0));\n                }\n            }\n        });\n        this._overlayRef = this._overlay.create({\n            direction: this._dir,\n            positionStrategy: strategy,\n            panelClass: `${this._cssClassPrefix}-${PANEL_CLASS}`,\n            scrollStrategy: this._scrollStrategy(),\n        });\n        this._updatePosition(this._overlayRef);\n        this._overlayRef\n            .detachments()\n            .pipe(takeUntil(this._destroyed))\n            .subscribe(() => this._detach());\n        this._overlayRef\n            .outsidePointerEvents()\n            .pipe(takeUntil(this._destroyed))\n            .subscribe(() => { var _a; return (_a = this._tooltipInstance) === null || _a === void 0 ? void 0 : _a._handleBodyInteraction(); });\n        this._overlayRef\n            .keydownEvents()\n            .pipe(takeUntil(this._destroyed))\n            .subscribe(event => {\n            if (this._isTooltipVisible() && event.keyCode === ESCAPE && !hasModifierKey(event)) {\n                event.preventDefault();\n                event.stopPropagation();\n                this._ngZone.run(() => this.hide(0));\n            }\n        });\n        return this._overlayRef;\n    }\n    /** Detaches the currently-attached tooltip. */\n    _detach() {\n        if (this._overlayRef && this._overlayRef.hasAttached()) {\n            this._overlayRef.detach();\n        }\n        this._tooltipInstance = null;\n    }\n    /** Updates the position of the current tooltip. */\n    _updatePosition(overlayRef) {\n        const position = overlayRef.getConfig().positionStrategy;\n        const origin = this._getOrigin();\n        const overlay = this._getOverlayPosition();\n        position.withPositions([\n            this._addOffset(Object.assign(Object.assign({}, origin.main), overlay.main)),\n            this._addOffset(Object.assign(Object.assign({}, origin.fallback), overlay.fallback)),\n        ]);\n    }\n    /** Adds the configured offset to a position. Used as a hook for child classes. */\n    _addOffset(position) {\n        return position;\n    }\n    /**\n     * Returns the origin position and a fallback position based on the user's position preference.\n     * The fallback position is the inverse of the origin (e.g. `'below' -> 'above'`).\n     */\n    _getOrigin() {\n        const isLtr = !this._dir || this._dir.value == 'ltr';\n        const position = this.position;\n        let originPosition;\n        if (position == 'above' || position == 'below') {\n            originPosition = { originX: 'center', originY: position == 'above' ? 'top' : 'bottom' };\n        }\n        else if (position == 'before' ||\n            (position == 'left' && isLtr) ||\n            (position == 'right' && !isLtr)) {\n            originPosition = { originX: 'start', originY: 'center' };\n        }\n        else if (position == 'after' ||\n            (position == 'right' && isLtr) ||\n            (position == 'left' && !isLtr)) {\n            originPosition = { originX: 'end', originY: 'center' };\n        }\n        else if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            throw getMatTooltipInvalidPositionError(position);\n        }\n        const { x, y } = this._invertPosition(originPosition.originX, originPosition.originY);\n        return {\n            main: originPosition,\n            fallback: { originX: x, originY: y },\n        };\n    }\n    /** Returns the overlay position and a fallback position based on the user's preference */\n    _getOverlayPosition() {\n        const isLtr = !this._dir || this._dir.value == 'ltr';\n        const position = this.position;\n        let overlayPosition;\n        if (position == 'above') {\n            overlayPosition = { overlayX: 'center', overlayY: 'bottom' };\n        }\n        else if (position == 'below') {\n            overlayPosition = { overlayX: 'center', overlayY: 'top' };\n        }\n        else if (position == 'before' ||\n            (position == 'left' && isLtr) ||\n            (position == 'right' && !isLtr)) {\n            overlayPosition = { overlayX: 'end', overlayY: 'center' };\n        }\n        else if (position == 'after' ||\n            (position == 'right' && isLtr) ||\n            (position == 'left' && !isLtr)) {\n            overlayPosition = { overlayX: 'start', overlayY: 'center' };\n        }\n        else if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            throw getMatTooltipInvalidPositionError(position);\n        }\n        const { x, y } = this._invertPosition(overlayPosition.overlayX, overlayPosition.overlayY);\n        return {\n            main: overlayPosition,\n            fallback: { overlayX: x, overlayY: y },\n        };\n    }\n    /** Updates the tooltip message and repositions the overlay according to the new message length */\n    _updateTooltipMessage() {\n        // Must wait for the message to be painted to the tooltip so that the overlay can properly\n        // calculate the correct positioning based on the size of the text.\n        if (this._tooltipInstance) {\n            this._tooltipInstance.message = this.message;\n            this._tooltipInstance._markForCheck();\n            this._ngZone.onMicrotaskEmpty.pipe(take(1), takeUntil(this._destroyed)).subscribe(() => {\n                if (this._tooltipInstance) {\n                    this._overlayRef.updatePosition();\n                }\n            });\n        }\n    }\n    /** Updates the tooltip class */\n    _setTooltipClass(tooltipClass) {\n        if (this._tooltipInstance) {\n            this._tooltipInstance.tooltipClass = tooltipClass;\n            this._tooltipInstance._markForCheck();\n        }\n    }\n    /** Inverts an overlay position. */\n    _invertPosition(x, y) {\n        if (this.position === 'above' || this.position === 'below') {\n            if (y === 'top') {\n                y = 'bottom';\n            }\n            else if (y === 'bottom') {\n                y = 'top';\n            }\n        }\n        else {\n            if (x === 'end') {\n                x = 'start';\n            }\n            else if (x === 'start') {\n                x = 'end';\n            }\n        }\n        return { x, y };\n    }\n    /** Updates the class on the overlay panel based on the current position of the tooltip. */\n    _updateCurrentPositionClass(connectionPair) {\n        const { overlayY, originX, originY } = connectionPair;\n        let newPosition;\n        // If the overlay is in the middle along the Y axis,\n        // it means that it's either before or after.\n        if (overlayY === 'center') {\n            // Note that since this information is used for styling, we want to\n            // resolve `start` and `end` to their real values, otherwise consumers\n            // would have to remember to do it themselves on each consumption.\n            if (this._dir && this._dir.value === 'rtl') {\n                newPosition = originX === 'end' ? 'left' : 'right';\n            }\n            else {\n                newPosition = originX === 'start' ? 'left' : 'right';\n            }\n        }\n        else {\n            newPosition = overlayY === 'bottom' && originY === 'top' ? 'above' : 'below';\n        }\n        if (newPosition !== this._currentPosition) {\n            const overlayRef = this._overlayRef;\n            if (overlayRef) {\n                const classPrefix = `${this._cssClassPrefix}-${PANEL_CLASS}-`;\n                overlayRef.removePanelClass(classPrefix + this._currentPosition);\n                overlayRef.addPanelClass(classPrefix + newPosition);\n            }\n            this._currentPosition = newPosition;\n        }\n    }\n    /** Binds the pointer events to the tooltip trigger. */\n    _setupPointerEnterEventsIfNeeded() {\n        // Optimization: Defer hooking up events if there's no message or the tooltip is disabled.\n        if (this._disabled ||\n            !this.message ||\n            !this._viewInitialized ||\n            this._passiveListeners.length) {\n            return;\n        }\n        // The mouse events shouldn't be bound on mobile devices, because they can prevent the\n        // first tap from firing its click event or can cause the tooltip to open for clicks.\n        if (this._platformSupportsMouseEvents()) {\n            this._passiveListeners.push([\n                'mouseenter',\n                () => {\n                    this._setupPointerExitEventsIfNeeded();\n                    this.show();\n                },\n            ]);\n        }\n        else if (this.touchGestures !== 'off') {\n            this._disableNativeGesturesIfNecessary();\n            this._passiveListeners.push([\n                'touchstart',\n                () => {\n                    // Note that it's important that we don't `preventDefault` here,\n                    // because it can prevent click events from firing on the element.\n                    this._setupPointerExitEventsIfNeeded();\n                    clearTimeout(this._touchstartTimeout);\n                    this._touchstartTimeout = setTimeout(() => this.show(), LONGPRESS_DELAY);\n                },\n            ]);\n        }\n        this._addListeners(this._passiveListeners);\n    }\n    _setupPointerExitEventsIfNeeded() {\n        if (this._pointerExitEventsInitialized) {\n            return;\n        }\n        this._pointerExitEventsInitialized = true;\n        const exitListeners = [];\n        if (this._platformSupportsMouseEvents()) {\n            exitListeners.push(['mouseleave', () => this.hide()], ['wheel', event => this._wheelListener(event)]);\n        }\n        else if (this.touchGestures !== 'off') {\n            this._disableNativeGesturesIfNecessary();\n            const touchendListener = () => {\n                clearTimeout(this._touchstartTimeout);\n                this.hide(this._defaultOptions.touchendHideDelay);\n            };\n            exitListeners.push(['touchend', touchendListener], ['touchcancel', touchendListener]);\n        }\n        this._addListeners(exitListeners);\n        this._passiveListeners.push(...exitListeners);\n    }\n    _addListeners(listeners) {\n        listeners.forEach(([event, listener]) => {\n            this._elementRef.nativeElement.addEventListener(event, listener, passiveListenerOptions);\n        });\n    }\n    _platformSupportsMouseEvents() {\n        return !this._platform.IOS && !this._platform.ANDROID;\n    }\n    /** Listener for the `wheel` event on the element. */\n    _wheelListener(event) {\n        if (this._isTooltipVisible()) {\n            const elementUnderPointer = this._document.elementFromPoint(event.clientX, event.clientY);\n            const element = this._elementRef.nativeElement;\n            // On non-touch devices we depend on the `mouseleave` event to close the tooltip, but it\n            // won't fire if the user scrolls away using the wheel without moving their cursor. We\n            // work around it by finding the element under the user's cursor and closing the tooltip\n            // if it's not the trigger.\n            if (elementUnderPointer !== element && !element.contains(elementUnderPointer)) {\n                this.hide();\n            }\n        }\n    }\n    /** Disables the native browser gestures, based on how the tooltip has been configured. */\n    _disableNativeGesturesIfNecessary() {\n        const gestures = this.touchGestures;\n        if (gestures !== 'off') {\n            const element = this._elementRef.nativeElement;\n            const style = element.style;\n            // If gestures are set to `auto`, we don't disable text selection on inputs and\n            // textareas, because it prevents the user from typing into them on iOS Safari.\n            if (gestures === 'on' || (element.nodeName !== 'INPUT' && element.nodeName !== 'TEXTAREA')) {\n                style.userSelect =\n                    style.msUserSelect =\n                        style.webkitUserSelect =\n                            style.MozUserSelect =\n                                'none';\n            }\n            // If we have `auto` gestures and the element uses native HTML dragging,\n            // we don't set `-webkit-user-drag` because it prevents the native behavior.\n            if (gestures === 'on' || !element.draggable) {\n                style.webkitUserDrag = 'none';\n            }\n            style.touchAction = 'none';\n            style.webkitTapHighlightColor = 'transparent';\n        }\n    }\n}\n_MatTooltipBase.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.0\", ngImport: i0, type: _MatTooltipBase, deps: \"invalid\", target: i0.ɵɵFactoryTarget.Directive });\n_MatTooltipBase.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.2.0\", type: _MatTooltipBase, inputs: { position: [\"matTooltipPosition\", \"position\"], disabled: [\"matTooltipDisabled\", \"disabled\"], showDelay: [\"matTooltipShowDelay\", \"showDelay\"], hideDelay: [\"matTooltipHideDelay\", \"hideDelay\"], touchGestures: [\"matTooltipTouchGestures\", \"touchGestures\"], message: [\"matTooltip\", \"message\"], tooltipClass: [\"matTooltipClass\", \"tooltipClass\"] }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.0\", ngImport: i0, type: _MatTooltipBase, decorators: [{\n            type: Directive\n        }], ctorParameters: function () {\n        return [{ type: i1.Overlay }, { type: i0.ElementRef }, { type: i2.ScrollDispatcher }, { type: i0.ViewContainerRef }, { type: i0.NgZone }, { type: i3.Platform }, { type: i4.AriaDescriber }, { type: i4.FocusMonitor }, { type: undefined }, { type: i5.Directionality }, { type: undefined }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: [DOCUMENT]\n                    }] }];\n    }, propDecorators: { position: [{\n                type: Input,\n                args: ['matTooltipPosition']\n            }], disabled: [{\n                type: Input,\n                args: ['matTooltipDisabled']\n            }], showDelay: [{\n                type: Input,\n                args: ['matTooltipShowDelay']\n            }], hideDelay: [{\n                type: Input,\n                args: ['matTooltipHideDelay']\n            }], touchGestures: [{\n                type: Input,\n                args: ['matTooltipTouchGestures']\n            }], message: [{\n                type: Input,\n                args: ['matTooltip']\n            }], tooltipClass: [{\n                type: Input,\n                args: ['matTooltipClass']\n            }] } });\n/**\n * Directive that attaches a material design tooltip to the host element. Animates the showing and\n * hiding of a tooltip provided position (defaults to below the element).\n *\n * https://material.io/design/components/tooltips.html\n */\nclass MatTooltip extends _MatTooltipBase {\n    constructor(overlay, elementRef, scrollDispatcher, viewContainerRef, ngZone, platform, ariaDescriber, focusMonitor, scrollStrategy, dir, defaultOptions, _document) {\n        super(overlay, elementRef, scrollDispatcher, viewContainerRef, ngZone, platform, ariaDescriber, focusMonitor, scrollStrategy, dir, defaultOptions, _document);\n        this._tooltipComponent = TooltipComponent;\n    }\n}\nMatTooltip.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.0\", ngImport: i0, type: MatTooltip, deps: [{ token: i1.Overlay }, { token: i0.ElementRef }, { token: i2.ScrollDispatcher }, { token: i0.ViewContainerRef }, { token: i0.NgZone }, { token: i3.Platform }, { token: i4.AriaDescriber }, { token: i4.FocusMonitor }, { token: MAT_TOOLTIP_SCROLL_STRATEGY }, { token: i5.Directionality, optional: true }, { token: MAT_TOOLTIP_DEFAULT_OPTIONS, optional: true }, { token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Directive });\nMatTooltip.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.2.0\", type: MatTooltip, selector: \"[matTooltip]\", host: { classAttribute: \"mat-tooltip-trigger\" }, exportAs: [\"matTooltip\"], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.0\", ngImport: i0, type: MatTooltip, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matTooltip]',\n                    exportAs: 'matTooltip',\n                    host: {\n                        'class': 'mat-tooltip-trigger',\n                    },\n                }]\n        }], ctorParameters: function () {\n        return [{ type: i1.Overlay }, { type: i0.ElementRef }, { type: i2.ScrollDispatcher }, { type: i0.ViewContainerRef }, { type: i0.NgZone }, { type: i3.Platform }, { type: i4.AriaDescriber }, { type: i4.FocusMonitor }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: [MAT_TOOLTIP_SCROLL_STRATEGY]\n                    }] }, { type: i5.Directionality, decorators: [{\n                        type: Optional\n                    }] }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [MAT_TOOLTIP_DEFAULT_OPTIONS]\n                    }] }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: [DOCUMENT]\n                    }] }];\n    } });\nclass _TooltipComponentBase {\n    constructor(_changeDetectorRef) {\n        this._changeDetectorRef = _changeDetectorRef;\n        /** Property watched by the animation framework to show or hide the tooltip */\n        this._visibility = 'initial';\n        /** Whether interactions on the page should close the tooltip */\n        this._closeOnInteraction = false;\n        /** Subject for notifying that the tooltip has been hidden from the view */\n        this._onHide = new Subject();\n    }\n    /**\n     * Shows the tooltip with an animation originating from the provided origin\n     * @param delay Amount of milliseconds to the delay showing the tooltip.\n     */\n    show(delay) {\n        // Cancel the delayed hide if it is scheduled\n        clearTimeout(this._hideTimeoutId);\n        // Body interactions should cancel the tooltip if there is a delay in showing.\n        this._closeOnInteraction = true;\n        this._showTimeoutId = setTimeout(() => {\n            this._visibility = 'visible';\n            this._showTimeoutId = undefined;\n            this._onShow();\n            // Mark for check so if any parent component has set the\n            // ChangeDetectionStrategy to OnPush it will be checked anyways\n            this._markForCheck();\n        }, delay);\n    }\n    /**\n     * Begins the animation to hide the tooltip after the provided delay in ms.\n     * @param delay Amount of milliseconds to delay showing the tooltip.\n     */\n    hide(delay) {\n        // Cancel the delayed show if it is scheduled\n        clearTimeout(this._showTimeoutId);\n        this._hideTimeoutId = setTimeout(() => {\n            this._visibility = 'hidden';\n            this._hideTimeoutId = undefined;\n            // Mark for check so if any parent component has set the\n            // ChangeDetectionStrategy to OnPush it will be checked anyways\n            this._markForCheck();\n        }, delay);\n    }\n    /** Returns an observable that notifies when the tooltip has been hidden from view. */\n    afterHidden() {\n        return this._onHide;\n    }\n    /** Whether the tooltip is being displayed. */\n    isVisible() {\n        return this._visibility === 'visible';\n    }\n    ngOnDestroy() {\n        clearTimeout(this._showTimeoutId);\n        clearTimeout(this._hideTimeoutId);\n        this._onHide.complete();\n    }\n    _animationStart() {\n        this._closeOnInteraction = false;\n    }\n    _animationDone(event) {\n        const toState = event.toState;\n        if (toState === 'hidden' && !this.isVisible()) {\n            this._onHide.next();\n        }\n        if (toState === 'visible' || toState === 'hidden') {\n            this._closeOnInteraction = true;\n        }\n    }\n    /**\n     * Interactions on the HTML body should close the tooltip immediately as defined in the\n     * material design spec.\n     * https://material.io/design/components/tooltips.html#behavior\n     */\n    _handleBodyInteraction() {\n        if (this._closeOnInteraction) {\n            this.hide(0);\n        }\n    }\n    /**\n     * Marks that the tooltip needs to be checked in the next change detection run.\n     * Mainly used for rendering the initial text before positioning a tooltip, which\n     * can be problematic in components with OnPush change detection.\n     */\n    _markForCheck() {\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Callback for when the timeout in this.show() gets completed.\n     * This method is only needed by the mdc-tooltip, and so it is only implemented\n     * in the mdc-tooltip, not here.\n     */\n    _onShow() { }\n}\n_TooltipComponentBase.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.0\", ngImport: i0, type: _TooltipComponentBase, deps: [{ token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Directive });\n_TooltipComponentBase.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.2.0\", type: _TooltipComponentBase, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.0\", ngImport: i0, type: _TooltipComponentBase, decorators: [{\n            type: Directive\n        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }]; } });\n/**\n * Internal component that wraps the tooltip's content.\n * @docs-private\n */\nclass TooltipComponent extends _TooltipComponentBase {\n    constructor(changeDetectorRef, _breakpointObserver) {\n        super(changeDetectorRef);\n        this._breakpointObserver = _breakpointObserver;\n        /** Stream that emits whether the user has a handset-sized display.  */\n        this._isHandset = this._breakpointObserver.observe(Breakpoints.Handset);\n    }\n}\nTooltipComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.0\", ngImport: i0, type: TooltipComponent, deps: [{ token: i0.ChangeDetectorRef }, { token: i6.BreakpointObserver }], target: i0.ɵɵFactoryTarget.Component });\nTooltipComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.2.0\", type: TooltipComponent, selector: \"mat-tooltip-component\", host: { attributes: { \"aria-hidden\": \"true\" }, properties: { \"style.zoom\": \"_visibility === \\\"visible\\\" ? 1 : null\" } }, usesInheritance: true, ngImport: i0, template: \"<div class=\\\"mat-tooltip\\\"\\n     [ngClass]=\\\"tooltipClass\\\"\\n     [class.mat-tooltip-handset]=\\\"(_isHandset | async)?.matches\\\"\\n     [@state]=\\\"_visibility\\\"\\n     (@state.start)=\\\"_animationStart()\\\"\\n     (@state.done)=\\\"_animationDone($event)\\\">{{message}}</div>\\n\", styles: [\".mat-tooltip-panel{pointer-events:none !important}.mat-tooltip{color:#fff;border-radius:4px;margin:14px;max-width:250px;padding-left:8px;padding-right:8px;overflow:hidden;text-overflow:ellipsis}.cdk-high-contrast-active .mat-tooltip{outline:solid 1px}.mat-tooltip-handset{margin:24px;padding-left:16px;padding-right:16px}\\n\"], directives: [{ type: i7.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }], pipes: { \"async\": i7.AsyncPipe }, animations: [matTooltipAnimations.tooltipState], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.0\", ngImport: i0, type: TooltipComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-tooltip-component', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, animations: [matTooltipAnimations.tooltipState], host: {\n                        // Forces the element to have a layout in IE and Edge. This fixes issues where the element\n                        // won't be rendered if the animations are disabled or there is no web animations polyfill.\n                        '[style.zoom]': '_visibility === \"visible\" ? 1 : null',\n                        'aria-hidden': 'true',\n                    }, template: \"<div class=\\\"mat-tooltip\\\"\\n     [ngClass]=\\\"tooltipClass\\\"\\n     [class.mat-tooltip-handset]=\\\"(_isHandset | async)?.matches\\\"\\n     [@state]=\\\"_visibility\\\"\\n     (@state.start)=\\\"_animationStart()\\\"\\n     (@state.done)=\\\"_animationDone($event)\\\">{{message}}</div>\\n\", styles: [\".mat-tooltip-panel{pointer-events:none !important}.mat-tooltip{color:#fff;border-radius:4px;margin:14px;max-width:250px;padding-left:8px;padding-right:8px;overflow:hidden;text-overflow:ellipsis}.cdk-high-contrast-active .mat-tooltip{outline:solid 1px}.mat-tooltip-handset{margin:24px;padding-left:16px;padding-right:16px}\\n\"] }]\n        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i6.BreakpointObserver }]; } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatTooltipModule {\n}\nMatTooltipModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.0\", ngImport: i0, type: MatTooltipModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nMatTooltipModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.2.0\", ngImport: i0, type: MatTooltipModule, declarations: [MatTooltip, TooltipComponent], imports: [A11yModule, CommonModule, OverlayModule, MatCommonModule], exports: [MatTooltip, TooltipComponent, MatCommonModule, CdkScrollableModule] });\nMatTooltipModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.2.0\", ngImport: i0, type: MatTooltipModule, providers: [MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER], imports: [[A11yModule, CommonModule, OverlayModule, MatCommonModule], MatCommonModule, CdkScrollableModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.0\", ngImport: i0, type: MatTooltipModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [A11yModule, CommonModule, OverlayModule, MatCommonModule],\n                    exports: [MatTooltip, TooltipComponent, MatCommonModule, CdkScrollableModule],\n                    declarations: [MatTooltip, TooltipComponent],\n                    providers: [MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_TOOLTIP_DEFAULT_OPTIONS, MAT_TOOLTIP_DEFAULT_OPTIONS_FACTORY, MAT_TOOLTIP_SCROLL_STRATEGY, MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY, MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER, MatTooltip, MatTooltipModule, SCROLL_THROTTLE_MS, TOOLTIP_PANEL_CLASS, TooltipComponent, _MatTooltipBase, _TooltipComponentBase, getMatTooltipInvalidPositionError, matTooltipAnimations };\n"],"names":["i0","NgModule","Injectable","coerceArray","Subject","combineLatest","concat","Observable","take","skip","debounceTime","map","startWith","takeUntil","i1","LayoutModule","ɵfac","ɵmod","ɵinj","type","args","mediaQueriesForWebkitCompatibility","Set","mediaQueryStyleNode","MediaMatcher","constructor","_platform","_matchMedia","isBrowser","window","matchMedia","bind","noopMatchMedia","query","WEBKIT","BLINK","createEmptyStyleRule","Platform","ɵprov","providedIn","has","document","createElement","setAttribute","head","appendChild","sheet","insertRule","add","e","console","error","matches","media","addListener","removeListener","BreakpointObserver","_mediaMatcher","_zone","_queries","Map","_destroySubject","ngOnDestroy","next","complete","isMatched","value","queries","splitQueries","some","mediaQuery","_registerQuery","mql","observe","observables","observable","stateObservable","pipe","breakpointStates","response","breakpoints","forEach","get","queryObservable","observer","handler","run","output","set","NgZone","split","reduce","a1","a2","trim","Breakpoints","XSmall","Small","Medium","Large","XLarge","Handset","Tablet","Web","HandsetPortrait","TabletPortrait","WebPortrait","HandsetLandscape","TabletLandscape","WebLandscape","i6","CommonModule","Optional","SkipSelf","InjectionToken","EventEmitter","Directive","Input","Output","Component","ChangeDetectionStrategy","ViewEncapsulation","Inject","i4","mixinDisabled","mixinInitialized","MatCommonModule","i5","MatButtonModule","i3","MatSelectModule","i7","MatTooltipModule","coerceNumberProperty","coerceBooleanProperty","i2","MatPaginatorIntl","changes","itemsPerPageLabel","nextPageLabel","previousPageLabel","firstPageLabel","lastPageLabel","getRangeLabel","page","pageSize","length","Math","max","startIndex","endIndex","min","MAT_PAGINATOR_INTL_PROVIDER_FACTORY","parentIntl","MAT_PAGINATOR_INTL_PROVIDER","provide","deps","useFactory","DEFAULT_PAGE_SIZE","PageEvent","MAT_PAGINATOR_DEFAULT_OPTIONS","_MatPaginatorMixinBase","_MatPaginatorBase","_intl","_changeDetectorRef","defaults","_pageIndex","_length","_pageSizeOptions","_hidePageSize","_showFirstLastButtons","_intlChanges","subscribe","markForCheck","pageSizeOptions","hidePageSize","showFirstLastButtons","_pageSize","pageIndex","_updateDisplayedPageSizeOptions","p","ngOnInit","_initialized","_markInitialized","unsubscribe","nextPage","hasNextPage","previousPageIndex","_emitPageEvent","previousPage","hasPreviousPage","firstPage","lastPage","getNumberOfPages","maxPageIndex","ceil","_changePageSize","floor","_nextButtonsDisabled","disabled","_previousButtonsDisabled","_displayedPageSizeOptions","slice","indexOf","push","sort","a","b","emit","ɵdir","ChangeDetectorRef","undefined","color","MatPaginator","intl","changeDetectorRef","formFieldAppearance","_formFieldAppearance","ɵcmp","MatFormField","MatSelect","MatOption","MatButton","NgIf","NgForOf","MatTooltip","selector","exportAs","inputs","host","changeDetection","OnPush","encapsulation","None","template","styles","decorators","MatPaginatorModule","imports","exports","declarations","providers","Overlay","CdkConnectedOverlay","OverlayModule","i8","Self","Attribute","ViewChild","ContentChildren","ContentChild","mixinDisableRipple","mixinTabIndex","mixinErrorState","_countGroupLabelsBeforeOption","_getOptionScrollPosition","MAT_OPTION_PARENT_COMPONENT","MAT_OPTGROUP","MatOptionModule","MAT_FORM_FIELD","MatFormFieldControl","MatFormFieldModule","CdkScrollableModule","ActiveDescendantKeyManager","SelectionModel","DOWN_ARROW","UP_ARROW","LEFT_ARROW","RIGHT_ARROW","ENTER","SPACE","hasModifierKey","A","Validators","defer","merge","switchMap","filter","distinctUntilChanged","trigger","transition","animateChild","state","style","animate","matSelectAnimations","transformPanelWrap","optional","transformPanel","transform","minWidth","opacity","getMatSelectDynamicMultipleError","Error","getMatSelectNonArrayValueError","getMatSelectNonFunctionValueError","nextUniqueId","SELECT_PANEL_MAX_HEIGHT","SELECT_PANEL_PADDING_X","SELECT_PANEL_INDENT_PADDING_X","SELECT_ITEM_HEIGHT_EM","SELECT_MULTIPLE_PANEL_PADDING_X","SELECT_PANEL_VIEWPORT_PADDING","MAT_SELECT_SCROLL_STRATEGY","MAT_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY","overlay","scrollStrategies","reposition","MAT_SELECT_CONFIG","MAT_SELECT_SCROLL_STRATEGY_PROVIDER","MatSelectChange","source","_MatSelectMixinBase","_elementRef","_defaultErrorStateMatcher","_parentForm","_parentFormGroup","ngControl","MAT_SELECT_TRIGGER","MatSelectTrigger","useExisting","_MatSelectBase","_viewportRuler","_ngZone","elementRef","_dir","_parentFormField","tabIndex","scrollStrategyFactory","_liveAnnouncer","_defaultOptions","_a","_b","_c","_panelOpen","_compareWith","o1","o2","_uid","_triggerAriaLabelledBy","_destroy","_onChange","_onTouched","_valueId","_panelDoneAnimatingStream","_overlayPanelClass","overlayPanelClass","_focused","controlType","_multiple","_disableOptionCentering","disableOptionCentering","ariaLabel","optionSelectionChanges","options","option","onSelectionChange","onStable","openedChange","_openedStream","o","_closedStream","selectionChange","valueChange","valueAccessor","typeaheadDebounceInterval","_typeaheadDebounceInterval","_scrollStrategyFactory","_scrollStrategy","parseInt","id","focused","placeholder","_placeholder","stateChanges","required","_d","_required","control","hasValidator","multiple","_selectionModel","ngDevMode","compareWith","fn","_initializeSelection","_value","newValue","Array","isArray","_setSelectionByValue","_id","_panelDoneAnimating","panelOpen","ngAfterContentInit","_initKeyManager","changed","event","added","select","removed","deselect","_resetOptions","ngDoCheck","newAriaLabelledby","_getTriggerAriaLabelledby","element","nativeElement","removeAttribute","updateErrorState","ngOnChanges","_keyManager","withTypeAhead","toggle","close","open","_canOpen","withHorizontalOrientation","_highlightCorrectOption","_isRtl","writeValue","registerOnChange","registerOnTouched","setDisabledState","isDisabled","selected","triggerValue","empty","selectedOptions","viewValue","reverse","join","_handleKeydown","_handleOpenKeydown","_handleClosedKeydown","keyCode","isArrowKey","isOpenKey","manager","isTyping","altKey","preventDefault","previouslySelectedOption","onKeydown","selectedOption","announce","activeItem","_selectViaInteraction","ctrlKey","hasDeselectedOptions","opt","previouslyFocusedIndex","activeItemIndex","shiftKey","_onFocus","_onBlur","_onAttached","_overlayDir","positionChange","detectChanges","_positioningSettled","_getPanelTheme","isEmpty","Promise","resolve","then","setInactiveStyles","clear","currentValue","_selectValue","_sortValues","correspondingOption","updateActiveItem","find","isSelected","warn","withVerticalOrientation","withHomeAndEnd","withAllowedModifierKeys","tabOut","focus","change","panel","_scrollOptionIntoView","changedOrDestroyed","_onSelect","isUserInput","_stateChanges","wasSelected","_propagateChanges","setActiveItem","toArray","sortComparator","fallbackValue","valueToEmit","_getChangeEvent","setFirstItemActive","_getPanelAriaLabelledby","labelId","getLabelId","labelExpression","ariaLabelledby","_getAriaActiveDescendant","isOpen","setDescribedByIds","ids","_ariaDescribedby","onContainerClick","shouldLabelFloat","ViewportRuler","ErrorStateMatcher","ElementRef","Directionality","NgForm","FormGroupDirective","NgControl","LiveAnnouncer","panelClass","errorStateMatcher","arguments","_scrollTop","_triggerFontSize","_transformOrigin","_offsetY","_positions","originX","originY","overlayX","overlayY","_calculateOverlayScroll","selectedIndex","scrollBuffer","maxScroll","itemHeight","_getItemHeight","optionOffsetFromScrollTop","halfOptionHeight","optimalScrollPosition","_triggerRect","getBoundingClientRect","getComputedStyle","fontSize","_calculateOverlayPosition","overlayRef","overlayElement","index","labelCount","optionGroups","scrollTop","_calculateOverlayOffsetX","offsetX","overlayRect","viewportSize","getViewportSize","isRtl","paddingWidth","first","group","leftOverflow","left","rightOverflow","right","width","round","updatePosition","_calculateOverlayOffsetY","optionHeightAdjustment","height","maxOptionsDisplayed","optionOffsetFromPanelTop","firstDisplayedIndex","_getItemCount","selectedDisplayIndex","partialItemHeight","_checkOverlayWithinViewport","topSpaceAvailable","top","bottomSpaceAvailable","bottom","panelHeightTop","abs","totalPanelHeight","panelHeightBottom","_adjustPanelUp","_adjustPanelDown","_getOriginBasedOnOption","distanceBelowViewport","distanceAboveViewport","items","panelHeight","scrollContainerHeight","selectedOptionOffset","CdkOverlayOrigin","NgSwitch","NgSwitchCase","NgSwitchDefault","NgClass","animations","descendants","customTrigger","A11yModule","DOCUMENT","ESCAPE","normalizePassiveListenerOptions","ComponentPortal","keyframes","matTooltipAnimations","tooltipState","offset","SCROLL_THROTTLE_MS","TOOLTIP_PANEL_CLASS","PANEL_CLASS","passiveListenerOptions","passive","LONGPRESS_DELAY","getMatTooltipInvalidPositionError","position","MAT_TOOLTIP_SCROLL_STRATEGY","MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY","scrollThrottle","MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER","MAT_TOOLTIP_DEFAULT_OPTIONS","factory","MAT_TOOLTIP_DEFAULT_OPTIONS_FACTORY","showDelay","hideDelay","touchendHideDelay","_MatTooltipBase","_overlay","_scrollDispatcher","_viewContainerRef","_ariaDescriber","_focusMonitor","scrollStrategy","_document","_position","_disabled","_viewInitialized","_pointerExitEventsInitialized","_viewportMargin","_cssClassPrefix","_showDelay","_hideDelay","touchGestures","_message","_passiveListeners","_destroyed","_overlayRef","_updatePosition","_tooltipInstance","show","hide","_setupPointerEnterEventsIfNeeded","message","removeDescription","String","_isTooltipVisible","_updateTooltipMessage","runOutsideAngular","describe","tooltipClass","_tooltipClass","_setTooltipClass","ngAfterViewInit","monitor","origin","clearTimeout","_touchstartTimeout","dispose","listener","removeEventListener","stopMonitoring","delay","_showTimeoutId","_hideTimeoutId","_createOverlay","_detach","_portal","_tooltipComponent","attach","instance","afterHidden","isVisible","scrollableAncestors","getAncestorScrollContainers","strategy","flexibleConnectedTo","withTransformOriginOn","withFlexibleDimensions","withViewportMargin","withScrollableContainers","positionChanges","_updateCurrentPositionClass","connectionPair","scrollableViewProperties","isOverlayClipped","create","direction","positionStrategy","detachments","outsidePointerEvents","_handleBodyInteraction","keydownEvents","stopPropagation","hasAttached","detach","getConfig","_getOrigin","_getOverlayPosition","withPositions","_addOffset","Object","assign","main","fallback","isLtr","originPosition","x","y","_invertPosition","overlayPosition","_markForCheck","onMicrotaskEmpty","newPosition","_currentPosition","classPrefix","removePanelClass","addPanelClass","_platformSupportsMouseEvents","_setupPointerExitEventsIfNeeded","_disableNativeGesturesIfNecessary","setTimeout","_addListeners","exitListeners","_wheelListener","touchendListener","listeners","addEventListener","IOS","ANDROID","elementUnderPointer","elementFromPoint","clientX","clientY","contains","gestures","nodeName","userSelect","msUserSelect","webkitUserSelect","MozUserSelect","draggable","webkitUserDrag","touchAction","webkitTapHighlightColor","ScrollDispatcher","ViewContainerRef","AriaDescriber","FocusMonitor","scrollDispatcher","viewContainerRef","ngZone","platform","ariaDescriber","focusMonitor","dir","defaultOptions","TooltipComponent","_TooltipComponentBase","_visibility","_closeOnInteraction","_onHide","_onShow","_animationStart","_animationDone","toState","_breakpointObserver","_isHandset","AsyncPipe"],"sourceRoot":"webpack:///"}