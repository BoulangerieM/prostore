{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/admin/services/opening-days.service.ts","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/auth/auth.module.ts","./src/app/auth/components/login-modal/login-modal.component.ts","./src/app/auth/components/login-modal/login-modal.component.html","./src/app/auth/pages/login-page/login-page.component.ts","./src/app/auth/pages/register-page/register-page.component.ts","./src/app/auth/pages/register-page/register-page.component.html","./src/app/auth/services/admin.guard.ts","./src/app/auth/services/auth.service.ts","./src/app/core/components/footer/footer.component.ts","./src/app/core/components/footer/footer.component.html","./src/app/core/components/header/header.component.ts","./src/app/core/components/header/header.component.html","./src/app/core/components/info-modal/info-modal.component.ts","./src/app/core/components/info-modal/info-modal.component.html","./src/app/core/pages/mentions-legales/mentions-legales.component.ts","./src/app/core/pages/mentions-legales/mentions-legales.component.html","./src/app/models/header.ts","./src/app/models/product.ts","./src/app/order/order-routing.module.ts","./src/app/order/order.module.ts","./src/app/order/pages/order-form/order-form.component.ts","./src/app/order/pages/order-form/order-form.component.html","./src/app/order/services/mondayStartWeekDateAdapter.service.ts","./src/app/order/services/order-summary.pipe.ts","./src/app/order/services/order.service.ts","./src/app/shared/components/info-modal/template-modal.component.ts","./src/app/shared/components/info-modal/template-modal.component.html","./src/app/shared/shared.module.ts","./src/app/shared/utils/date.utils.ts","./src/app/shared/utils/form-utils.ts","./src/app/shared/utils/validate-password.ts","./src/app/user/services/user.service.ts","./src/environments/environment.ts","./src/main.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { AngularFirestore, AngularFirestoreCollection, DocumentReference } from '@angular/fire/compat/firestore';\r\nimport { ClosingDay } from '@models/closingDay';\r\nimport { from, Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class OpeningDaysService {\r\n  private closingDaysCollection: AngularFirestoreCollection<ClosingDay>;\r\n  closingDays: Observable<ClosingDay[]>\r\n\r\n  constructor(private readonly firestore: AngularFirestore) {\r\n    this.closingDaysCollection = this.firestore.collection<ClosingDay>('closingDays');\r\n    this.closingDays = this.closingDaysCollection.valueChanges({ idField: 'rangeId' });\r\n  }\r\n\r\n  public getAllClosingDays(): Observable<ClosingDay[]> {\r\n    return this.closingDays;\r\n  }\r\n\r\n  public addClosingDays(days: ClosingDay): Observable<DocumentReference> {\r\n    return from(\r\n      this.closingDaysCollection.add(days)\r\n    );\r\n  }\r\n\r\n  public deleteClosingDays(rangeId: string) {\r\n    return from(\r\n      this.closingDaysCollection\r\n        .doc(rangeId)\r\n        .delete()\r\n    );\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { canActivate, redirectLoggedInTo, redirectUnauthorizedTo } from '@angular/fire/compat/auth-guard';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { LoginPageComponent } from './auth/pages/login-page/login-page.component';\r\nimport { RegisterPageComponent } from './auth/pages/register-page/register-page.component';\r\nimport { AdminGuard } from './auth/services/admin.guard';\r\nimport { MentionsLegalesComponent } from './core/pages/mentions-legales/mentions-legales.component';\r\nimport { OrderFormComponent } from './order/pages/order-form/order-form.component';\r\n\r\nconst redirectUnauthorizedToLogin = () => redirectUnauthorizedTo(['connexion']);\r\nconst redirectAlreadyLoggedIn = () => redirectLoggedInTo(['']);\r\n\r\nconst routes: Routes = [\r\n  { path: '', redirectTo: 'commande', pathMatch: 'full' },\r\n  { path: 'commande', component: OrderFormComponent, ...canActivate(redirectUnauthorizedToLogin), },\r\n  { path: 'mentions-legales', component: MentionsLegalesComponent },\r\n  {\r\n    path: 'connexion',\r\n    component: LoginPageComponent,\r\n    ...canActivate(redirectAlreadyLoggedIn),\r\n  },\r\n  {\r\n    path: 'inscription',\r\n    component: RegisterPageComponent,\r\n    ...canActivate(redirectAlreadyLoggedIn),\r\n  },\r\n  {\r\n    path: 'admin',\r\n    loadChildren: () =>\r\n      import('./admin/admin.module').then((m) => m.AdminModule),\r\n    canActivate: [AdminGuard]\r\n  },\r\n  {\r\n    path: 'compte',\r\n    loadChildren: () =>\r\n      import('./user/user.module').then((m) => m.UserModule),\r\n    ...canActivate(redirectUnauthorizedToLogin),\r\n  },\r\n  { path: '**', redirectTo: 'commande' },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component } from '@angular/core';\r\nimport { AngularFireAuth } from '@angular/fire/compat/auth';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { Router } from '@angular/router';\r\nimport { AuthService } from '@app/auth/services/auth.service';\r\nimport { first, take, tap } from 'rxjs/operators';\r\n\r\nimport { TemplateModalComponent } from './shared/components/info-modal/template-modal.component';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss'],\r\n})\r\nexport class AppComponent {\r\n  public activatedRoute = '';\r\n  public resendEmailVerificationEmailModal!: MatDialogRef<TemplateModalComponent>;\r\n\r\n  constructor(\r\n    public router: Router,\r\n    public authService: AuthService,\r\n    private auth: AngularFireAuth,\r\n    private dialog: MatDialog\r\n  ) {\r\n    this.authService\r\n      .isUserAuthenticated()\r\n      .pipe(\r\n        tap((user) => {\r\n          if (user && !user?.emailVerified) {\r\n            this.resendEmailVerificationEmailModal = this.dialog.open(TemplateModalComponent, {\r\n              data: {\r\n                title: \"Email non vérifié\",\r\n                bodyText: `\r\n                <p>Votre compte a bien été créé mais vous n'avez pas validé votre email.</p>\r\n                <p>Vous avez normalement reçu un mail de confirmation avec un lien sur lequel cliquer pour finaliser votre création de compte.</p>\r\n                <p>Pensez à vérifier vos spams!</p>\r\n                <p>Si vous n'avez pas reçu l'email, vous pouvez en redemander un autre en cliquant sur le bouton ci-dessous.</p>\r\n                `,\r\n                buttonText: \"Renvoyer un email\",\r\n                buttonAction: () => this.auth.user.pipe(take(1), tap(user => user?.sendEmailVerification())).subscribe()\r\n              },\r\n              disableClose: true,\r\n              width: '400px',\r\n              maxWidth: '90%',\r\n            });\r\n            this.resendEmailVerificationEmailModal\r\n              .afterClosed()\r\n              .pipe(\r\n                tap(() => {\r\n                  this.logout();\r\n                }),\r\n                first()\r\n              )\r\n              .subscribe();\r\n          }\r\n        })\r\n      )\r\n      .subscribe();\r\n  }\r\n\r\n  public logout(): void {\r\n    this.authService.logout();\r\n    window.location.reload();\r\n  }\r\n\r\n  public onActivate(): void {\r\n    this.activatedRoute = this.router.routerState.snapshot.url;\r\n  }\r\n}\r\n","<app-header [activatedRoute]=\"activatedRoute\"></app-header>\r\n<div class=\"container-page\">\r\n  <router-outlet (activate)=\"onActivate()\"></router-outlet>\r\n</div>\r\n<app-footer></app-footer>","import { registerLocaleData } from '@angular/common';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport localeFrExtra from '@angular/common/locales/extra/fr';\r\nimport localeFr from '@angular/common/locales/fr';\r\nimport { LOCALE_ID, NgModule } from '@angular/core';\r\nimport { AngularFireModule } from '@angular/fire/compat';\r\nimport { getFirestore, provideFirestore } from '@angular/fire/firestore';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\n\r\nimport { environment } from './../environments/environment';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { AuthModule } from './auth/auth.module';\r\nimport { FooterComponent } from './core/components/footer/footer.component';\r\nimport { HeaderComponent } from './core/components/header/header.component';\r\nimport { InfoModalComponent } from './core/components/info-modal/info-modal.component';\r\nimport { MentionsLegalesComponent } from './core/pages/mentions-legales/mentions-legales.component';\r\nimport { OrderModule } from './order/order.module';\r\nimport { SharedModule } from './shared/shared.module';\r\n\r\nregisterLocaleData(localeFr, 'fr-FR', localeFrExtra);\r\n@NgModule({\r\n  declarations: [AppComponent, MentionsLegalesComponent, InfoModalComponent, FooterComponent, HeaderComponent],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    AngularFireModule.initializeApp(environment.firebaseConfig),\r\n    provideFirestore(() => {\r\n      const firestore = getFirestore();\r\n      // TODO: Pour avoir un émulateur en mode dev, a voir plus tard\r\n      // connectFirestoreEmulator(firestore, 'localhost', 8080);\r\n      // TODO: Pour sauvegarder les données de la db dans le cache pour rationaliser les appels. A voir dans un second temps\r\n      // enableIndexedDbPersistence(firestore);\r\n      return firestore;\r\n    }),\r\n    BrowserAnimationsModule,\r\n    MatToolbarModule,\r\n    MatMenuModule,\r\n    MatIconModule,\r\n    HttpClientModule,\r\n    MatCheckboxModule,\r\n    SharedModule,\r\n    OrderModule,\r\n    AuthModule,\r\n  ],\r\n  providers: [{ provide: LOCALE_ID, useValue: 'fr-FR' }],\r\n  bootstrap: [AppComponent],\r\n})\r\nexport class AppModule { }","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { SharedModule } from '@app/shared/shared.module';\r\n\r\nimport { LoginModalComponent } from './components/login-modal/login-modal.component';\r\nimport { LoginPageComponent } from './pages/login-page/login-page.component';\r\nimport { RegisterPageComponent } from './pages/register-page/register-page.component';\r\nimport { AdminGuard } from './services/admin.guard';\r\nimport { AuthService } from './services/auth.service';\r\n\r\n@NgModule({\r\n  declarations: [LoginModalComponent, LoginPageComponent, RegisterPageComponent],\r\n  imports: [\r\n    CommonModule,\r\n    MatFormFieldModule,\r\n    ReactiveFormsModule,\r\n    MatInputModule,\r\n    SharedModule\r\n  ],\r\n  providers: [AuthService, AdminGuard],\r\n})\r\nexport class AuthModule { }\r\n","import { Component } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Router } from '@angular/router';\nimport { AuthService } from '@app/auth/services/auth.service';\nimport { take } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-login-modal',\n  templateUrl: './login-modal.component.html',\n  styleUrls: ['./login-modal.component.scss'],\n})\nexport class LoginModalComponent {\n  public loginErrorMessage = '';\n  public resetPasswordErrorMessage = '';\n  public forgottenPassword = false;\n  public title = this.forgottenPassword ? 'Mot de passe oublié' : 'Connexion';\n  public loginForm = this.fb.group({\n    email: [null, [Validators.required]],\n    password: [null, [Validators.required]],\n  });\n  public resetPasswordForm = this.fb.group({\n    email: [null, [Validators.required]],\n  });\n  constructor(\n    private fb: FormBuilder,\n    private authService: AuthService,\n    public router: Router,\n    private dialog: MatDialog\n  ) {}\n\n  public login(): void {\n    if (this.loginForm.valid) {\n      this.authService\n        .login(this.loginForm.value)\n        .pipe(take(1))\n        .subscribe({\n          next: () => {\n            this.router.navigate(['/commande']);\n            this.dialog.closeAll();\n          },\n          error: (err) => {\n            if (err.code === 'auth/wrong-password') {\n              this.loginErrorMessage =\n                'Mauvais e-mail ou mot de passe, veuillez réessayer.';\n            } else {\n              this.loginErrorMessage =\n                'Une erreur est survenue, veuillez réessayer plus tard. ' +\n                err.message;\n            }\n          },\n        });\n    }\n  }\n\n  public resetUserPassword(): void {\n    if (this.resetPasswordForm.valid) {\n      this.authService\n        .resetUserPassword(this.resetPasswordForm.value.email)\n        .pipe(take(1))\n        .subscribe({\n          next: () => {\n            window.location.reload();\n          },\n          error: (err) => {\n            this.resetPasswordErrorMessage =\n              'Une erreur est survenue, veuillez réessayer plus tard. ' +\n              err.message;\n          },\n        });\n    }\n  }\n\n  public goToRegister() {\n    this.router.navigate(['/inscription']);\n    this.dialog.closeAll();\n  }\n}\n","<div matDialogTitle fxLayout=\"row\" fxLayoutAlign=\"center center\">\r\n  <h2 fxLayoutAlign=\"center center\">{{forgottenPassword ? \"Mot de passe oublié\" : \"Connexion\"}}\r\n  </h2>\r\n</div>\r\n<form [formGroup]=\"loginForm\" (ngSubmit)=\"login()\" *ngIf=\"!forgottenPassword\">\r\n  <div fxLayout=\"row\" fxLayoutAlign=\"center center\">\r\n    <mat-form-field fxFlex=\"87\" appearance=\"outline\">\r\n      <mat-label>E-mail</mat-label>\r\n      <input matInput type=\"email\" placeholder=\"Ex: john.doe@gmail.com\" formControlName=\"email\" required />\r\n      <mat-error *ngIf=\"loginForm?.get('email')?.invalid\">E-mail obligatoire</mat-error>\r\n    </mat-form-field>\r\n  </div>\r\n  <div fxLayout=\"row\" fxLayoutAlign=\"center center\">\r\n    <mat-form-field fxFlex=\"87\" appearance=\"outline\">\r\n      <mat-label>Mot de passe</mat-label>\r\n      <input matInput type=\"password\" formControlName=\"password\" required />\r\n      <mat-error *ngIf=\"loginForm?.get('password')?.invalid\">Mot de passe obligatoire</mat-error>\r\n    </mat-form-field>\r\n  </div>\r\n  <div fxLayout=\"row\" fxLayoutAlign=\"center center\">\r\n    <p fxFlex=\"87\" fxLayoutAlign=\"center center\" *ngIf=\"loginErrorMessage\" class=\"errorMessage\">\r\n      {{ loginErrorMessage }}\r\n    </p>\r\n  </div>\r\n  <div fxLayout=\"row\" fxLayoutAlign=\"center center\">\r\n    <button fxFlex=\"40\" fxFlex.lt-sm=\"87\" mat-raised-button type=\"submit\">\r\n      Se connecter\r\n    </button>\r\n  </div>\r\n  <div fxLayout=\"row\" fxLayoutAlign=\"center center\" id=\"registerRow\">\r\n    <span class=\"link\" (click)=\"goToRegister()\">Pas encore inscrit ?</span>\r\n  </div>\r\n  <div fxLayout=\"row\" fxLayoutAlign=\"center center\">\r\n    <span class=\"link\" (click)=\"forgottenPassword = !forgottenPassword\">Mot de passe oublié?</span>\r\n  </div>\r\n</form>\r\n\r\n<form [formGroup]=\"resetPasswordForm\" (ngSubmit)=\"resetUserPassword()\" *ngIf=\"forgottenPassword\">\r\n  <div fxLayout=\"row\" fxLayoutAlign=\"center center\">\r\n    <mat-form-field fxFlex=\"87\" appearance=\"outline\">\r\n      <mat-label>E-mail</mat-label>\r\n      <input matInput type=\"text\" placeholder=\"Ex: john.doe@gmail.com\" formControlName=\"email\" required />\r\n      <mat-error *ngIf=\"resetPasswordForm?.get('email')?.invalid\">E-mail obligatoire</mat-error>\r\n    </mat-form-field>\r\n  </div>\r\n  <div fxLayout=\"row\" fxLayoutAlign=\"center center\">\r\n    <p *ngIf=\"resetPasswordErrorMessage\" class=\"errorMessage\">\r\n      {{ resetPasswordErrorMessage }}\r\n    </p>\r\n  </div>\r\n  <div fxLayout=\" wrap\" fxLayoutAlign=\"space-evenly center\">\r\n    <button fxFlex=\"40\" fxFlex.lt-sm=\"87\" fxFlexOrder.lt-sm=\"2\" fxFlexOrder.gt-xs=\"1\" mat-raised-button type=\"button\"\r\n      (click)=\"forgottenPassword = !forgottenPassword\">\r\n      Annuler\r\n    </button>\r\n    <button fxFlex=\"40\" fxFlex.lt-sm=\"87\" fxFlexOrder.lt-sm=\"1\" fxFlexOrder.gt-xs=\"2\" mat-raised-button type=\"submit\">\r\n      Envoyer l'email\r\n    </button>\r\n  </div>\r\n</form>","import { Component, OnInit } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { LoginModalComponent } from '@app/auth/components/login-modal/login-modal.component';\r\n\r\n@Component({\r\n  selector: 'app-login-page',\r\n  templateUrl: './login-page.component.html',\r\n  styleUrls: ['./login-page.component.scss'],\r\n})\r\nexport class LoginPageComponent implements OnInit {\r\n  constructor(private dialog: MatDialog) { }\r\n\r\n  ngOnInit(): void {\r\n    this.dialog.open(LoginModalComponent, {\r\n      disableClose: true,\r\n      width: '400px',\r\n      maxWidth: '90%',\r\n    });\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\nimport { Router } from '@angular/router';\nimport { AuthService } from '@app/auth/services/auth.service';\nimport { TemplateModalComponent } from '@app/shared/components/info-modal/template-modal.component';\nimport { FormUtils } from '@app/shared/utils/form-utils';\nimport { ValidatePassword } from '@app/shared/utils/validate-password';\nimport { FormErrorMessages } from '@models/formErrorMessages';\nimport { first, take, tap } from 'rxjs';\n\n@Component({\n  selector: 'app-register-page',\n  templateUrl: './register-page.component.html',\n  styleUrls: ['./register-page.component.scss'],\n})\nexport class RegisterPageComponent {\n  public errorMessage = '';\n  private regexPassword = new RegExp(\n    /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[^a-zA-Z0-9])(?=.*[!@#\\$%\\^&\\*]).{8,}$/g\n  );\n\n  public registerForm = this.fb.group(\n    {\n      email: [\n        '',\n        [\n          Validators.required,\n          Validators.pattern('[a-z0-9._%+-]+@[a-z0-9.-]+.[a-z]{2,3}$'),\n        ],\n      ],\n      password: [\n        '',\n        [Validators.required, Validators.pattern(this.regexPassword)],\n      ],\n      confirmPassword: [\n        '',\n        [Validators.required, Validators.pattern(this.regexPassword)],\n      ],\n      name: ['', [Validators.required]],\n      phone: ['', [Validators.required, Validators.pattern('^[0-9]{10}$')]],\n      address: this.fb.group({\n        street: ['', [Validators.required]],\n        zipCode: ['', [Validators.required, Validators.pattern('^[0-9]{5}$')]],\n        city: ['', [Validators.required]],\n      }),\n    },\n    {\n      validators: [\n        ValidatePassword.MatchPassword('password', 'confirmPassword'),\n      ],\n    }\n  );\n  public getErrorMessage = FormUtils.GetErrorMessage;\n  public errorMessages: FormErrorMessages = {\n    email: {\n      required: 'Email obligatoire',\n      pattern: 'Doit avoir le format email',\n    },\n    password: {\n      required: 'Mot de passe obligatoire',\n      pattern:\n        'Doit contenir 8 caractères, une lettre minuscule, une lettre majuscule, un chiffre et un de ces caractères spéciaux !@#$%^&*',\n    },\n    confirmPassword: {\n      required: 'Confirmation du mot de passe obligatoire',\n      pattern:\n        'Doit contenir 8 caractères, une lettre minuscule, une lettre majuscule, un chiffre et un de ces caractères spéciaux !@#$%^&*',\n      matchPassword: 'Doit être identique au mot de passe',\n    },\n    name: {\n      required: 'Nom de votre entreprise obligatoire',\n    },\n    phone: {\n      required: 'Numéro de téléphone obligatoire',\n      pattern: 'Doit contenir 10 chiffres',\n    },\n    street: {\n      required: 'Rue obligatoire',\n    },\n    zipCode: {\n      required: 'Code postal obligatoire',\n      pattern: 'Doit contenir 5 chiffres',\n    },\n    city: {\n      required: 'Ville obligatoire',\n    },\n  };\n  public registerValidationModal!: MatDialogRef<TemplateModalComponent>;\n\n  constructor(\n    private fb: FormBuilder,\n    private authService: AuthService,\n    private dialog: MatDialog,\n    public router: Router\n  ) {}\n\n  public onSubmit(): void {\n    if (this.registerForm.valid) {\n      this.authService\n        .register(this.registerForm.value)\n        .pipe(take(1))\n        .subscribe({\n          next: () => {\n            this.registerValidationModal = this.dialog.open(\n              TemplateModalComponent,\n              {\n                data: {\n                  title: 'Félicitations!',\n                  bodyText: `\n            <p>Votre compte a bien été créé.</p>\n            <p>Vous allez recevoir un email, veuillez suivre le lien pour valider votre compte.</p>\n            <p>N'hésitez pas à nous contacter si vous rencontrez un problème.</p>\n            `,\n                },\n                disableClose: true,\n                width: '400px',\n                maxWidth: '90%',\n              }\n            );\n            this.registerValidationModal\n              .afterClosed()\n              .pipe(\n                first(),\n                tap(() => {\n                  this.authService.logout();\n                  setTimeout(() => {\n                    window.location.reload();\n                  }, 1000);\n                })\n              )\n              .subscribe();\n          },\n          error: (error) => {\n            if (error.code === 'auth/email-already-in-use') {\n              this.errorMessage =\n                'Il semblerait que cet e-mail est déjà utilisé, veuillez vous connecter.';\n            } else {\n              window.alert(\n                \"Une erreur s'est produit, veuillez réessayer plus tard.\" +\n                  error.message\n              );\n            }\n          },\n        });\n    }\n  }\n}\n","<div fxLayout=\"row\" fxLayoutAlign=\"center center\">\r\n    <h2>Formulaire d'inscription</h2>\r\n</div>\r\n<div fxLayout=\"row wrap\" fxLayoutAlign=\"center\">\r\n    <div id=\"welcomeContainer\" fxFlex=\"40\" fxFlex.lt-md=\"87\" fxLayout=\"column\" fxLayoutAlign=\"space-around center\">\r\n        <p class=\"welcomeText\">Bienvenu sur le site de gestion de commandes de la boulangerie M, réservé uniquement aux\r\n            professionnels.</p>\r\n        <img fxHide fxShow.gt-sm alt=\"logo boulangerie-m\" src=\"../assets/images/logo-header.png\"\r\n            class=\"logoRegisterForm\" />\r\n        <p class=\"welcomeText\">Veuillez vous inscrire afin d'accéder au formulaire, à vos anciennes commandes, repasser\r\n            les mêmes commandes et bien plus.</p>\r\n    </div>\r\n    <form [formGroup]=\"registerForm\" (ngSubmit)=\"onSubmit()\" fxLayout=\"column\" fxLayoutAlign=\"center\" fxFlex=\"40\"\r\n        fxFlex.lt-sm=\"87\">\r\n        <div fxLayout=\"column\" fxLayoutAlign=\"center\">\r\n            <mat-form-field fxFlex=\"87\" appearance=\"outline\">\r\n                <mat-label>Email</mat-label>\r\n                <input matInput type=\"email\" placeholder=\"Ex: restaurant-du-port@gmail.com\" formControlName=\"email\"\r\n                    required />\r\n                <mat-error *ngIf=\"registerForm.get('email')?.invalid\">{{\r\n                    getErrorMessage(\"email\", registerForm, errorMessages)\r\n                    }}</mat-error>\r\n            </mat-form-field>\r\n            <mat-form-field fxFlex=\"87\" appearance=\"outline\">\r\n                <mat-label>Mot de passe</mat-label>\r\n                <input matInput type=\"password\" formControlName=\"password\" required />\r\n                <mat-error *ngIf=\"registerForm.get('password')?.invalid\">{{\r\n                    getErrorMessage(\"password\", registerForm, errorMessages)\r\n                    }}</mat-error>\r\n            </mat-form-field>\r\n            <mat-form-field fxFlex=\"87\" appearance=\"outline\">\r\n                <mat-label>Confirmer le mot de passe</mat-label>\r\n                <input matInput type=\"password\" formControlName=\"confirmPassword\" required />\r\n                <mat-error *ngIf=\"registerForm.get('confirmPassword')?.invalid\">{{\r\n                    getErrorMessage(\"confirmPassword\", registerForm, errorMessages)\r\n                    }}</mat-error>\r\n            </mat-form-field>\r\n\r\n            <div fxLayout=\"row\" fxLayoutAlign=\"center center\">\r\n                <mat-divider fxFlex=\"50\"></mat-divider>\r\n            </div>\r\n\r\n            <mat-form-field fxFlex=\"87\" appearance=\"outline\">\r\n                <mat-label>Nom de votre entreprise</mat-label>\r\n                <input matInput type=\"text\" placeholder=\"Ex: Restaurant du port\" formControlName=\"name\" required />\r\n                <mat-error *ngIf=\"registerForm.get('name')?.invalid\">{{\r\n                    getErrorMessage(\"name\", registerForm, errorMessages)\r\n                    }}</mat-error>\r\n            </mat-form-field>\r\n            <mat-form-field fxFlex=\"87\" appearance=\"outline\">\r\n                <mat-label>Numéro de téléphone</mat-label>\r\n                <input matInput type=\"tel\" placeholder=\"Ex: 0546331122\" formControlName=\"phone\" required />\r\n                <mat-error *ngIf=\"registerForm.get('phone')?.invalid\">{{\r\n                    getErrorMessage(\"phone\", registerForm, errorMessages)\r\n                    }}</mat-error>\r\n            </mat-form-field>\r\n        </div>\r\n\r\n        <div fxLayout=\"row\" fxLayoutAlign=\"center center\">\r\n            <mat-divider fxFlex=\"50\"></mat-divider>\r\n        </div>\r\n\r\n        <div formGroupName=\"address\" fxLayout=\"column\" fxLayoutAlign=\"center\">\r\n            <mat-form-field fxFlex=\"87\" appearance=\"outline\">\r\n                <mat-label>Rue</mat-label>\r\n                <input matInput type=\"text\" placeholder=\"Ex: 2 rue du port\" formControlName=\"street\" required />\r\n                <mat-error *ngIf=\"registerForm.get('address')?.get('street')?.invalid\">{{\r\n                    getErrorMessage(\"street\", registerForm, errorMessages, \"address\")\r\n                    }}</mat-error>\r\n            </mat-form-field>\r\n            <mat-form-field fxFlex=\"40\" fxFlex.lt-sm=\"87\" appearance=\"outline\">\r\n                <mat-label>Code postal</mat-label>\r\n                <input matInput type=\"text\" placeholder=\"Ex: 17000\" formControlName=\"zipCode\" required />\r\n                <mat-error *ngIf=\"registerForm.get('address')?.get('zipCode')?.invalid\">{{\r\n                    getErrorMessage(\"zipCode\", registerForm, errorMessages, \"address\")\r\n                    }}</mat-error>\r\n            </mat-form-field>\r\n            <mat-form-field fxFlex=\"40\" fxFlex.lt-sm=\"87\" appearance=\"outline\">\r\n                <mat-label>Ville</mat-label>\r\n                <input matInput type=\"text\" placeholder=\"Ex: La Rochelle\" formControlName=\"city\" required />\r\n                <mat-error *ngIf=\"registerForm.get('address')?.get('city')?.invalid\">{{\r\n                    getErrorMessage(\"city\", registerForm, errorMessages, \"address\")\r\n                    }}</mat-error>\r\n            </mat-form-field>\r\n        </div>\r\n        <div *ngIf=\"errorMessage\" fxLayout=\"row\" fxLayoutAlign=\"center center\">\r\n            <p class=\"errorMessage\">Erreur : {{errorMessage}}</p>\r\n        </div>\r\n        <div fxLayout=\"row\" fxLayoutAlign=\"center center\">\r\n            <button id=\"submitRegistrationButton\" fxFlex=\"40\" fxFlex.lt-sm=\"87\" mat-raised-button type=\"submit\">\r\n                S'inscrire\r\n            </button>\r\n        </div>\r\n        <div fxLayout=\"row\" fxLayoutAlign=\"center center\">\r\n            <span class=\"link\" (click)=\"router.navigate(['/connexion'])\">Déjà inscrit?</span>\r\n        </div>\r\n    </form>\r\n</div>","import { Injectable } from '@angular/core';\r\nimport { CanActivate } from '@angular/router';\r\nimport { map, Observable } from 'rxjs';\r\n\r\nimport { AuthService } from './auth.service';\r\n\r\n\r\n@Injectable()\r\nexport class AdminGuard implements CanActivate {\r\n    constructor(private authService: AuthService) { }\r\n\r\n    canActivate(): Observable<boolean> {\r\n        return this.authService.isUserAdmin().pipe(map(isAuth => isAuth));\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { AngularFireAuth } from '@angular/fire/compat/auth';\r\nimport { AngularFirestore, AngularFirestoreCollection } from '@angular/fire/compat/firestore';\r\nimport { User } from '@models/user';\r\nimport firebase from 'firebase/compat/app';\r\nimport { from, map, Observable, of, switchMap } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class AuthService {\r\n  private userCollection: AngularFirestoreCollection<User>;\r\n  private isAdmin!: boolean;\r\n  constructor(public auth: AngularFireAuth, private firestore: AngularFirestore) {\r\n    this.userCollection = this.firestore.collection<User>('users');\r\n\r\n  }\r\n\r\n  public register(credentials: User): Observable<any> {\r\n    return from(\r\n      this.auth.createUserWithEmailAndPassword(credentials.email, credentials.password as string)\r\n        .then((result) => {\r\n          result.user?.sendEmailVerification();\r\n          return result.user;\r\n        })\r\n        .catch((error) => {\r\n          throw error;\r\n        })\r\n    ).pipe(\r\n      switchMap((user) => {\r\n        const newUser: User = {\r\n          firebaseUid: user!.uid,\r\n          name: credentials.name,\r\n          phone: credentials.phone,\r\n          address: credentials.address,\r\n          email: credentials.email,\r\n          isAdmin: false\r\n        }\r\n        return this.saveUserAtRegistration(newUser);\r\n      })\r\n    );\r\n  }\r\n\r\n  private saveUserAtRegistration(user: User): Observable<any> {\r\n    return from(this.userCollection.doc(user.firebaseUid).set(user));\r\n  }\r\n\r\n  public isUserAdmin(): Observable<boolean> {\r\n    if (this.isAdmin !== undefined) {\r\n      return of(this.isAdmin);\r\n    } else {\r\n      return this.auth.user.pipe(\r\n        switchMap(userFirebase => this.userCollection.doc(userFirebase?.uid).valueChanges()),\r\n        map(boulMUser => {\r\n          this.isAdmin = boulMUser?.isAdmin as boolean;\r\n          return boulMUser?.isAdmin as boolean\r\n        }));\r\n    }\r\n  }\r\n\r\n  public login(credentials: {\r\n    email: string;\r\n    password: string;\r\n  }): Observable<any> {\r\n    return from(\r\n      this.auth.signInWithEmailAndPassword(credentials.email, credentials.password)\r\n        .then(\r\n          (res) => {\r\n            return res;\r\n          },\r\n          (err) => {\r\n            throw err;\r\n          }\r\n        )\r\n    );\r\n  }\r\n\r\n  public logout(): void {\r\n    this.auth.signOut();\r\n  }\r\n\r\n  public isUserAuthenticated(): Observable<firebase.User | null> {\r\n    return this.auth.user;\r\n  }\r\n\r\n  public resetUserPassword(email: string): Observable<void> {\r\n    return from(this.auth.sendPasswordResetEmail(email)\r\n      .then((res) => {\r\n        return res;\r\n      },\r\n        (err) => {\r\n          throw err;\r\n        })\r\n    )\r\n  }\r\n\r\n  // public updateUserPassword(currentPassword: string, newPassword: string) {\r\n  //   const cpUser = firebase.auth().currentUser;\r\n  //   const credentials = firebase.auth.EmailAuthProvider.credential(\r\n  //     cpUser?.email as string, currentPassword);\r\n\r\n  //   return cpUser?.reauthenticateWithCredential(credentials).then(\r\n  //     res => {\r\n  //       console.log(\"relogin du user\", res)\r\n  //       // const reloggedUser = firebase.auth().currentUser;\r\n  //       cpUser?.updatePassword(newPassword).then(e => console.log(\"FINITO\", e))\r\n  //         .catch(err => console.log(\"erreur dans le update pwd\", err))\r\n  //     }\r\n  //   )\r\n  //     .catch(error => { throw error });\r\n  // }\r\n}\r\n","import { Component } from '@angular/core';\nimport { MatIconRegistry } from '@angular/material/icon';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { Router } from '@angular/router';\nimport packageInfo from 'package.json';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.scss'],\n})\nexport class FooterComponent {\n  public webSiteVersion = packageInfo.version;\n  constructor(\n    public router: Router,\n    iconRegistry: MatIconRegistry,\n    sanitizer: DomSanitizer\n  ) {\n    iconRegistry.addSvgIcon(\n      'facebook',\n      sanitizer.bypassSecurityTrustResourceUrl(\n        '../assets/logos/facebook-circular-logo.svg'\n      )\n    );\n  }\n}\n","<footer id=\"footer\" fxLayout=\"column\" fxLayout.gt-sm=\"row\" fxLayoutAlign=\"center center\"\r\n    fxLayoutAlign.gt-sm=\"space-evenly center\">\r\n    <div>\r\n        <p>\r\n            <!-- TODO: mettre un link vers google maps -->\r\n            Boulangerie M <br />\r\n            127 Avenue du Lieutenant-Colonel Bernier <br />\r\n            17000 La Rochelle\r\n        </p>\r\n    </div>\r\n    <div>\r\n        <p>\r\n            <mat-icon>phone</mat-icon>\r\n            <a class=\"textWithIcon footerLink\" href=\"tel:0546010972\"> 05 46 01 09 72 </a>\r\n        </p>\r\n        <p>\r\n            <mat-icon svgIcon=\"facebook\"></mat-icon>&nbsp;\r\n            <a class=\"textWithIcon footerLink\"\r\n                href=\"https://www.facebook.com/pages/category/Bakery/Boulangerie-M-437577199741453/\"\r\n                target=\"blank\">Notre page facebook</a>\r\n        </p>\r\n    </div>\r\n    <div>\r\n        <p (click)=\"router.navigate(['mentions-legales'])\">Mentions Légales</p>\r\n        <p>\r\n            Réalisé gracieusement par\r\n            <a class=\"footerLink\" href=\"https://www.linkedin.com/in/alexandre-guerin/\" target=\"blank\">Ithrandil</a> / v\r\n            {{webSiteVersion}}\r\n        </p>\r\n    </div>\r\n</footer>","import { Component, Input, OnChanges } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from '@app/auth/services/auth.service';\nimport { AdminMenuElement, MenuElement, UserMenuElement } from '@models/header';\nimport firebase from 'firebase/compat/app';\nimport { map, switchMap, take, tap } from 'rxjs';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss'],\n})\nexport class HeaderComponent implements OnChanges {\n  @Input() activatedRoute: string = '';\n  private isAdmin!: boolean;\n  public menuElements: MenuElement[] = [];\n\n  public isConnected!: firebase.User | null;\n\n  constructor(private authService: AuthService, public router: Router) {}\n\n  ngOnChanges(): void {\n    this.authService\n      .isUserAuthenticated()\n      .pipe(\n        tap((user) => (this.isConnected = user)),\n        switchMap(() => this.authService.isUserAdmin()),\n        take(1),\n        map((isAdmin) => {\n          this.isAdmin = isAdmin;\n        })\n      )\n      .subscribe({\n        error: () => {},\n        complete: () => this.createMenuElements(),\n      });\n  }\n\n  private createMenuElements() {\n    if (!this.isConnected) {\n      return;\n    } else {\n      if (this.isAdmin) {\n        this.menuElements = AdminMenuElement;\n      } else {\n        this.menuElements = UserMenuElement;\n      }\n    }\n  }\n\n  public logout(): void {\n    this.authService.logout();\n    window.location.reload();\n  }\n}\n","<mat-toolbar id=\"header\">\r\n    <nav fxLayout=\"row\" fxFlex=\"100\" fxHide.lt-md fxLayoutAlign=\"space-between center\">\r\n        <img (click)=\"router.navigate([''])\" alt=\"logo boulangerie-m\" src=\"../assets/images/logo-header.png\"\r\n            class=\"logo-header\" />\r\n        <ul *ngIf=\"isConnected && menuElements.length\" fxLayout=\"row\" fxFlex=\"100\" fxLayoutAlign=\"space-between center\">\r\n            <li *ngFor=\"let menuElem of menuElements\" class=\"link\" (click)=\"router.navigate([menuElem.path])\">\r\n                {{menuElem.wording}}\r\n            </li>\r\n            <li class=\"link\" id=\"logoutHeader\" fxLayoutAlign=\"center center\" (click)=\"logout()\">\r\n                <mat-icon>exit_to_app</mat-icon>\r\n                <span>Se déconnecter</span>\r\n            </li>\r\n        </ul>\r\n    </nav>\r\n    <!-- Mobile menu -------------------------------------------->\r\n    <nav fxLayout=\"row\" fxFlex=\"100\" fxHide.gt-sm fxLayoutAlign=\"center center\">\r\n        <img (click)=\"router.navigate([''])\" alt=\"logo boulangerie-m\" src=\"../assets/images/logo-header.png\"\r\n            class=\"logo-header\" />\r\n        <button *ngIf=\"isConnected && menuElements.length\" id=\"mobileMenuButton\" mat-icon-button\r\n            [matMenuTriggerFor]=\"menu\">\r\n            <mat-icon>more_vert</mat-icon>\r\n        </button>\r\n        <mat-menu #menu=\"matMenu\" xPosition=\"after\">\r\n            <div *ngFor=\"let menuElem of menuElements\">\r\n                <button mat-menu-item (click)=\"router.navigate([menuElem.path])\">\r\n                    <mat-icon>{{menuElem.icon}}</mat-icon>\r\n                    <span>{{menuElem.wording}}</span>\r\n                </button>\r\n            </div>\r\n            <mat-divider></mat-divider>\r\n            <button mat-menu-item (click)=\"logout()\">\r\n                <mat-icon>exit_to_app</mat-icon>\r\n                <span>Se déconnecter</span>\r\n            </button>\r\n        </mat-menu>\r\n    </nav>\r\n</mat-toolbar>","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-info-modal',\n  templateUrl: './info-modal.component.html',\n  styleUrls: ['./info-modal.component.scss'],\n})\nexport class InfoModalComponent {\n  public dontShowAgain = false;\n  constructor() {}\n}\n","<h2 mat-dialog-title>Votre formulaire évolue!</h2>\r\n<mat-dialog-content fxLayout=\"column\">\r\n  <div>\r\n    <mat-checkbox (change)=\"dontShowAgain = $event.checked\">Ne plus me montrer ce message\r\n    </mat-checkbox>\r\n  </div>\r\n  <p fxFlexLayout=\"row wrap\" fxLayoutAlign=\"flex-end center\">L'équipe M</p>\r\n</mat-dialog-content>\r\n<mat-dialog-actions fxLayout=\"row wrap\" fxLayoutAlign=\"center center\">\r\n  <button mat-button [mat-dialog-close]=\"true\">Fermer</button>\r\n</mat-dialog-actions>","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-mentions-legales',\n  templateUrl: './mentions-legales.component.html',\n  styleUrls: ['./mentions-legales.component.scss'],\n})\nexport class MentionsLegalesComponent {\n  constructor() {}\n}\n","<h2>Conditions Générales d’Utilisation</h2>\r\n<p>\r\n  Nous utilisons des liens de tracking Google. Nous stockons des cookies de\r\n  navigations ainsi que les données utilisateur nécessaires au fonctionnement du\r\n  site : informations de navigations, fonctionnalités annexes, et de\r\n  localisation. Nous sommes susceptibles d’afficher des pubs, et des pubs\r\n  ciblées par Google.\r\n</p>\r\n\r\n<h3>Article 1 : Objet</h3>\r\n<p>\r\n  Les présentes CGU ou Conditions Générales d’Utilisation encadrent\r\n  juridiquement l’utilisation des services du site boulangerie-m.web.app\r\n  (ci-après dénommé « le site »). Constituant le contrat entre la société Michon\r\n  et l’Utilisateur.\r\n</p>\r\n<h3>Article 2 : Mentions légales</h3>\r\n<p>\r\n  L’édition du site boulangerie-m.web.app est assurée par la société Michon,\r\n  Siret n°80886630500010, dont le siège social est localisé au 127 avenue du\r\n  Lieutenant Colonel Bernier, 17 000 La Rochelle. L’hébergeur du site\r\n  boulangerie-m.web.app est la société Google France, sise au 8 rue de Londres,\r\n  75009 Paris, France.\r\n</p>\r\n<h3>Article 3 : Accès au site</h3>\r\n<p>\r\n  Le site boulangerie-m.web.app permet d’accéder gratuitement aux services\r\n  suivants : – Affichage des articles – Mise en place du panier. Le site est\r\n  accessible gratuitement depuis n’importe où par tout utilisateur disposant\r\n  d’un accès à Internet (sauf restriction par des pares-feux nationaux). Tous\r\n  les frais nécessaires pour l’accès aux services (matériel informatique,\r\n  connexion, internet…) sont à la charge de l’Utilisateur. L’accès au portail\r\n  dédié aux administrateurs s’effectue à l’aide d’un identifiant et d’un mot de\r\n  passe. Pour des raisons de maintenance ou autres, l’accès au site peut être\r\n  interrompu ou suspendu par l’éditeur sans préavis ni justification.\r\n</p>\r\n<h3>Article 4 : Collecte des données</h3>\r\n<p>\r\n  Conformément à la loi n°78-17 du 6 janvier relative à l’informatique, aux\r\n  fichiers et aux libertés, la collecte et le traitement d’informations\r\n  personnelles s’effectuent dans le respect de la vie privée. La liste des\r\n  données collectées : Adresse postale – Numéro de téléphone – Contenu du panier\r\n  – Commandes finalisées et en cours. Suivant la loi Informatique et Libertés en\r\n  date du 6 janvier 1978, articles 39 et 40, l’Utilisateur dispose du droit\r\n  d’accéder, de rectifier, de supprimer et d’opposer ses données personnelles.\r\n  L’exercice de ce droit s’effectue par une demande à cette adresse mail :\r\n  boulangerie.m17@gmail.com (informations disponibles ici).\r\n</p>\r\n<h3>Article 5 : Propriété intellectuelle</h3>\r\n<p>\r\n  Les marques, logos ainsi que les contenus du site boulangerie-m.web.app\r\n  (illustrations graphiques, textes…) sont protégés par le Code de la propriété\r\n  intellectuelle et par le droit d’auteur. La reproduction et la copie des\r\n  contenus par l’Utilisateur requièrent une autorisation préalable du site. Dans\r\n  ce cas, toute utilisation à des usages commerciaux ou à des fins publicitaires\r\n  est proscrite.\r\n</p>\r\n<h3>Article 6 : Responsabilité</h3>\r\n<p>\r\n  Le site décline toute responsabilité concernant les éventuels attaques,\r\n  failles et fichiers informatiques pouvant infecter le matériel de\r\n  l’utilisateur après l’utilisation ou l’accès à ce site. Le site ne peut être\r\n  tenu pour responsable en cas de force majeure ou du fait imprévisible et\r\n  insurmontable d’un tiers. La garantie totale de la sécurité et la\r\n  confidentialité des données n’est pas assurée par le site. Cependant, le site\r\n  s’engage à mettre en œuvre toutes les méthodes requises pour le faire au\r\n  mieux.\r\n</p>\r\n<h3>Article 7 : Liens hypertextes</h3>\r\n<p>\r\n  Le site peut être constitué de liens hypertextes. En cliquant sur ces\r\n  derniers, l’Utilisateur sortira de la plateforme. Cette dernière n’a pas de\r\n  contrôle et ne peut pas être tenue responsable du contenu des pages web\r\n  relatives à ces liens. Des liens dit « affiliés » peuvent être présents sur le\r\n  site. Un lien affilié ou d’affiliation est une URL spécifique utilisée par un\r\n  affilié pour pointer vers une offre ou un produit d’un marchand. Il est\r\n  possible, à la suite d’un achat ou de la navigation par l’Utilisateur sur le\r\n  site d’affiliation, qu’une commission soit versée à destination de la société\r\n  éditrice.\r\n</p>\r\n<h3>Article 8 : Cookies</h3>\r\n<p>\r\n  Lors des visites sur le site, l’installation automatique d’un cookie sur le\r\n  logiciel de navigation de l’Utilisateur peut survenir. Les cookies\r\n  correspondent à de petits fichiers déposés temporairement sur le disque dur de\r\n  l’ordinateur de l’Utilisateur. Ces cookies sont nécessaires pour assurer\r\n  l’accessibilité et la navigation sur le site. Ces fichiers ne comportent pas\r\n  d’informations personnelles et ne peuvent pas être utilisés pour\r\n  l’identification d’une personne. L’information présente dans les cookies est\r\n  utilisée pour améliorer les performances de navigation sur le site\r\n  boulangerie-m.web.app. En naviguant sur le site, l’Utilisateur accepte les\r\n  cookies. Leur désactivation peut s’effectuer via les paramètres du logiciel de\r\n  navigation.\r\n</p>\r\n<h3>Article 9 : Durée du contrat</h3>\r\n<p>\r\n  Le présent contrat est valable pour une durée indéterminée. Le début de\r\n  l’utilisation des services du site marque l’application du contrat à l’égard\r\n  de l’Utilisateur.\r\n</p>\r\n<h3>Article 10 : Droit applicable et juridiction compétente</h3>\r\n<p>\r\n  Le présent contrat est soumis à la législation française. Dans un premier\r\n  temps, la résolution d’éventuels litiges entre les parties se fait à\r\n  l’amiable. En cas d’absence de résolution à l’amiable, le recours aux\r\n  tribunaux français compétents pour régler le contentieux s’impose.\r\n</p>\r\n\r\n<h3>Sources des ressources graphiques présentes sur le site</h3>\r\n<div>\r\n  Arrière plan:\r\n  <a class=\"bkgrdLink\" href=\"https://www.freepik.com/vectors/background\"\r\n    >Background vector created by freepik - www.freepik.com</a\r\n  >\r\n  <div>\r\n    Icônes:\r\n    <a href=\"https://www.flaticon.com/authors/freepik\" title=\"Freepik\"\r\n      >Freepik</a\r\n    >\r\n    from\r\n    <a href=\"https://www.flaticon.com/\" title=\"Flaticon\"> www.flaticon.com</a>\r\n  </div>\r\n</div>\r\n","export interface MenuElement {\r\n    wording: string;\r\n    path: string;\r\n    icon: string;\r\n}\r\n\r\nexport const AdminMenuElement: MenuElement[] = [\r\n    { wording: \"Commandes\", path: \"admin/liste-commandes\", icon: \"list\" },\r\n    { wording: \"Production\", path: \"admin/recap-production\", icon: \"supervisor_account\" },\r\n    { wording: \"Produits\", path: \"admin/produits\", icon: \"fastfood\" },\r\n    { wording: \"Jours fermés\", path: \"admin/gestion-fermeture\", icon: \"event_busy\" },\r\n    { wording: \"Récap mensuel\", path: \"admin/recap-global-mensuel\", icon: \"checklist_rtl\" },\r\n\r\n];\r\n\r\nexport const UserMenuElement: MenuElement[] = [\r\n    { wording: \"Formulaire\", path: \"/\", icon: \"shopping_basket\" },\r\n    { wording: \"Mes infos\", path: \"compte/infos\", icon: \"account_circle\" },\r\n    { wording: \"Mes commandes\", path: \"compte/mes-commandes\", icon: \"list\" },\r\n    // { wording: \"Récap du mois dernier\", path: \"compte/recap\", icon: \"checklist_rtl\" },\r\n];","export interface Product {\r\n  productId: string;\r\n  name: string;\r\n  description: string;\r\n  unit: ProductUnit;\r\n  price: number;\r\n  available: boolean;\r\n  shortDelivery: boolean;\r\n  category: ProductCategory;\r\n  isSliceable: boolean;\r\n  isBio: boolean;\r\n}\r\n\r\nexport enum ProductUnit {\r\n  KG = 'KILO',\r\n  UNIT = 'UNIT',\r\n}\r\n\r\nexport enum ProductUnitWording {\r\n  KG = 'kilo',\r\n  UNIT = 'unité',\r\n}\r\n\r\nexport enum ProductCategory {\r\n  BAGUETTE = 'BAGUETTE',\r\n  SANDWICH = 'SANDWICH',\r\n  INDIVIDUEL = 'INDIVIDUEL',\r\n  COUPE = 'COUPE',\r\n  PIECE = 'PIECE',\r\n  VIENNOISERIE = 'VIENNOISERIE',\r\n  MIE = 'MIE',\r\n  GATEAU = 'GATEAU',\r\n  PATE = 'PATE',\r\n  SALE = 'SALE',\r\n}\r\n\r\nexport enum ProductCategoryWording {\r\n  BAGUETTE = 'Baguettes',\r\n  SANDWICH = 'Pains sandwichs',\r\n  INDIVIDUEL = 'Pains individuels',\r\n  COUPE = 'Pains à la coupe',\r\n  PIECE = 'Pains à la pièce',\r\n  VIENNOISERIE = 'Viennoiseries',\r\n  MIE = 'Pains de mie / Buns',\r\n  GATEAU = 'Gâteaux de voyage',\r\n  PATE = 'Pâtes',\r\n  SALE = 'Salés'\r\n}\r\n\r\n// FIXME: FAIRE DES BUILDER POUR LE WORDING CATEG ET UNIT COUCHES MVC car là duplication à mort\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { OrderFormComponent } from './pages/order-form/order-form.component';\r\n\r\nconst routes: Routes = [{ path: '', component: OrderFormComponent }];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class OrderRoutingModule {}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { DateAdapter, MAT_DATE_LOCALE, MatNativeDateModule } from '@angular/material/core';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatDividerModule } from '@angular/material/divider';\r\nimport { MatExpansionModule } from '@angular/material/expansion';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { NgxMaterialTimepickerModule } from 'ngx-material-timepicker';\r\n\r\nimport { OrderRoutingModule } from './order-routing.module';\r\nimport { OrderFormComponent } from './pages/order-form/order-form.component';\r\nimport { MondayStartWeekDateAdapter } from './services/mondayStartWeekDateAdapter.service';\r\nimport { OrderSummaryPipe } from './services/order-summary.pipe';\r\nimport { OrderService } from './services/order.service';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    OrderFormComponent,\r\n    OrderSummaryPipe,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    OrderRoutingModule,\r\n    MatFormFieldModule,\r\n    ReactiveFormsModule,\r\n    MatInputModule,\r\n    MatCheckboxModule,\r\n    // TODO: chercher pourquoi je ne peux pas enlever certains imports de modules ici et ds un autre\r\n    FlexLayoutModule,\r\n    MatButtonModule,\r\n    MatCardModule,\r\n    MatExpansionModule,\r\n    MatDatepickerModule,\r\n    MatNativeDateModule,\r\n    MatDividerModule,\r\n    MatProgressSpinnerModule,\r\n    MatDialogModule,\r\n    NgxMaterialTimepickerModule,\r\n  ],\r\n  providers: [\r\n    OrderService,\r\n    { provide: MAT_DATE_LOCALE, useValue: 'fr-FR' },\r\n    { provide: DateAdapter, useClass: MondayStartWeekDateAdapter },\r\n  ],\r\n  exports: [OrderRoutingModule],\r\n})\r\nexport class OrderModule { }\r\n","import { Component, OnDestroy } from '@angular/core';\r\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { OpeningDaysService } from '@app/admin/services/opening-days.service';\r\nimport { TemplateModalComponent } from '@app/shared/components/info-modal/template-modal.component';\r\nimport { DateUtils } from '@app/shared/utils/date.utils';\r\nimport { FormUtils } from '@app/shared/utils/form-utils';\r\nimport { UserService } from '@app/user/services/user.service';\r\nimport { ClosingDay } from '@models/closingDay';\r\nimport { FormErrorMessages } from '@models/formErrorMessages';\r\nimport { Order, OrderProduct, OrderSummary } from '@models/order';\r\nimport { Product, ProductCategory, ProductCategoryWording, ProductUnit, ProductUnitWording } from '@models/product';\r\nimport { combineLatest, Subject } from 'rxjs';\r\nimport { switchMap, take, takeUntil, tap } from 'rxjs/operators';\r\n\r\nimport { OrderService } from './../../services/order.service';\r\n\r\n@Component({\r\n  selector: 'app-order-form',\r\n  templateUrl: './order-form.component.html',\r\n  styleUrls: ['./order-form.component.scss'],\r\n})\r\nexport class OrderFormComponent implements OnDestroy {\r\n  public orderSummary: OrderSummary = {\r\n    products: [],\r\n    sliced: [],\r\n    comments: [],\r\n  };\r\n  public customMessage: string = \"\";\r\n  public closingDays: ClosingDay[] = [];\r\n  public PRODUCTCATEGORY = ProductCategory;\r\n  public PRODUCTCATEGORYWORDING = Object.entries(ProductCategoryWording);\r\n  public PRODUCTUNIT = ProductUnit;\r\n  public PRODUCTUNITWORDING = ProductUnitWording;\r\n  public tomorrow = new Date();\r\n  public minimalDay = new Date();\r\n  public filterDaysAfterToday = DateUtils.FilterDaysAfterToday;\r\n  public orderDays = DateUtils.OrderDays;\r\n  public IsItOpenToday = DateUtils.IsItOpenToday;\r\n  public setMinimalDay = DateUtils.SetMinimalDay;\r\n  public validatedModal!: MatDialogRef<TemplateModalComponent>;\r\n  public selectDeliveryTime = false;\r\n  private unsubscribe$ = new Subject<void>();\r\n  public productList: Product[] = [];\r\n  public itemFormGroup: FormGroup;\r\n  public sliceFormGroup: FormGroup;\r\n  public commentFormGroup: FormGroup;\r\n  public orderForm = this.fb.group({\r\n    deliveryDate: [null, [Validators.required]],\r\n    deliveryTime: [null],\r\n    orderDate: [new Date(Date.now()), [Validators.required]],\r\n    orderComment: [''],\r\n    totalPrice: [0, [Validators.required]],\r\n  });\r\n  public getErrorMessage = FormUtils.GetErrorMessage;\r\n  public errorMessages: FormErrorMessages = {\r\n    deliveryDate: {\r\n      required: 'Date de livraison obligatoire',\r\n      matDatepickerMin: 'Date incorrecte',\r\n    },\r\n  };\r\n\r\n  constructor(\r\n    private orderService: OrderService,\r\n    private openingDaysService: OpeningDaysService,\r\n    private fb: FormBuilder,\r\n    private dialog: MatDialog,\r\n    private userService: UserService\r\n  ) {\r\n    this.tomorrow.setDate(new Date().getDate() + 1);\r\n\r\n    this.itemFormGroup = this.fb.group({\r\n      default: [''],\r\n    });\r\n    this.sliceFormGroup = this.fb.group({\r\n      default: [''],\r\n    });\r\n    this.commentFormGroup = this.fb.group({\r\n      default: [''],\r\n    });\r\n    this.orderService\r\n      .getAllAvailableItems()\r\n      .pipe(\r\n        take(1),\r\n        tap((resProdList) => {\r\n          this.productList = resProdList.sort((a, b) =>\r\n            a.name < b.name ? -1 : a.name > b.name ? 1 : 0\r\n          );\r\n          this.itemFormGroup.removeControl('default');\r\n          this.sliceFormGroup.removeControl('default');\r\n          this.commentFormGroup.removeControl('default');\r\n          resProdList.forEach((product) => {\r\n            this.itemFormGroup?.addControl(product.name, new FormControl(null));\r\n            this.sliceFormGroup?.addControl(\r\n              product.name,\r\n              new FormControl(null)\r\n            );\r\n            this.commentFormGroup?.addControl(\r\n              product.name,\r\n              new FormControl(null)\r\n            );\r\n          });\r\n        })\r\n      )\r\n      .subscribe();\r\n\r\n    combineLatest([\r\n      this.itemFormGroup.valueChanges,\r\n      this.sliceFormGroup.valueChanges,\r\n      this.commentFormGroup.valueChanges,\r\n    ])\r\n      .pipe(\r\n        takeUntil(this.unsubscribe$),\r\n        tap(([itemFormData, sliceFormData, commentFormData]) => {\r\n          this.orderSummary = {\r\n            products: Object.entries(itemFormData),\r\n            sliced: Object.entries(sliceFormData),\r\n            comments: Object.entries(commentFormData),\r\n          };\r\n          this.calcTotalPrice(itemFormData);\r\n        })\r\n      )\r\n      .subscribe();\r\n\r\n    this.openingDaysService\r\n      .getAllClosingDays()\r\n      .pipe(take(1))\r\n      .subscribe((res) => {\r\n        this.closingDays = res;\r\n        this.closingDays = this.orderDays(this.closingDays);\r\n        this.closingDays = this.filterDaysAfterToday(this.closingDays);\r\n        this.minimalDay = this.setMinimalDay(this.minimalDay, this.closingDays);\r\n      });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.unsubscribe$.next();\r\n    this.unsubscribe$.unsubscribe();\r\n  }\r\n\r\n  private calcTotalPrice(itemFormData: { [key: string]: number }): void {\r\n    let totalPrice = 0;\r\n    for (const [itemName, quantity] of Object.entries(itemFormData) as [\r\n      string,\r\n      number\r\n    ][]) {\r\n      if (quantity) {\r\n        totalPrice +=\r\n          quantity *\r\n          (this.productList.find((el) => el.name === itemName) as Product)\r\n            .price;\r\n      }\r\n      this.orderForm.get('totalPrice')?.setValue(totalPrice);\r\n    }\r\n  }\r\n\r\n  public specificDeliveryTime(checked: boolean): void {\r\n    this.selectDeliveryTime = checked;\r\n    if (this.selectDeliveryTime) {\r\n      this.orderForm.get('deliveryTime')?.enable();\r\n    } else {\r\n      this.orderForm.get('deliveryTime')?.reset();\r\n      this.orderForm.get('deliveryTime')?.disable();\r\n    }\r\n  }\r\n\r\n  public onSubmit(): void {\r\n    this.orderForm.get('orderDate')?.setValue(new Date(Date.now()));\r\n    const orderList: OrderProduct[] = [];\r\n    for (const [itemName, quantity] of Object.entries(\r\n      this.itemFormGroup.value\r\n    ) as [string, number][]) {\r\n      if (quantity) {\r\n        orderList.push({\r\n          product: itemName,\r\n          quantity,\r\n          unit: (this.productList.find((el) => el.name === itemName) as Product)\r\n            .unit,\r\n        });\r\n      }\r\n    }\r\n    for (const [itemName, isSliced] of Object.entries(\r\n      this.sliceFormGroup.value\r\n    ) as [string, boolean][]) {\r\n      if (isSliced) {\r\n        const indexItem = orderList.findIndex((el) => el?.product === itemName);\r\n        if (indexItem >= 0) {\r\n          orderList[indexItem].isSliced = true;\r\n        }\r\n      }\r\n    }\r\n    for (const [itemName, comment] of Object.entries(\r\n      this.commentFormGroup.value\r\n    ) as [string, string][]) {\r\n      if (comment && comment.length > 0) {\r\n        const indexItem = orderList.findIndex((el) => el?.product === itemName);\r\n        if (indexItem >= 0) {\r\n          orderList[indexItem].comment = comment;\r\n        }\r\n      }\r\n    }\r\n    if (this.orderForm.valid && orderList.length > 0) {\r\n      const finalOrder = {\r\n        ...this.orderForm.value,\r\n        order: orderList,\r\n      };\r\n      this.userService.getUserInfos().pipe(\r\n        take(1),\r\n        switchMap(userInfos => {\r\n          let finalOrderWithUserInfos: Order = {\r\n            ...finalOrder,\r\n            name: userInfos.name,\r\n            phone: userInfos.phone,\r\n            address: userInfos.address,\r\n            firebaseUid: userInfos.firebaseUid\r\n          }\r\n          if (userInfos.hasDifferentDeliveryAddress && userInfos.deliveryAddress) {\r\n            finalOrderWithUserInfos = {\r\n              ...finalOrderWithUserInfos,\r\n              hasDifferentDeliveryAddress: userInfos.hasDifferentDeliveryAddress,\r\n              deliveryAddress: userInfos.deliveryAddress\r\n            };\r\n          }\r\n          return this.orderService.addOrder(finalOrderWithUserInfos)\r\n        })\r\n      ).subscribe({\r\n        next: () => {\r\n          this.validatedModal = this.dialog.open(TemplateModalComponent, {\r\n            data: {\r\n              title: \"Votre commande a été validée.\",\r\n              bodyText: `\r\n              <p>La boulangerie M vous remercie de votre commande.</p>\r\n              <p>En espérant vous revoir très prochainement et que votre commande vous satisfera pleinement.</p>\r\n              `,\r\n              buttonAction: () => window.location.reload()\r\n            },\r\n            disableClose: true,\r\n            width: '400px',\r\n            maxWidth: '90%',\r\n          });\r\n        },\r\n        error: (err) => {\r\n          this.validatedModal = this.dialog.open(TemplateModalComponent, {\r\n            data: {\r\n              title: \"Oups\",\r\n              bodyText: `\r\n            <p>Une erreur a eu lieu la confirmation de votre commande, veuillez réessayer plus tard ou contacter la boulangerie directement. ${err}</p>\r\n            `\r\n            },\r\n            disableClose: true,\r\n            width: '400px',\r\n            maxWidth: '90%',\r\n          });\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  public filterProductByCategory(category: ProductCategory): Product[] {\r\n    return this.productList.filter((prod) => prod.category === category);\r\n  }\r\n\r\n  public findProductCategoryWording(category: ProductCategory): string {\r\n    return (this.PRODUCTCATEGORYWORDING.find(el => el[0] === category))![1];\r\n  }\r\n\r\n  public isItOpenToday = (d: Date | null): boolean => {\r\n    return this.IsItOpenToday(d, this.closingDays);\r\n  };\r\n}\r\n","<form [formGroup]=\"orderForm\" (ngSubmit)=\"onSubmit()\">\r\n  <h1>Commande professionnelle</h1>\r\n  <p id=\"delayMessage\">Compte tenu de nos méthodes de production, toute commande doit être passée\r\n    <span>l'avant-veille</span> du jour\r\n    de livraison (jours ouvrés uniquement).<br>\r\n    Exemple : pour une livraison le mercredi, dernier délai le lundi à 18h.\r\n  </p>\r\n  <div fxLayout=\"row\" fxLayoutAlign=\"center center\" fxLayoutAlign.gt-sm=\"flex-start center\">\r\n    <mat-form-field fxFlex=\"40\" fxFlex.lt-sm=\"100\" appearance=\"outline\" (click)=\"picker.open()\">\r\n      <mat-label>Date de livraison</mat-label>\r\n      <input matInput required formControlName=\"deliveryDate\" [min]=\"minimalDay\" [matDatepicker]=\"picker\"\r\n        [matDatepickerFilter]=\"isItOpenToday\" readonly />\r\n      <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n      <mat-datepicker #picker touchUi></mat-datepicker>\r\n      <mat-error *ngIf=\"orderForm.get('deliveryDate')?.invalid\">{{\r\n        getErrorMessage(\"deliveryDate\", orderForm, errorMessages)\r\n        }}</mat-error>\r\n    </mat-form-field>\r\n  </div>\r\n  <div fxLayout=\"row\" id=\"checkboxRow\" fxLayoutAlign=\"center center\" fxLayoutAlign.gt-sm=\"flex-start center\">\r\n    <mat-checkbox (change)=\"specificDeliveryTime($event.checked)\" [checked]=\"selectDeliveryTime\">\r\n      Besoin d'une heure de livraison précise?\r\n    </mat-checkbox>\r\n  </div>\r\n  <div fxLayout=\"row\" fxLayoutAlign=\"center center\" fxLayoutAlign.gt-sm=\"flex-start center\">\r\n    <mat-form-field *ngIf=\"selectDeliveryTime\" fxFlex=\"40\" fxFlex.lt-sm=\"100\" appearance=\"outline\">\r\n      <mat-label>Heure de livraison</mat-label>\r\n      <input [ngxTimepicker]=\"$any(datePicker)\" min=\"06:00\" max=\"12:00\" [format]=\"24\" readonly matInput\r\n        formControlName=\"deliveryTime\" />\r\n      <ngx-material-timepicker #datePicker></ngx-material-timepicker>\r\n    </mat-form-field>\r\n  </div>\r\n  <p id=\"deliveryMessage\">\r\n    Votre livraison vous sera livrée\r\n    <span *ngIf=\"orderForm.get('deliveryDate')?.value\">\r\n      le\r\n      {{ orderForm.get(\"deliveryDate\")?.value | date: \"fullDate\" }}\r\n\r\n    </span>{{\r\n    this.orderForm.get(\"deliveryTime\")?.value\r\n    ? \"à \" + this.orderForm.get(\"deliveryTime\")?.value\r\n    : \"entre 6 heures et midi.\"\r\n    }}\r\n  </p>\r\n  <p id=\"customMessage\" *ngIf=\"customMessage\">{{customMessage}}</p>\r\n  <mat-divider class=\"dividerOrderForm\"></mat-divider>\r\n  <h2>Produits</h2>\r\n  <div *ngIf=\"!productList.length; else productContainer\" fxLayoutAlign=\"center center\">\r\n    <mat-spinner></mat-spinner>\r\n  </div>\r\n  <ng-template #productContainer>\r\n    <mat-expansion-panel class=\"productCategory\" *ngFor=\"let category of PRODUCTCATEGORY | keyvalue\">\r\n      <mat-expansion-panel-header class=\"categoryExpansionHeader\">\r\n        <mat-panel-title>{{ findProductCategoryWording(category.value) }}</mat-panel-title>\r\n      </mat-expansion-panel-header>\r\n      <div fxLayout=\"column\" fxLayoutAlign=\"center center\" fxLayout.gt-sm=\"row wrap\"\r\n        fxLayoutAlign.gt-sm=\"space-evenly center\">\r\n        <mat-card fxFlex.gt-sm=\"48\" *ngFor=\"let product of filterProductByCategory(category.value)\">\r\n          <mat-expansion-panel class=\"productExpansion\">\r\n            <mat-expansion-panel-header class=\"productExpansionHeader\">\r\n              <mat-panel-title [ngClass]=\"product.isBio ? 'is-bio' : ''\">{{ product.name }}<span></span>\r\n              </mat-panel-title>\r\n            </mat-expansion-panel-header>\r\n            <div fxFlex=\"column\" class=\"productExpansionBody\">\r\n              <p>{{ product.description }}</p>\r\n              <mat-form-field appearance=\"outline\" [formGroup]=\"commentFormGroup\">\r\n                <mat-label>Commentaire</mat-label>\r\n                <textarea matInput [formControlName]=\"product.name\"\r\n                  placeholder=\"Ex: boules tranchées, forme des pains, ...\"></textarea>\r\n              </mat-form-field>\r\n              <div [formGroup]=\"sliceFormGroup\" *ngIf=\"product.isSliceable\">\r\n                <mat-checkbox class=\"slicedCheckbox\" [formControlName]=\"product.name\">Tranché\r\n                </mat-checkbox>\r\n              </div>\r\n            </div>\r\n          </mat-expansion-panel>\r\n          <mat-card-content class=\"cardPriceQuantity m-card-content\" fxLayout=\"row\"\r\n            fxLayoutAlign=\"space-between baseline\">\r\n            <div>\r\n              Prix: {{ product.price.toFixed(2) }} € H.T. / {{ product.unit === PRODUCTUNIT.KG ? PRODUCTUNITWORDING.KG :\r\n              PRODUCTUNITWORDING.UNIT\r\n              }}\r\n            </div>\r\n            <mat-form-field [formGroup]=\"itemFormGroup\" class=\"quantityInput\" appearance=\"outline\">\r\n              <mat-label>Quantité</mat-label>\r\n              <input matInput type=\"number\" min=\"0\" [formControlName]=\"product.name\" />\r\n            </mat-form-field>\r\n          </mat-card-content>\r\n        </mat-card>\r\n      </div>\r\n    </mat-expansion-panel>\r\n  </ng-template>\r\n  <mat-divider class=\"dividerOrderForm\"></mat-divider>\r\n  <div fxLayout=\"row\" fxLayoutAlign=\"center center\" fxLayoutAlign.gt-sm=\"flex-start center\">\r\n    <mat-form-field fxFlex=\"40\" fxFlex.lt-sm=\"100\" appearance=\"outline\">\r\n      <mat-label>Commentaires</mat-label>\r\n      <textarea matInput formControlName=\"orderComment\"\r\n        placeholder=\"Ex: Déposer la livraison en arrière cuisine, ...\"></textarea>\r\n    </mat-form-field>\r\n  </div>\r\n  <div fxLayout=\"column\" fxLayoutAlign=\"center center\" *ngIf=\"orderForm.get('totalPrice')?.value > 0\">\r\n    <h2>Résumé de la commande :</h2>\r\n    <div>\r\n      <p *ngFor=\"let item of orderSummary | summaryPipe\" [innerHtml]=\"item\"></p>\r\n    </div>\r\n    <h3 *ngIf=\"orderForm.get('orderComment')?.value\" class=\"orderCommentSummaryTitle\">\r\n      Commentaire de la commande :\r\n    </h3>\r\n    <pre *ngIf=\"orderForm.get('orderComment')?.value\">\r\n      {{ orderForm.get(\"orderComment\")?.value }}\r\n    </pre>\r\n    <h2>Prix total :</h2>\r\n    <h3>\r\n      {{ orderForm.get(\"totalPrice\")?.value.toFixed(2) }} € H.T.\r\n    </h3>\r\n  </div>\r\n  <div fxLayout=\"row wrap\" fxLayoutAlign=\"center center\" class=\"buttonRow\">\r\n    <button fxFlex=\"40\" fxFlex.lt-sm=\"87\" mat-raised-button type=\"submit\">\r\n      Commander\r\n    </button>\r\n  </div>\r\n</form>","import { Injectable } from '@angular/core';\r\nimport { NativeDateAdapter } from '@angular/material/core';\r\n\r\n@Injectable()\r\nexport class MondayStartWeekDateAdapter extends NativeDateAdapter {\r\n  getFirstDayOfWeek(): number {\r\n    return 1;\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { OrderSummary } from '@models/order';\r\n\r\n@Pipe({ name: 'summaryPipe' })\r\nexport class OrderSummaryPipe implements PipeTransform {\r\n  transform(obj: OrderSummary): string[] {\r\n    const tmpProducts = obj.products.filter(\r\n      (el) => el[1] && el[1] !== null && el[1] > 0\r\n    );\r\n    const tmpSliced = obj.sliced.filter((el) => el[1] !== null);\r\n    const tmpComments = obj.comments.filter(\r\n      (el) => el[1] && el[1] !== null && el[1].length > 0\r\n    );\r\n    const res: string[] = [];\r\n    tmpProducts.forEach((prodEl) => {\r\n      res.push(`- ${prodEl[0]} : ${prodEl[1]}`);\r\n      const sliced = tmpSliced.find((sliceEl) => sliceEl[0] === prodEl[0]);\r\n      if (sliced && sliced[1]) {\r\n        res[res.length - 1] = res[res.length - 1].concat(` - Tranché`);\r\n      }\r\n      const comment = tmpComments.find(\r\n        (commentEl) => commentEl[0] === prodEl[0]\r\n      );\r\n      if (comment) {\r\n        res[res.length - 1] = res[res.length - 1].concat(\r\n          `<br>&nbsp;&nbsp;Commentaire : ${comment[1]}`\r\n        );\r\n      }\r\n    });\r\n    return res;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { AngularFirestore, AngularFirestoreCollection, DocumentReference } from '@angular/fire/compat/firestore';\r\nimport { Order } from '@models/order';\r\nimport { Product } from '@models/product';\r\nimport { from, Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class OrderService {\r\n  private ordersCollection: AngularFirestoreCollection<Order>;\r\n\r\n  constructor(private firestore: AngularFirestore) {\r\n    this.ordersCollection = firestore.collection<Order>('orders');\r\n  }\r\n\r\n\r\n  public getAllAvailableItems(): Observable<Product[]> {\r\n    return this.firestore\r\n      .collection<Product>('products', (ref) =>\r\n        ref.where('available', '==', true)\r\n      )\r\n      .valueChanges();\r\n  }\r\n\r\n  public addOrder(order: Order): Observable<DocumentReference> {\r\n    return from(this.ordersCollection.add(order));\r\n  }\r\n}\r\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-modal',\n  templateUrl: './template-modal.component.html',\n  styleUrls: ['./template-modal.component.scss'],\n})\nexport class TemplateModalComponent {\n  constructor(\n    private dialogRef: MatDialogRef<TemplateModalComponent>,\n    @Inject(MAT_DIALOG_DATA)\n    public data: {\n      title: string;\n      bodyText: string;\n      buttonText?: string;\n      buttonAction?: Function;\n      extraCloseButton?: boolean;\n    }\n  ) {}\n\n  public buttonText: string = this.data.buttonText\n    ? this.data.buttonText\n    : 'Fermer';\n  public extraCloseButton: boolean = this.data.extraCloseButton\n    ? this.data.extraCloseButton\n    : false;\n\n  public buttonAction() {\n    if (this.data.buttonAction) {\n      this.data.buttonAction();\n      setTimeout(() => {\n        this.dialogRef.close();\n      }, 1000);\n    } else {\n      this.dialogRef.close();\n    }\n  }\n}\n","<h2 mat-dialog-title>{{data.title}}</h2>\r\n<mat-dialog-content fxLayout=\"column\">\r\n  <div fxFlexLayout=\"row wrap\" [innerHtml]=\"data.bodyText\">\r\n  </div>\r\n  <p fxFlexLayout=\"row\" fxLayoutAlign=\"flex-end center\">L'équipe M</p>\r\n</mat-dialog-content>\r\n<mat-dialog-actions fxLayout=\"row wrap\" fxLayoutAlign=\"space-around center\">\r\n  <button fxFlex=\"100\" mat-button *ngIf=\"extraCloseButton\" [mat-dialog-close]=\"true\">Fermer</button>\r\n  <button fxFlex=\"100\" mat-button (click)=\"buttonAction()\">{{buttonText}}</button>\r\n</mat-dialog-actions>","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatDividerModule } from '@angular/material/divider';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\n\r\nimport { TemplateModalComponent } from './components/info-modal/template-modal.component';\r\n\r\n@NgModule({\r\n    declarations: [\r\n        TemplateModalComponent\r\n    ],\r\n    imports: [\r\n        CommonModule,\r\n        FlexLayoutModule,\r\n        MatDialogModule,\r\n        MatButtonModule,\r\n        MatProgressSpinnerModule,\r\n        MatDividerModule\r\n    ],\r\n    exports: [\r\n        TemplateModalComponent,\r\n        CommonModule,\r\n        FlexLayoutModule,\r\n        MatDialogModule,\r\n        MatButtonModule,\r\n        MatProgressSpinnerModule,\r\n        MatDividerModule\r\n    ]\r\n})\r\nexport class SharedModule { }\r\n","import { ClosingDay, ClosingDayForHumans } from '@models/closingDay';\r\nimport { getHours } from 'date-fns';\r\n\r\n// TODO: refacto toutes avec date fns tant qu'à faire vu que j'utilise la lib pour le formattage en français\r\n\r\nexport class DateUtils {\r\n    static OrderDays(\r\n        array: ClosingDay[]\r\n    ): ClosingDay[] {\r\n        return array\r\n            .sort((el1, el2) => {\r\n                if (el1.startingDate.seconds < el2.startingDate.seconds) {\r\n                    return -1;\r\n                }\r\n                if (el1.startingDate.seconds > el2.startingDate.seconds) {\r\n                    return 1;\r\n                }\r\n                return 0;\r\n            })\r\n    }\r\n\r\n    static FilterDaysAfterToday(\r\n        array: ClosingDay[]\r\n    ): ClosingDay[] {\r\n        const todayMidnight = new Date();\r\n        todayMidnight.setHours(0, 0, 0, 0);\r\n        return array.filter((el) => el.startingDate.seconds >= Math.floor(todayMidnight.getTime() / 1000))\r\n    }\r\n\r\n    static formatDaysToHumanDate(\r\n        array: ClosingDay[]\r\n    ): ClosingDayForHumans[] {\r\n        return array\r\n            .map((el) => {\r\n                return {\r\n                    rangeId: el.rangeId,\r\n                    startingDate: el.startingDate.toDate(),\r\n                    endingDate:\r\n                        el.startingDate.seconds === el.endingDate.seconds\r\n                            ? null\r\n                            : el.endingDate.toDate(),\r\n                };\r\n            });\r\n    }\r\n\r\n    static IsItOpenToday = (d: Date | null, closingDays: ClosingDay[]): boolean => {\r\n        d?.setHours(0, 0, 0, 0);\r\n        const day = (d || new Date()).getDay();\r\n        const month = (d || new Date()).getMonth();\r\n        let res = true;\r\n        // Sunday open only between june and september included\r\n        if (day === 0 && (month > 8 || month < 5)) {\r\n            res = false;\r\n        }\r\n        // get and inject specific closed day from closing days form\r\n        if (\r\n            d &&\r\n            closingDays.find(\r\n                (el) =>\r\n                    el.startingDate.seconds * 1000 <= d?.getTime() &&\r\n                    el.endingDate.seconds * 1000 >= d?.getTime()\r\n            )\r\n        ) {\r\n            res = false;\r\n        }\r\n        return res;\r\n    };\r\n\r\n    static SetMinimalDay(minimalDay: Date, closingDays: ClosingDay[]): Date {\r\n        // Set à minuit\r\n        minimalDay.setHours(0, 0, 0, 0);\r\n        // Set à dans deux jours, délai minimum de livraison\r\n        minimalDay.setDate(new Date().getDate() + 2);\r\n        // Si on est samedi entre octobre et mai inclus, on tombe le lundi mais le dimanche n'est pas ouvré donc on rajoute un jour\r\n        if (minimalDay.getDay() === 1 && (minimalDay.getMonth() > 8 || minimalDay.getMonth() < 5)) {\r\n            minimalDay.setDate(minimalDay.getDate() + 1);\r\n        }\r\n        // Si le jour minimum de livraison est un dimanche entre octobre et mai inclus, c'est fermé, on rajoute un jour\r\n        if (minimalDay.getDay() === 0 && (minimalDay.getMonth() > 8 || minimalDay.getMonth() < 5)) {\r\n            minimalDay.setDate(minimalDay.getDate() + 1);\r\n        }\r\n        // Si un des jours de fermeture est prévu avant le jour minimum de livraison on rajoute un jour\r\n        closingDays.forEach(closedDay => {\r\n            if (closedDay.startingDate.seconds * 1000 <= minimalDay.getTime()) {\r\n                minimalDay.setDate(minimalDay.getDate() + 1);\r\n            }\r\n        })\r\n        // Si 18h passé, ajoute un jour\r\n        if (getHours(new Date()) >= 18) {\r\n            minimalDay.setDate(minimalDay.getDate() + 1);\r\n        }\r\n        return minimalDay;\r\n    }\r\n}","import { FormGroup } from '@angular/forms';\r\nimport { FormErrorMessages } from '@models/formErrorMessages';\r\n\r\nexport class FormUtils {\r\n  static GetErrorMessage(controlName: string, form: FormGroup, errorMessages: FormErrorMessages, controlGroup?: string): string {\r\n    const errors = [];\r\n    if (controlGroup) {\r\n      if (\r\n        form.get(controlGroup)?.get(controlName)?.hasError('required')\r\n      ) {\r\n        return errorMessages[controlName].required;\r\n      }\r\n      if (form.get(controlGroup)?.get(controlName)?.errors) {\r\n        for (const key of Object.keys(\r\n          form.get(controlGroup)?.get(controlName)?.errors as {}\r\n        )) {\r\n          errors.push(errorMessages[controlName][key]);\r\n        }\r\n      }\r\n    } else {\r\n      if (form.get(controlName)?.hasError('required')) {\r\n        return errorMessages[controlName].required;\r\n      }\r\n      if (form.get(controlName)?.errors) {\r\n        for (const key of Object.keys(\r\n          form.get(controlName)?.errors as {}\r\n        )) {\r\n          errors.push(errorMessages[controlName][key]);\r\n        }\r\n      }\r\n    }\r\n    return errors.join(', ');\r\n  }\r\n}","import { AbstractControl, ValidatorFn } from '@angular/forms';\r\nexport class ValidatePassword {\r\n    static MatchPassword(controlName: string, checkControlName: string): ValidatorFn {\r\n        return (controls: AbstractControl) => {\r\n            const control = controls.get(controlName);\r\n            const checkControl = controls.get(checkControlName);\r\n            if (checkControl?.errors && !checkControl.errors['matchPassword']) {\r\n                return null;\r\n            }\r\n            if (control?.value !== checkControl?.value) {\r\n                controls.get(checkControlName)?.setErrors({ matchPassword: true });\r\n                return { matchPassword: true };\r\n            } else {\r\n                return null;\r\n            }\r\n        };\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { AngularFireAuth } from '@angular/fire/compat/auth';\r\nimport { AngularFirestore, AngularFirestoreCollection, DocumentReference } from '@angular/fire/compat/firestore';\r\nimport { Order } from '@models/order';\r\nimport { User } from '@models/user';\r\nimport { add, sub } from 'date-fns';\r\nimport firebase from 'firebase/compat/app';\r\nimport { from, map, Observable, switchMap, take } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class UserService {\r\n  private ordersCollection: AngularFirestoreCollection<Order>;\r\n\r\n  constructor(public auth: AngularFireAuth, private firestore: AngularFirestore) {\r\n    this.ordersCollection = firestore.collection<Order>('orders');\r\n  }\r\n\r\n  public getFirebaseUser(): Observable<firebase.User | null> {\r\n    return this.auth.user;\r\n  }\r\n\r\n  public getUserInfos(): Observable<User> {\r\n    return this.auth.user.pipe(\r\n      take(1),\r\n      switchMap(user => { return this.firestore.doc(`users/${user?.uid}`).valueChanges() as Observable<User> }\r\n      )\r\n    )\r\n  }\r\n\r\n  public updateUserInformations(user: User, firebaseUid: string | undefined): Observable<any> {\r\n    return from(this.firestore.doc(`users/${firebaseUid}`).update(user));\r\n  }\r\n\r\n  public deleteDeliveryAddress(firebaseUid: string | undefined): Observable<any> {\r\n    return from(this.firestore.doc(`users/${firebaseUid}`).update({\r\n      deliveryAddress: firebase.firestore.FieldValue.delete()\r\n    }));\r\n  }\r\n\r\n  public getUserOrders(firebaseUid: string): Observable<Order[]> {\r\n    return this.firestore\r\n      .collection<Order>('orders', (ref) =>\r\n        ref\r\n          .where('firebaseUid', '==', firebaseUid)\r\n      )\r\n      .valueChanges({ idField: 'orderId' });\r\n  }\r\n\r\n  public getUserOrdersForSpecificMonth(firebaseUid: string, firstDayOfMonth: Date): Observable<Order[]> {\r\n\r\n    let lastDayOfMonth = firstDayOfMonth;\r\n    lastDayOfMonth = add(lastDayOfMonth, { months: 1 });\r\n    lastDayOfMonth = sub(lastDayOfMonth, { seconds: 1 });\r\n\r\n    return this.firestore\r\n      .collection<Order>('orders', (ref) =>\r\n        ref\r\n          .where('firebaseUid', '==', firebaseUid)\r\n          .where('deliveryDate', '>=', firstDayOfMonth)\r\n          .where('deliveryDate', '<=', lastDayOfMonth)\r\n      )\r\n      .valueChanges({ idField: 'orderId' })\r\n      .pipe(\r\n        map((orders: Order[]) => orders.filter(order => !order.isCanceled)\r\n        ));\r\n  }\r\n\r\n\r\n  public placeSameOrder(order: Order): Observable<DocumentReference> {\r\n    return from(this.ordersCollection.add(order));\r\n  }\r\n\r\n  public cancelOrder(orderId: string): Observable<any> {\r\n    return from(this.firestore.doc(`orders/${orderId}`).update({ isCanceled: true }));\r\n  }\r\n\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  // Your web app's Firebase configuration\r\n  // For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\n  firebaseConfig: {\r\n    apiKey: 'AIzaSyAdqYq28vpm_FbbmvbxFju8m0kOyKrfoaU',\r\n    authDomain: 'boulangerie-m17.firebaseapp.com',\r\n    projectId: 'boulangerie-m17',\r\n    storageBucket: 'boulangerie-m17.appspot.com',\r\n    messagingSenderId: '615948873412',\r\n    appId: '1:615948873412:web:996ee9e9433f1db3016391',\r\n    measurementId: 'G-SNJSWSZG0K',\r\n  },\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic()\r\n  .bootstrapModule(AppModule)\r\n  .catch((err) => console.error(err));\r\n"],"names":[],"sourceRoot":"webpack:///"}